<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Matt Makai</title><link>http://www.letshackdc.com/</link><description></description><atom:link href="http://www.letshackdc.com/feeds/matt-makai.rss.xml" rel="self"></atom:link><lastBuildDate>Thu, 28 Apr 2016 00:00:00 -0400</lastBuildDate><item><title>R2-D2 or Skynet? Combining Slack Bots with the Twilio API</title><link>http://www.letshackdc.com/r2d2-skynet.html</link><description>&lt;p&gt;This is a rough transcript along with the slides from our
&lt;a class="reference external" href="https://www.twilio.com/signal"&gt;SIGNAL 2016&lt;/a&gt; talk from May 24, 2016.&lt;/p&gt;
&lt;p&gt;You can also find the slides without notes on my &lt;a class="reference external" href="/talks.html"&gt;tech talks&lt;/a&gt;
page. The code for the bot is open sourced under the MIT license in a
GitHub repository named
&lt;a class="reference external" href="https://github.com/makaimc/callbot"&gt;callbot&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At the end of the talk I give out bot-building resources to all the
attendees - all those linked resources are listed at the bottom of this
post.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;R2-D2 or Skynet? Combining Slack Bots with the Twilio API&lt;/strong&gt;
by &lt;a class="reference external" href="https://twitter.com/mattmakai"&gt;Matt Makai&lt;/a&gt; (Twilio) and
&lt;a class="reference external" href="https://twitter.com/degoodmanwilson"&gt;Don Goodman-Wilson&lt;/a&gt; (Slack)&lt;/p&gt;
&lt;img alt="SIGNAL page for this talk" class="talk-slide" src="/source/static/img/160428-r2d2-skynet/r2-d2-skynet-signal.png" style="width: 100%;" /&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Hey folks, my name is Matt Makai and I'm a Developer Evangelist with
Twilio. Joining me on stage is Don Goodman-Wilson, a Senior Developer
Advocate from Slack. Welcome to &amp;quot;R2-D2 or Skynet?&amp;quot; Today we're going to
show how to combine the Slack and Twilio APIs and learn about good
bot-building practices.&lt;/p&gt;
&lt;img alt="Title slide for talk" class="talk-slide" src="/source/static/img/160428-r2d2-skynet/r2-d2-skynet-title.png" style="width: 100%;" /&gt;
&lt;p&gt;Back in March, Twilio launched
&lt;a class="reference external" href="https://www.twilio.com/blog/2016/03/tutorials-the-new-documentation-experience-from-twilio.html"&gt;Tutorials&lt;/a&gt;,
a new feature on the &lt;a class="reference external" href="https://www.twilio.com/docs"&gt;Twilio documentation&lt;/a&gt;.
If you're a developer working on common features that incorporate Twilio,
such as two-factor authentication or building an interactive voice response
(IVR) system, you could find a tutorial with the code in your programming
language along with an entire step-by-step walkthrough for how to add that
feature to your application.&lt;/p&gt;
&lt;img alt="Tutorials by Twilio launch blog post slide" class="talk-slide" src="/source/static/img/160428-r2d2-skynet/tutorials-blog-post.jpg" style="width: 100%;" /&gt;
&lt;p&gt;The launch involved about a dozen people at Twilio within the
&lt;a class="reference external" href="https://www.youtube.com/watch?v=TF129ioe8kc"&gt;Developer Network team&lt;/a&gt;.
Even with a reasonable size team we ran into issues manually scaling our
communication across everyone on the team, such as when blog posts were
going live.&lt;/p&gt;
&lt;img alt="The DevNetwork as 8-bit characters" class="talk-slide" src="/source/static/img/160428-r2d2-skynet/tutorials-launch.jpg" style="width: 100%;" /&gt;
&lt;p&gt;Twilio's mission is to empower developers to build the future of
communications. Internally, we use many tools to help us accomplish that
mission.&lt;/p&gt;
&lt;img alt="Twilio logo" class="talk-slide" src="/source/static/img/160428-r2d2-skynet/twilio-logo.jpg" style="width: 100%;" /&gt;
&lt;p&gt;One of those tools is Slack, which Twilio uses company-wide. A new Slack
channel was born with everyone who was on point for the launch.&lt;/p&gt;
&lt;img alt="We used Slack to coordinate team activities (Slack logo)" class="talk-slide" src="/source/static/img/160428-r2d2-skynet/slack-logo.jpg" style="width: 100%;" /&gt;
&lt;p&gt;Slack's mission is to make people's working lives simpler, more pleasant
and more productive.&lt;/p&gt;
&lt;img alt="Slack's mission statement" class="talk-slide" src="/source/static/img/160428-r2d2-skynet/slides/slack-mission.jpg" style="width: 100%;" /&gt;
&lt;p&gt;During our tutorials launch, we faced scaling challenges that we might've
been able to overcome if we had better automated communication.&lt;/p&gt;
&lt;img alt="Blog posts picture" class="talk-slide" src="/source/static/img/160428-r2d2-skynet/100-tutorials.png" style="width: 100%;" /&gt;
&lt;p&gt;There is definitely a better way to handle all these logistics. The
answer is spreadsheets. Lots and lots of spreadsheets.&lt;/p&gt;
&lt;img alt="Spreadsheets. Tons of them." class="talk-slide" src="/source/static/img/160428-r2d2-skynet/spreadsheets.png" style="width: 100%;" /&gt;
&lt;p&gt;No, not really spreadsheets. We're &lt;em&gt;software developers&lt;/em&gt;. We're on
the side of good - the ones that want to rid the world of spreadsheets,
not make them proliferate.&lt;/p&gt;
&lt;img alt="Developers looking down at code." class="talk-slide" src="/source/static/img/160428-r2d2-skynet/slides/developers.jpg" style="width: 100%;" /&gt;
&lt;p&gt;Our Slackbot should start out friendly, with helpful nudges like
R2-D2's bleeps and boops.&lt;/p&gt;
&lt;img alt="R2-D2 from Star Wars. Image credit: http://preview.turbosquid.com/Preview/2014/07/11__11_24_34/Textured2.jpg183b598c-faf6-4f34-a025-5bbb19571f9bOriginal.jpg" class="talk-slide" src="/source/static/img/160428-r2d2-skynet/slides/r2-d2.jpg" style="width: 100%;" /&gt;
&lt;p&gt;...but the bot goes full Skynet mode if you just never respond.&lt;/p&gt;
&lt;img alt="Terminator artwork. Image credit: http://orig14.deviantart.net/5dbc/f/2014/005/f/5/skynet_t800_factory_2__wallpaper__by_dadmad-d70yq68.png" class="talk-slide" src="/source/static/img/160428-r2d2-skynet/slides/skynet.jpg" style="width: 100%;" /&gt;
&lt;p&gt;What we could use are smart bots in Slack with some
intelligence based on our launch schedule and the list of people involved.&lt;/p&gt;
&lt;img alt="We need bots." class="talk-slide" src="/source/static/img/160428-r2d2-skynet/bots.jpg" style="width: 100%;" /&gt;
&lt;p&gt;How would this Slack Bot scheduling utopia work? Well, rather than just
talk about it, let's launch something together right now.&lt;/p&gt;
&lt;img alt="Launching Twilio blog post together. Image courtesy of Wikipedia (https://upload.wikimedia.org/wikipedia/commons/f/fb/Launch_of_Falcon_9_carrying_ABS-EUTELSAT_%2816510241270%29.jpg)." class="talk-slide" src="/source/static/img/160428-r2d2-skynet/slides/launch.jpg" style="width: 100%;" /&gt;
&lt;p&gt;Here are the three items part of our launch today: open source a GitHub
project named &amp;quot;callbot&amp;quot;, publish a Twilio blog post and social promote
with &amp;#64;twilio.&lt;/p&gt;
&lt;img alt="We're launching 3 items today: open source project, blog post and giving it a boost with a tweet from &amp;#64;twilio." class="talk-slide" src="/source/static/img/160428-r2d2-skynet/launch-phone-calls-in-slack.png" style="width: 100%;" /&gt;
&lt;p&gt;We need a Slack channel to coordinate our launch, so we created one at
draw-the-owl-bot.slack.com. Now we need your help. Get out your phones.
Join the channel by texting (415) 689-xxxx.&lt;/p&gt;
&lt;img alt="iPhone held in hand. Image credit: http://cdn2.macworld.co.uk/cmsdata/features/3589633/iphone_6s_review_20.jpg" class="talk-slide" src="/source/static/img/160428-r2d2-skynet/slides/get-out-phones.jpg" style="width: 100%;" /&gt;
&lt;p&gt;Our demo assistant is &amp;quot;Draw the Owl Bot&amp;quot;, after one of Twilio's core
values named after the
&lt;a class="reference external" href="http://s3.amazonaws.com/marquee-test-akiaisur2rgicbmpehea/R7x3FamR2K1LHtgwZURc_Screen%20Shot%202015-11-17%20at%204.01.11%20PM.png"&gt;Draw the Owl Bot&lt;/a&gt;
meme.&lt;/p&gt;
&lt;img alt="Our Slack assistant today is the Draw the Owl Bot" class="talk-slide" src="/source/static/img/160428-r2d2-skynet/draw-the-owl-bot-title.png" style="width: 100%;" /&gt;
&lt;p&gt;Here's how our bot architecture works. When you sent a text message to our
Slack bot's phone number, that was actually a number on Twilio. Twilio then
sent an HTTP POST request to the Draw the Owl Bot and it responded with
TwiML. Draw the Owl Bot then made a call to the Slack API to post a message.&lt;/p&gt;
&lt;img alt="Draw the Owl Bot architecture." class="talk-slide" src="/source/static/img/160428-r2d2-skynet/draw-the-owl-bot.png" style="width: 100%;" /&gt;
&lt;p&gt;The Slack API is a very important part of the architecture, so here's more
context about it.&lt;/p&gt;
&lt;img alt="More information about the Slack web API." class="talk-slide" src="/source/static/img/160428-r2d2-skynet/slack-web-api.png" style="width: 100%;" /&gt;
&lt;p&gt;The Slack web API has a couple of methods that we're using in our talk
today.&lt;/p&gt;
&lt;img alt="Web API methods our Slack bot uses" class="talk-slide" src="/source/static/img/160428-r2d2-skynet/slack-web-api-methods.png" style="width: 100%;" /&gt;
&lt;p&gt;Here are some important points about the Slack Real Time Messaging API.&lt;/p&gt;
&lt;img alt="Slack Real Time Messaging API notes" class="talk-slide" src="/source/static/img/160428-r2d2-skynet/real-time-messaging-api.png" style="width: 100%;" /&gt;
&lt;p&gt;Let's finally get to the launch! (Demo done in Slack console.)&lt;/p&gt;
&lt;img alt="Let's launch our open source project!" class="talk-slide" src="/source/static/img/160428-r2d2-skynet/lets-launch.png" style="width: 100%;" /&gt;
&lt;p&gt;The demo architecture was a bit different than when people texted in
the first time. In this case, we're going from the Slack user interface
via their web app, with outbound communication to phones.&lt;/p&gt;
&lt;img alt="Architecture for the Draw the Owl Bot demo." class="talk-slide" src="/source/static/img/160428-r2d2-skynet/demo-architecture.png" style="width: 100%;" /&gt;
&lt;p&gt;Here are several rules for building great bots based on what Slack's
seen so far with their API.&lt;/p&gt;
&lt;img alt="Notes for building a great bot." class="talk-slide" src="/source/static/img/160428-r2d2-skynet/build-great-bot.png" style="width: 100%;" /&gt;
&lt;p&gt;For every interaction, ask yourself if it's necessary and makes people's
lives better and their jobs easier.&lt;/p&gt;
&lt;img alt="Rules for every interaction." class="talk-slide" src="/source/static/img/160428-r2d2-skynet/every-interaction.png" style="width: 100%;" /&gt;
&lt;p&gt;Thanks for launching with us! Let's quickly see how we're doing on our
GitHub stars and retweets.&lt;/p&gt;
&lt;img alt="Thanks for launching with us!" class="talk-slide" src="/source/static/img/160428-r2d2-skynet/thanks-launching.png" style="width: 100%;" /&gt;
&lt;p&gt;To paraphrase Jeff Lawson, our CEO and co-founder, we can't wait to
see what bots you build.&lt;/p&gt;
&lt;img alt="We can't wait to see what bots you build." class="talk-slide" src="/source/static/img/160428-r2d2-skynet/cant-wait.jpg" style="width: 100%;" /&gt;
&lt;p&gt;Thanks again! My name is Matt Makai and I'm a Developer Evangelist
with Twilio, this is Don Goodman-Wilson from Slack. We'll be happy
to answer questions in the hallway or contact us with the information
on this slide.&lt;/p&gt;
&lt;img alt="Our contact information." class="talk-slide" src="/source/static/img/160428-r2d2-skynet/contact-info.png" style="width: 100%;" /&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Resources given out via SMS during this talk provided below.&lt;/p&gt;
&lt;div class="section" id="more-bot-building-resources"&gt;
&lt;h2&gt;More Bot-building Resources&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2016/05/build-sms-slack-bot-python.html"&gt;How to Build SMS Slack Bots with Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2016/05/add-phone-calling-slack-python.html"&gt;Add A Phone Calling Bot to Slack with Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://realpython.com/blog/python/getting-started-with-the-slack-api-using-python-and-flask/"&gt;Getting Started with the Slack API using Python and Flask&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.fullstackpython.com/blog/send-sms-text-messages-python.html"&gt;How to Send SMS Text Messages with Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.fullstackpython.com/bots.html"&gt;Bots page on Full Stack Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/slackhq/python-rtmbot"&gt;Python-RTMBot&lt;/a&gt; is Slack's
library for creating Slack bots in Python&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jamesthom.as/blog/2015/05/29/phonebot/"&gt;PhoneBot with IBM Watson and Twilio Voice&lt;/a&gt;
along with the &lt;a class="reference external" href="https://github.com/IBM-Bluemix/phonebot"&gt;GitHub repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://howdy.ai/botkit/"&gt;BotKit&lt;/a&gt; is a bot-building framework for JavaScript&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://venturebeat.com/2016/05/21/the-5-branches-of-conversational-commerce-a-guide-for-the-bot-curious/"&gt;The 5 branches of conversational commerce: A guide to the bot world&lt;/a&gt; by Jeff Lawson&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Thu, 28 Apr 2016 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2016-04-28:r2d2-skynet.html</guid></item><item><title>My 2016 Year Ahead in Software Development</title><link>http://www.letshackdc.com/2016-year-ahead-software-development.html</link><description>&lt;p&gt;With my
&lt;a class="reference external" href="/2015-software-development-year-review.html"&gt;2015 software development year in review&lt;/a&gt;
done, I'm going to use this post to try something new: looking ahead at the big
picture for what I want to accomplish in software throughout 2016. While I have a
lot personally to look forward to in this year, I'm going to write strictly
about my professional software career here.&lt;/p&gt;
&lt;p&gt;The following goals are the high level objectives for the 366 days in 2016:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Code, launch and operate my 2016 side project
&lt;a class="reference external" href="https://github.com/makaimc/plapi"&gt;Plapi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Inspire and equip fellow developers as a
&lt;a class="reference external" href="https://www.youtube.com/watch?v=TF129ioe8kc"&gt;Twilio Developer Evangelist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Release several new updates to
&lt;a class="reference external" href="http://www.deploypython.com/"&gt;The Full Stack Python Guide to Deployments&lt;/a&gt; book
(free for existing customers)&lt;/li&gt;
&lt;li&gt;Build on the &lt;a class="reference external" href="https://www.fullstackpython.com/"&gt;Full Stack Python&lt;/a&gt; foundation
with daily updates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's dig in with more details on what each one of those objectives entails.&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Plapi&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/makaimc/plapi"&gt;The Programming Languages Web API (Plapi)&lt;/a&gt;
is my &lt;a class="reference external" href="/work.html"&gt;2016 side project&lt;/a&gt;. Plapi consists of three components:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Web application programming interface: api.plapi.io&lt;/li&gt;
&lt;li&gt;Web application and documentation for the API: www.plapi.io&lt;/li&gt;
&lt;li&gt;iOS mobile app in App Store (perhaps an Android app if there's time)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Over the 2015 holidays I made a solid start on the API codebase. The web app
is just a skeleton and the iOS mobile app, which will be written in Swift, will
be started within the next few weeks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="twilio-developer-evangelism"&gt;
&lt;h2&gt;Twilio Developer Evangelism&lt;/h2&gt;
&lt;p&gt;There's a whole lot of work to do in my day job at Twilio. 2016 will be a rush
of inspiring and equipping fellow developers with existing APIs such as
&lt;a class="reference external" href="https://www.twilio.com/voice"&gt;Voice&lt;/a&gt;, &lt;a class="reference external" href="https://www.twilio.com/sms"&gt;SMS&lt;/a&gt;,
&lt;a class="reference external" href="https://www.twilio.com/mms"&gt;MMS&lt;/a&gt; and &lt;a class="reference external" href="https://www.twilio.com/client"&gt;Client&lt;/a&gt;.
In addition, there's new work to be done now that
&lt;a class="reference external" href="https://www.twilio.com/ip-messaging"&gt;IP Messaging&lt;/a&gt; and
&lt;a class="reference external" href="https://www.twilio.com/video"&gt;Video&lt;/a&gt; have opened for public beta. It's an
incredibly exciting time to be at Twilio. Our Developer Network crew
(which encompasses Developer Evangelism) is fortunate to be on the front
lines working with developers helping
them learn how to incorporate the APIs and SDKs into their apps as well as giving
their feedback to our internal developers.&lt;/p&gt;
&lt;p&gt;Much of the work will be based on what we know works, such as:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Coding and writing new apps and blog posts like
&lt;a class="reference external" href="https://www.twilio.com/blog/2015/09/warm-phone-call-transfers-with-python-flask-and-twilio-voice.html"&gt;Warm Phone Call Transfers&lt;/a&gt;
(&lt;a class="reference external" href="https://github.com/makaimc/python-warm-transfer-call"&gt;Python/Flask code&lt;/a&gt;),
&lt;a class="reference external" href="https://www.twilio.com/blog/2015/12/city-chat-with-python-django-and-twilio-ip-messaging.html"&gt;City Chat&lt;/a&gt;
(&lt;a class="reference external" href="https://github.com/makaimc/city-chat"&gt;Python/Django code&lt;/a&gt;) and
&lt;a class="reference external" href="https://www.twilio.com/blog/2015/01/net-promoter-score-python-sms.html"&gt;Calculating Net Promoter Score via Twilio SMS&lt;/a&gt; (&lt;a class="reference external" href="https://github.com/makaimc/sms-net-promoter-score"&gt;Python code&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Putting on one of the best developer conferences:
&lt;a class="reference external" href="https://www.twilio.com/signal"&gt;Signal 2016&lt;/a&gt;, which will be even better after
having such a great time at Signal 2015.&lt;/li&gt;
&lt;li&gt;Serving my fellow colleagues on the Developer Network crew in whatever capacity
they need to continue knocking it out of the park on their executions&lt;/li&gt;
&lt;li&gt;Reaching developers outside my traditional circles, such as by streaming coding
on Livecoding.tv or Twitch Creative.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;Full Stack Python&lt;/h2&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://www.fullstackpython.com/"&gt;Full Stack Python website&lt;/a&gt; was visited by
over 455,000 users in 2015 according to Google Analytics. I hope to more than double
the number of readers to over a million throughout 2016 by working on the following
improvements:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Improve existing pages with major updates such as new sections and links&lt;/li&gt;
&lt;li&gt;Write new topic pages based on readers' requests&lt;/li&gt;
&lt;li&gt;Create new visuals to help readers connect the dots on related subjects, for
example how reverse proxy servers work with WSGI servers&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you have suggestions and feedback on the work I'm doing, please tweet me
&lt;a class="reference external" href="https://twitter.com/mattmakai"&gt;&amp;#64;mattmakai&lt;/a&gt; or
&lt;a class="reference external" href="https://twitter.com/fullstackpython"&gt;&amp;#64;fullstackpython&lt;/a&gt; or send me an email
(just a heads up though that I'm pretty slow to respond to most emails since I
try to batch them up and answer them in bulk).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="guide-to-python-deployments-book"&gt;
&lt;h2&gt;Guide to Python Deployments Book&lt;/h2&gt;
&lt;p&gt;I'm working on updates to
&lt;a class="reference external" href="http://www.deploypython.com/"&gt;The Full Stack Python Guide to Deployments book&lt;/a&gt;
that'll be released in 2016. Some of the updates will be about keeping up with
the latest versions of software used (such as Ansible 2.0), while other updates
will add new content to help readers continue learning about Python web app
deployments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="time-to-dig-in"&gt;
&lt;h2&gt;Time to Dig In&lt;/h2&gt;
&lt;p&gt;With those four big picture priorities on my mind it's time to get started coding
and writing. We'll see in December how it all went.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Fri, 01 Jan 2016 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2016-01-01:2016-year-ahead-software-development.html</guid></item><item><title>My 2015 Software Development Year in Review</title><link>http://www.letshackdc.com/2015-software-development-year-review.html</link><description>&lt;p&gt;The end of the year is a good time to step back and take stock of everything
accomplished throughout the past 365 days. This software development
year in review post continues the retrospectives I performed in
&lt;a class="reference external" href="/2012-development-year-in-review.html"&gt;2012&lt;/a&gt;,
&lt;a class="reference external" href="/2013-development-year-in-review.html"&gt;2013&lt;/a&gt; and
&lt;a class="reference external" href="/2014-software-development-year-review.html"&gt;2014&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="highlights"&gt;
&lt;h2&gt;2015 Highlights&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Writing and releasing my first book,
&lt;a class="reference external" href="http://www.deploypython.com/"&gt;The Full Stack Python Guide to Deployments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Expanding &lt;a class="reference external" href="https://www.fullstackpython.com/"&gt;fullstackpython.com&lt;/a&gt;'s
content with
&lt;a class="reference external" href="https://github.com/makaimc/fullstackpython.com/commits/gh-pages"&gt;many open source code commits&lt;/a&gt; while growing the audience from 18,000 to over
55,000 readers per month&lt;/li&gt;
&lt;li&gt;Speaking at PyCon US with both Renee Chu and Kate Heddleston&lt;/li&gt;
&lt;li&gt;Presenting my all time favorite tech talk at
&lt;a class="reference external" href="http://www.meetup.com/sfpython/events/219577721/"&gt;SF Python&lt;/a&gt;:
&lt;a class="reference external" href="https://www.youtube.com/watch?v=L5YQbNrFfyw"&gt;Asynchronous Python Web Apps with WebSockets and gevent&lt;/a&gt;,
which was all live-coded except for a few introduction slides&lt;/li&gt;
&lt;li&gt;Working with the
&lt;a class="reference external" href="https://www.youtube.com/watch?v=TF129ioe8kc"&gt;Twilio Developer Network&lt;/a&gt;
to execute the incredible
&lt;a class="reference external" href="https://www.twilio.com/signal"&gt;Signal 2015 developers conference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Creating and deploying the initial version of
&lt;a class="reference external" href="https://github.com/makaimc/plapi"&gt;The Programming Languages Web API (Plapi)&lt;/a&gt;
(along with working on the
&lt;a class="reference external" href="https://github.com/makaimc/plapi-prototype-flask"&gt;Flask prototype&lt;/a&gt;),
which will be my primary 2016 side project&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="coding"&gt;
&lt;h2&gt;Coding&lt;/h2&gt;
&lt;p&gt;All of my technical writing is based on open source coding projects.
Typically I start a project prototype with a fury of programming in a couple
of days or weeks. Then I'll write a blog post on it. In some cases, that's
the end of both the programming and writing unless there are bugs found or
unexpected questions asked by the community that make me want to take the
project further.&lt;/p&gt;
&lt;p&gt;In other cases, the initial code is a foundation for a larger effort
that weaves coding, writing and speaking together. In these cases, such
as with &lt;a class="reference external" href="http://codingacrossamerica.com/"&gt;Coding Across America&lt;/a&gt;,
Full Stack Python, Choose Your Own Adventure Presentations, The Full
Stack Python Guide to Deployments and &lt;a class="reference external" href="https://www.plapi.io"&gt;Plapi&lt;/a&gt;,
I seek a fast feedback loop based on in-person and online conversations,
pull requests, GitHub issues, online comments, emails and tweets.
Updates are made based on the feedback received.&lt;/p&gt;
&lt;p&gt;These are some of the projects that followed the community feedback
formula that will continue in 2016:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Started &lt;a class="reference external" href="https://github.com/makaimc/compare-python-web-frameworks"&gt;comparing Python web frameworks&lt;/a&gt;
to expand beyond my typical
&lt;a class="reference external" href="http://www.fullstackpython.com/django.html"&gt;Django&lt;/a&gt; and
&lt;a class="reference external" href="http://www.fullstackpython.com/flask.html"&gt;Flask&lt;/a&gt; frameworks usage&lt;/li&gt;
&lt;li&gt;Created an &lt;a class="reference external" href="https://github.com/makaimc/fsp-deployment-guide"&gt;open source Ansible playbook&lt;/a&gt;
for deploying WSGI applications as a companion to my deployments book&lt;/li&gt;
&lt;li&gt;Wrote a
&lt;a class="reference external" href="https://github.com/makaimc/plapi-prototype-flask"&gt;Plapi prototype with Flask and Flask-RESTful&lt;/a&gt;
then began the version 1 codebase with
&lt;a class="reference external" href="https://github.com/makaimc/plapi"&gt;Django and Django REST Framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Updated the &lt;a class="reference external" href="http://docs.ansible.com/ansible/twilio_module.html"&gt;Twilio Ansible module&lt;/a&gt;
to support &lt;a class="reference external" href="https://www.twilio.com/mms"&gt;multimedia messages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To keep the above projects moving forward I try to make an improvement and
Git commit every day to at least one of them. In 2014, I missed 3 days out
of 365. This year I missed 2 days, which snapped my 505 day commit streak
but is still crazy in how consistent I was able to be despite my intense
travel schedule. There were several hundred more private commits but here
is how the public commit chart turned out:&lt;/p&gt;
&lt;img alt="GitHub commits for 2015" src="/source/static/img/151230-year-review/github-commits.png" style="width: 100%;" /&gt;
&lt;p&gt;The vast majority of the above commits were Python code. I probably wrote
85% of my code in Python (although some subset of that is JavaScript on the
front end when necessary) and about 15% in Swift. That ratio will ideally
change in 2016 to about 65% Python and 35% Swift, with far more of the
Swift code as open source than I was able to accomplish this year.&lt;/p&gt;
&lt;p&gt;I also started &lt;a class="reference external" href="/live-coding.html"&gt;live code streaming&lt;/a&gt; in the second
half of this year on both Livecoding.tv and Twitch Creative. The dozen
streams added up to about 18 hours of video. There is still a lot of work to
figure out how well these platforms work. However, the initial results
are encouraging.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="writing"&gt;
&lt;h2&gt;Writing&lt;/h2&gt;
&lt;p&gt;The majority of my technical writing this year was for
&lt;a class="reference external" href="https://www.twilio.com/blog/author/mmakai"&gt;Twilio&lt;/a&gt;,
&lt;a class="reference external" href="http:///www.deploypython.com/"&gt;my Python deployments book&lt;/a&gt; and
&lt;a class="reference external" href="http://www.fullstackpython.com/"&gt;Full Stack Python&lt;/a&gt;. My goal in writing
is to be accessible to developers of all skill levels. I skew towards
pragmatic projects and much of my writing boils down to &amp;quot;&lt;em&gt;try out this
tutorial and you'll learn x, y and z&lt;/em&gt;&amp;quot;. My 2015 Twilio blog posts closely
followed this formula:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2015/12/city-chat-with-python-django-and-twilio-ip-messaging.html"&gt;City Chat with Python, Django and Twilio IP Messaging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2015/09/warm-phone-call-transfers-with-python-flask-and-twilio-voice.html"&gt;Warm Phone Call Transfers with Python, Flask and Twilio Voice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2015/01/net-promoter-score-python-sms.html"&gt;Calculating Net Promoter Score with Python and SMS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The three part series that continues building out the
&lt;a class="reference external" href="https://github.com/makaimc/choose-your-own-adventure-presentations"&gt;Choose Your Own Adventure Presentation&lt;/a&gt;
Flask application:&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2015/03/choose-your-own-adventures-presentations-wizard-mode-part-1-of-3.html"&gt;Choose Your Own Adventure Presentations: Wizard Mode Part 1 of 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2015/05/choose-your-own-adventure-presentations-wizard-mode-part-2-of-3.html"&gt;Choose Your Own Adventure Presentations: Wizard Mode Part 2 of 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2015/07/choose-your-own-adventure-presentations-flask-reveal-js-websockets.html"&gt;Choose Your Own Adventure Presentations: Wizard Mode Part 3 of 3&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2015/05/how-to-build-your-own-hackpack.html"&gt;How to Build Your Own Hackpack&lt;/a&gt;
and &lt;a class="reference external" href="https://www.twilio.com/blog/2015/02/multi-channel-support-desk-taskrouter.html"&gt;Building A Multi Channel Support Desk with TaskRouter&lt;/a&gt;
which I had the pleasure of coding and writing with the incredible
&lt;a class="reference external" href="http://blog.rickyrobinett.com/"&gt;Ricky Robinett&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These tutorials are solid executions of inspiring and equipping fellow
software developers that I look forward to continuing to write in 2016.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="speaking"&gt;
&lt;h2&gt;Speaking&lt;/h2&gt;
&lt;p&gt;My technical talks delivery was a tale of two halves in 2015. The first half of
the year I gave one of my favorite talks ever at
SF Python called
&lt;a class="reference external" href="https://www.youtube.com/watch?v=L5YQbNrFfyw"&gt;Async Python Web Apps with WebSockets and gevent&lt;/a&gt;.
The aspect I enjoyed the most about this talk was that it was almost all lived
coded and there were several sections where the audience could interact with what
I was building.&lt;/p&gt;
&lt;p&gt;In April I was fortunate enough to have two incredible speaking partners in Kate
Heddleston and Renee Chu for two PyCon US talks. Both talks went well. However,
afterwards I was exhausted and realized that over the past couple of years I gave
over fifty full length talks. Most of those talks were new or customized for the
audience since that's what typically produces the best results for the folks who
are taking time to listen to what you have to say. It's difficult to keep that
pace though so I significantly cut back as I moved from DC to SF in June.&lt;/p&gt;
&lt;p&gt;There hasn't been a subject that I've been excited enough to get back into crafting
a new talk. I still give plenty of live coded demos and shorter talks but for now
I'm going to chill on tech talks to focus on coding Plapi and writing Full Stack
Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="onward"&gt;
&lt;h2&gt;Onward&lt;/h2&gt;
&lt;p&gt;It's been a good year across my major focus areas in software development. 2016
will be another solid year of learning, growth and software delivery. For more on
that, check out my
&lt;a class="reference external" href="2016-year-ahead-software-development.html"&gt;software development year ahead in 2016&lt;/a&gt;
post.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 30 Dec 2015 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2015-12-30:2015-software-development-year-review.html</guid></item><item><title>PyCon WSGI Deployment Adventure Links</title><link>http://www.letshackdc.com/pycon-wsgi-deployment-adventure-links.html</link><description>&lt;p&gt;At PyCon 2015 in Montreal, &lt;a class="reference external" href="http://www.kateheddleston.com/"&gt;Kate Heddleston&lt;/a&gt;
and I presented
&lt;a class="reference external" href="https://us.pycon.org/2015/schedule/presentation/336/"&gt;Choose Your Own WSGI Deployment Adventure&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you'd like to create your own Choose Your Own Adventure presentations,
all the code is open source and there are blog posts detailing how the code
was written. Here are the links to get you going:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/makaimc/choose-your-own-adventure-presentations"&gt;Choose Your Own Adventures Git repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2014/11/choose-your-own-adventure-presentations-with-reveal-js-python-and-websockets.html"&gt;Choose Your Own Adventure Presentations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2015/03/choose-your-own-adventures-presentations-wizard-mode-part-1-of-3.html"&gt;Choose Your Own Adventure Presentations: Wizard Mode Part 1 of 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Choose Your Own Adventure Presentations: Wizard Mode Part 2 of 3 (coming soon!)&lt;/li&gt;
&lt;li&gt;Choose Your Own Adventure Presentations: Wizard Mode Part 3 of 3 (coming soon!)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the topics we covered during the talk, and the many other deployment
subjects we did not explain, make sure to check out
&lt;a class="reference external" href="http://www.fullstackpython.com"&gt;Full Stack Python&lt;/a&gt;. These pages in
particular will be useful if you want to learn about deploying and
running WSGI applications:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.fullstackpython.com/deployment.html"&gt;Deployments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.fullstackpython.com/wsgi-servers.html"&gt;WSGI servers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.fullstackpython.com/web-analytics.html"&gt;Web analytics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.fullstackpython.com/configuration-management.html"&gt;Configuration management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.fullstackpython.com/web-frameworks.html"&gt;Web frameworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.fullstackpython.com/logging.html"&gt;Logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.fullstackpython.com/task-queues.html"&gt;Task queues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, there's a
&lt;a class="reference external" href="http://www.fullstackpython.com/table-of-contents.html"&gt;huge table of contents&lt;/a&gt;
that lays out every subject categories. Don't forget that Full Stack Python
itself is &lt;a class="reference external" href="https://github.com/makaimc/fullstackpython.com"&gt;also open source&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;We hope that our Choose Your Own WSGI Deployment Adventure talk
made you laugh and maybe learn a little bit more about Python
web application deployments.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2015-04-11:pycon-wsgi-deployment-adventure-links.html</guid></item><item><title>Resources for WebSockets with Python</title><link>http://www.letshackdc.com/websockets-python-resources.html</link><description>&lt;p&gt;Before you learn node.js to handle WebSockets or any type of full-duplex
client-server communication, check out some Python options first. In this
post I'll lay out some of the resources that I found most helpful for getting
started coding Python web applications that use WebSockets.&lt;/p&gt;
&lt;p&gt;It's not necessary to have seen either talk but this page goes along with the
&lt;a class="reference external" href="http://www.meetup.com/sfpython/events/219577721/"&gt;San Francisco Python January 2015 meetup&lt;/a&gt;
and
&lt;a class="reference external" href="http://www.meetup.com/django-district/events/220439364/"&gt;Django District March 2015 meetup&lt;/a&gt;
events.&lt;/p&gt;
&lt;p&gt;Before diving in make sure you check out the
&lt;a class="reference external" href="http://www.fullstackpython.com/websockets.html"&gt;WebSockets page on Full Stack Python&lt;/a&gt;.
The page is new so it's a bit sparse at the moment but I'll continue filling
it out throughout the rest of the month.&lt;/p&gt;
&lt;p&gt;One more shamless plug: if you're going to PyCon this year make sure to check
out the talks
&lt;a class="reference external" href="https://us.pycon.org/2015/schedule/presentation/421/"&gt;virtualenv for new Pythonista&lt;/a&gt; on Friday
and
&lt;a class="reference external" href="https://us.pycon.org/2015/schedule/presentation/336/"&gt;Choose Your Own WSGI Deployment Adventure&lt;/a&gt; on Saturday.&lt;/p&gt;
&lt;div class="section" id="code-for-the-websockets-talk"&gt;
&lt;h2&gt;Code for the WebSockets Talk&lt;/h2&gt;
&lt;p&gt;All code for the meetup live demo can be found on
&lt;a class="reference external" href="https://github.com/makaimc/python-websockets-example"&gt;GitHub in the python-websockets-example repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The
&lt;a class="reference external" href="/presentations/2015-sfpython-websockets.html"&gt;slides are also available&lt;/a&gt;
but do not make a lot of sense without corresponding audio of the
presentation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="general-websocket-resources"&gt;
&lt;h2&gt;General WebSocket resources&lt;/h2&gt;
&lt;p&gt;The below WebSocket resources aren't specific to Python but it's a good
idea to get grounded in the technology itself first.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;There is an official
&lt;a class="reference external" href="http://www.faqs.org/rfcs/rfc6455.html"&gt;RFC for WebSockets&lt;/a&gt; that is a good
place to start if you prefer to go straight to the source. I generally
read a few summaries by other folks before diving into an RFC.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lucumr.pocoo.org/2012/9/24/websockets-101/"&gt;WebSockets 101&lt;/a&gt;
provides context for what's good and not so good about the WebSockets
protocol.&lt;/li&gt;
&lt;li&gt;Can I Use? has a nice chart for what
&lt;a class="reference external" href="http://caniuse.com/#feat=websockets"&gt;browsers and versions support WebSockets&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.mozilla.org/en-US/docs/WebSockets"&gt;Mozilla's WebSockets documentation&lt;/a&gt; is good for a range of explanations and tutorials.&lt;/li&gt;
&lt;li&gt;This
&lt;a class="reference external" href="http://chimera.labs.oreilly.com/books/1230000000545/ch17.html"&gt;chapter from High Performance Browsering Networking&lt;/a&gt;
is a comprehensive overview of WebSockets.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="evented-networking-frameworks"&gt;
&lt;h2&gt;Evented networking frameworks&lt;/h2&gt;
&lt;p&gt;I recommend reading the
&lt;a class="reference external" href="https://github.com/vinta/awesome-python#concurrency-and-networking"&gt;awesome-python list of concurrency and networking libraries&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the SF Python January 2015 and Django District March 2015 meetup groups
I used
&lt;a class="reference external" href="http://www.gevent.org/"&gt;gevent&lt;/a&gt; with Flask,
&lt;a class="reference external" href="https://flask-socketio.readthedocs.org/en/latest/"&gt;Flask-SocketIO&lt;/a&gt; and
&lt;a class="reference external" href="http://socket.io/"&gt;SocketIO&lt;/a&gt; to handle WebSocket connections.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="websockets-with-python-web-frameworks"&gt;
&lt;h2&gt;WebSockets with Python web frameworks&lt;/h2&gt;
&lt;p&gt;These resources are specific to using WebSockets with Python web frameworks
like Django, Flask and Bottle and Klein. Each tutorial will show you
step-by-step how to implement WebSockets with that framework.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I highly recommend Miguel Grinberg's blog post on
&lt;a class="reference external" href="http://blog.miguelgrinberg.com/post/easy-websockets-with-flask-and-gevent"&gt;WebSockets with Flask&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;My &lt;a class="reference external" href="https://www.twilio.com/blog/2014/11/choose-your-own-adventure-presentations-with-reveal-js-python-and-websockets.html"&gt;Choose Your Own Adventure Presentations&lt;/a&gt;
blog post shows how to use Flask, gevent, Reveal.js and SMS to create
interactive presentations.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tavendo.com/blog/post/going-asynchronous-from-flask-to-twisted-klein/"&gt;Going asynchronous: from Flask to Twisted Klein&lt;/a&gt;
explains how to use Klein for async apps as a replacement for Flask.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.jupo.org/2011/08/13/real-time-web-apps-with-django-and-websockets/"&gt;Real-time Web Apps with Django and WebSockets&lt;/a&gt;
is a few years old but still relevant for implementing WebSockets if you're
using Django.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://bottlepy.org/docs/dev/async.html"&gt;Async with Bottle&lt;/a&gt; is a
walkthrough for the Bottle framework.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="websockets-vs-webrtc-data-vs-sse"&gt;
&lt;h2&gt;WebSockets vs WebRTC Data vs SSE&lt;/h2&gt;
&lt;p&gt;There are multiple ways to accomplish server push and full duplex
communication between web browsers and a server. The WebRTC Data Channel and
&lt;a class="reference external" href="http://www.w3schools.com/html/html5_serversentevents.asp"&gt;Server-Sent Events&lt;/a&gt;
(SSE) can provide similar functionality to WebSockets, although there are
differences such as SSE not being able to push from client to server, only
server to client. There is often confusion for how these technologies
compare so it's a good idea to read a few of the posts below to survey the
landscape.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;This post on
&lt;a class="reference external" href="http://www.tokbox.com/blog/webrtc-data-channels-vs-websockets/"&gt;WebRTC Data Channels vs WebSockets&lt;/a&gt;
specifically addresses where data channels are currently appropriate and
where they are less useful.&lt;/li&gt;
&lt;li&gt;There's a well done
&lt;a class="reference external" href="http://stackoverflow.com/questions/5195452/websockets-vs-server-sent-events-eventsource"&gt;Stack Overflow discussion on WebSockets vs SSE&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;These slides roll through
&lt;a class="reference external" href="http://www.slideshare.net/swanandpagnis/lets-get-real-time-serversent-events-websockets-and-webrtc-for-the-soul"&gt;what WebSockets, SSE and WebRTC are&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 14 Jan 2015 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2015-01-14:websockets-python-resources.html</guid></item><item><title>My 2014 Software Development Year in Review</title><link>http://www.letshackdc.com/2014-software-development-year-review.html</link><description>&lt;p&gt;2014 was a solid year for improving my software development abilities. This
year was different from past years because I moved completely out of software
consulting and into coding open source projects.&lt;/p&gt;
&lt;p&gt;This post will briefly cover my highlights from 2014 and go into the insights
I gained from my work throughout the year. I'll cover plans for 2015 in a
future blog post.&lt;/p&gt;
&lt;div class="section" id="highlights"&gt;
&lt;h2&gt;2014 Highlights&lt;/h2&gt;
&lt;p&gt;The projects and events stand out the most to me from throughout this
past year were:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Starting my new gig as a
&lt;a class="reference external" href="https://www.twilio.com/blog/2014/02/introducing-developer-evangelist-matt-makai.html"&gt;Twilio Developer Evangelist&lt;/a&gt;
in January&lt;/li&gt;
&lt;li&gt;Open sourcing &lt;a class="reference external" href="http://consumerfinance.gov/"&gt;CFPB&lt;/a&gt;'s &lt;a class="reference external" href="https://github.com/cfpb/collab"&gt;collab&lt;/a&gt;
project that I worked on in 2012 and early 2013&lt;/li&gt;
&lt;li&gt;Contributing the
&lt;a class="reference external" href="http://docs.ansible.com/twilio_module.html"&gt;Twilio module to Ansible&lt;/a&gt;
along with
&lt;a class="reference external" href="https://www.twilio.com/blog/2014/05/ansible-text-messages-notifications-with-twilio-sms.html"&gt;blog posts&lt;/a&gt;
and &lt;a class="reference external" href="http://www.eventbrite.com/e/ansiblefest-nyc-2014-tickets-10952628607"&gt;speaking engagements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Working with the
&lt;a class="reference external" href="http://mcinnovationlab.com/project-update-the-results-of-the-smart-america-challenge/"&gt;SmartAmerica SCALE team&lt;/a&gt;
and going to the
&lt;a class="reference external" href="http://www.whitehouse.gov/blog/2014/06/10/smartamerica-challenge-harnessing-power-internet-things"&gt;White House&lt;/a&gt;
to wrap up&lt;/li&gt;
&lt;li&gt;Heading back to the &lt;a class="reference external" href="http://www.whitehouse.gov/blog/2014/08/04/more-1500-people-participate-white-house-innovation-disaster-response-and-recovery-d"&gt;WH for Disaster Recovery Demo Day&lt;/a&gt;
to
&lt;a class="reference external" href="https://www.youtube.com/watch?v=ZAQbIa0hAeo"&gt;demo the Rapid Response Kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Growing &lt;a class="reference external" href="http://www.fullstackpython.com/"&gt;Full Stack Python&lt;/a&gt;'s audience
from ~500 to ~15,000 uniques a month&lt;/li&gt;
&lt;li&gt;Coding the &lt;a class="reference external" href="https://github.com/makaimc/underwear"&gt;Underwear&lt;/a&gt;,
&lt;a class="reference external" href="https://github.com/makaimc/plushcap"&gt;Plushcap&lt;/a&gt; and
&lt;a class="reference external" href="https://github.com/makaimc/choose-your-own-adventure-presentations"&gt;Choose Your Own Adventure Presentations&lt;/a&gt;
projects&lt;/li&gt;
&lt;li&gt;Hacking on some damn fun projects with
&lt;a class="reference external" href="http://laurenraeorsini.com/"&gt;Lauren Orsini&lt;/a&gt;, such as
&lt;a class="reference external" href="http://readwrite.com/2014/04/23/raspberry-pi-connected-home-fish-text-message-twilio"&gt;my fish just texted me&lt;/a&gt;,
&lt;a class="reference external" href="http://readwrite.com/2014/07/11/one-click-messaging-app"&gt;build your own Yo app clone&lt;/a&gt;
and
&lt;a class="reference external" href="http://readwrite.com/2014/09/26/friday-fun-twilio-flickr-api-picture-roulette-drinking-game"&gt;the Flickr MMS drinking game&lt;/a&gt;
for &lt;a class="reference external" href="http://readwrite.com/"&gt;ReadWrite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Presenting with a experienced peer speaker,
&lt;a class="reference external" href="https://www.youtube.com/watch?v=QrFEKghISEI"&gt;Kate Heddleston at DjangoCon US&lt;/a&gt;, which raised my game on that talk way higher than I ever could've done
by myself&lt;/li&gt;
&lt;li&gt;Speaking and/or doing workshops at
&lt;a class="reference external" href="https://www.youtube.com/watch?v=s6NaOKD40rY"&gt;EuroPython&lt;/a&gt;,
&lt;a class="reference external" href="https://www.youtube.com/watch?v=aMtiCX38w20"&gt;DjangoCon US&lt;/a&gt;,
&lt;a class="reference external" href="http://www.youtube.com/watch?v=pg-cOPVYKCw"&gt;SF Django&lt;/a&gt;,
AnsibleFest, DC Configuration Management,
&lt;a class="reference external" href="http://www.meetup.com/Women-Who-Code-DC/events/219004596/"&gt;Women Who Code DC&lt;/a&gt;
and &lt;a class="reference external" href="/talks.html"&gt;many more&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="codifying-my-teaching-style"&gt;
&lt;h2&gt;Codifying My Teaching Style&lt;/h2&gt;
&lt;p&gt;Throughout the year I tested a hypothesis I came up with in 2013 regarding
content creation, speaking and coding. The hypothesis was that by focusing my
efforts on interrelated activities (&amp;quot;synergy&amp;quot; for you MBA folks), I would get
better results and feel less scattershot in my work output.&lt;/p&gt;
&lt;p&gt;I told the Twilio Developer Evangelism team about this approach and
&lt;a class="reference external" href="http://wwww.brooklynhacker.com/"&gt;Rob Spectre&lt;/a&gt; dubbed it the &amp;quot;Makai
Triumvirate&amp;quot;. Below is a picture representing what the approach looks like.&lt;/p&gt;
&lt;img alt="So called &amp;quot;Makai Triumvirate&amp;quot;, named by Rob Spectre" src="/source/static/img/141225-year-review/makai-triumvirate.png" style="width: 100%;" /&gt;
&lt;p&gt;When activities are related I can produce much greater output in coding,
writing and talks than if I worked on several varying topics in parallel.&lt;/p&gt;
&lt;p&gt;A good example of this triumvirate approach is the work I did this year with
Ansible.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Coded &lt;a class="reference external" href="https://github.com/makaimc/sf-django"&gt;Ansible playbooks&lt;/a&gt; to
deploy existing Python web applications&lt;/li&gt;
&lt;li&gt;Programmed &lt;a class="reference external" href="https://github.com/makaimc/underwear"&gt;Underwear&lt;/a&gt; library
to learn  more about Ansible's code base&lt;/li&gt;
&lt;li&gt;Coded the Twilio module in Python&lt;/li&gt;
&lt;li&gt;Got the pull request accepted into the Ansible 1.6 release&lt;/li&gt;
&lt;li&gt;Wrote the Ansible Twilio module blog post&lt;/li&gt;
&lt;li&gt;Spoke about Ansible at SF Django, Center for Open Science, DC Configuration
Management, AnsibleFest NYC and NoVA Python&lt;/li&gt;
&lt;li&gt;Wrote about Ansible on the Configuration Management page for Full Stack
Python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From the list above it's evident that much of the work I did revolved around
coding followed by writing and speaking after gaining experience with the
library.&lt;/p&gt;
&lt;p&gt;After that work in the first six months of the year I relaxed my focus on
Ansible. I still use the project all the time for deployments but I moved on
to other topics for coding, speaking and writing.&lt;/p&gt;
&lt;p&gt;The triumvirate approach sounds like common sense. However, when you're asked
by a conference organizer to come up with a technical talk, it's easy to
get excited by a new but unrelated topic and try to create a talk around that
new thing. This focused approach allows me to say &amp;quot;what are the 3 big things I
will work on this year?&amp;quot; and cut out anything else that is unrelated.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="open-source"&gt;
&lt;h2&gt;Open Source&lt;/h2&gt;
&lt;p&gt;Open source was a much bigger part of my professional life in 2014 than in
any previous year.&lt;/p&gt;
&lt;img alt="My 2013 GitHub contributions through Dec 25, 2014" src="/source/static/img/141225-year-review/github-contributions.png" style="width: 100%;" /&gt;
&lt;p&gt;The above image shows my my daily open source GitHub contributions through
December 25 of 2014. I came up with the idea to push an open source commit as
many days as possible throughout the year. Currently I'm at 282 days in a
row with my last miss on March 18 (I was up in NYC with our Twilio crew so
I missed that day by accident).&lt;/p&gt;
&lt;p&gt;Overall I should end up having missed 3 days out of 365 this year. I'm happy
with that streak. It's possible I'll commit less in 2015 but I haven't set a
hard target on my goals after Dec 31 just yet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="writing"&gt;
&lt;h2&gt;Writing&lt;/h2&gt;
&lt;p&gt;I didn't write a lot on this site since I had a lot going on with
Full Stack Python and external websites. Here's a quick list of my blog posts
from throughout 2014.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://radar.oreilly.com/2014/05/driving-demand-for-full-stack-developers.html"&gt;Driving Demand for Full Stack Developers&lt;/a&gt;
on &lt;a class="reference external" href="http://radar.oreilly.com/"&gt;O'Reilly Radar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Via the Twilio blog I wrote:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2014/02/introducing-developer-evangelist-matt-makai.html"&gt;Introducing Developer Evangelist Matt Makai&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2014/05/ansible-text-messages-notifications-with-twilio-sms.html"&gt;Ansible Text Message Notifications with Twilio SMS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2014/05/github-pull-request-sms-alerts.html"&gt;How To Set Up GitHub Activity SMS Alerts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2014/08/website-sms-alerts-with-the-plushcap-python-package-part-1.html"&gt;Website SMS Alerts with the Plushcap Python Package: Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2014/10/branded-mms-coupon-generation-with-python-and-twilio.html"&gt;Branded MMS Coupon Generation with Python and Twilio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2014/11/choose-your-own-adventure-presentations-with-reveal-js-python-and-websockets.html"&gt;Choose Your Own Adventure Presentations with Reveal.js, Python and WebSockets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2014/12/non-coders-guide-running-twilio-org-rapid-response-kit.html"&gt;The Non-Coder’s Guide For Running the Twilio.org Rapid Response Kit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lauren Orsini did the writing for the following three articles but we hacked
on code together to produce these articles for ReadWrite:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://readwrite.com/2014/04/23/raspberry-pi-connected-home-fish-text-message-twilio"&gt;My Fish Just Texted Me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://readwrite.com/2014/09/26/friday-fun-twilio-flickr-api-picture-roulette-drinking-game"&gt;Friday Fun: Build A Drinking Game With Twilio MMS And Flickr API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://readwrite.com/2014/07/11/one-click-messaging-app"&gt;Create Your Own Obnoxiously Simple Messaging App Just Like Yo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="that-s-a-wrap"&gt;
&lt;h2&gt;That's a Wrap&lt;/h2&gt;
&lt;p&gt;I'm happy with how 2014 turned out from a software development standpoint.
Much of my time is spent writing and speaking as well as coding which is
fine by me since I no longer have to worry about the constant billable hour
pressures of being a consultant.&lt;/p&gt;
&lt;p&gt;2015 is already shaping up as a killer year. I'll have a separate blog post
later on my plans for the new year.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Fri, 26 Dec 2014 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2014-12-26:2014-software-development-year-review.html</guid></item><item><title>My Typical Day As A Developer Evangelist</title><link>http://www.letshackdc.com/typical-day-as-developer-evangelist.html</link><description>&lt;p&gt;&amp;quot;&lt;em&gt;What is a typical day like?&lt;/em&gt;&amp;quot; is one of the most common questions I receive
about my gig as a
&lt;a class="reference external" href="https://www.twilio.com/blog/2014/02/introducing-developer-evangelist-matt-makai.html"&gt;Twilio Developer Evangelist&lt;/a&gt;. This blog post explains how I schedule
my calendar when I'm in Washington, D.C. on work days.&lt;/p&gt;
&lt;div class="section" id="daily-structure"&gt;
&lt;h2&gt;Daily Structure&lt;/h2&gt;
&lt;p&gt;Throughout the past year on the Twilio crew I've learned that my
secret to keeping happy and productive is to impose regular structure on my
days. Here's how my typical non-traveling weekdays are set up.&lt;/p&gt;
&lt;div class="section" id="am-ish-wake-up-write-code"&gt;
&lt;h3&gt;730-am(-ish): wake up, write &amp;amp; code&lt;/h3&gt;
&lt;p&gt;We engineers know that uninterrupted quiet time is the only way to effectively
code. My uninterrupted time comes in the morning hours between about 7am until
noon. These hours tend to be productive since I'm fortunately one of those
weird morning people who wakes up with a refreshed mind that's ready to go.
Morning hours also work well for focused tasks because our headquarters in San
Francisco is three hours behind D.C. so I know I won't have to take phone
calls or answer emails from the West Coast until they come online.&lt;/p&gt;
&lt;p&gt;Most mornings are a combination of coding &lt;em&gt;and&lt;/em&gt; writing.
Since I do both activities in Vim they have a similar creative flow.
Many of the open source projects I work on also go along with a blog post
so writing and coding tasks often overlap.
For example, I programmed the
&lt;a class="reference external" href="https://github.com/makaimc/choose-your-own-adventure-presentations"&gt;Choose Your Own Adventure Presentations&lt;/a&gt; Flask web app while writing the
content for the &lt;a class="reference external" href="https://www.twilio.com/blog/2014/11/choose-your-own-adventure-presentations-with-reveal-js-python-and-websockets.html"&gt;code walkthrough blog post&lt;/a&gt;.&lt;/p&gt;
&lt;img alt="The simple desk with external monitor I use to work from home" class="space-me" src="/source/static/img/141201-devangel-day/home-desk.jpg" style="width: 100%;" /&gt;
&lt;p&gt;During the morning hours I often work from the desk in my apartment (shown
in the picture above) or from a coffee shop such as
&lt;a class="reference external" href="http://www.busboysandpoets.com/"&gt;Busboys and Poets&lt;/a&gt; or
&lt;a class="reference external" href="http://compasscoffee.com/"&gt;Compass Coffee&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="am-gym-time"&gt;
&lt;h3&gt;930am: gym time&lt;/h3&gt;
&lt;p&gt;I make time to workout every day. Invariably one day per week I will
have a breakfast meeting, need the extra hours or just plain not feel like
going to the gym. That's the day I skip each week.&lt;/p&gt;
&lt;p&gt;The Developer Evangelist role can be tough on your body if you don't take
care of yourself. When you're traveling it can be hard to work out every day.
That's why I ensure a workout happens just about every day I'm not on the road.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="am-continue-coding-writing"&gt;
&lt;h3&gt;11am: continue coding &amp;amp; writing&lt;/h3&gt;
&lt;p&gt;As soon as I get out of the gym I head home and get back on my laptop. I find
my mind tends to subconsciously chug through coding and writing tasks while
I'm working out. If I was stuck on a bug or a paragraph earlier in the day I
find I can often solve the problem immediately after my workout.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="noon-shower-lunch-head-to-coworking-space"&gt;
&lt;h3&gt;Noon: shower, lunch, head to coworking space&lt;/h3&gt;
&lt;p&gt;Eventually my day slides into interruption mode. Occasionally it begins with
a lunch meeting where I need to scoot across town to catch up with someone.
If I do not have a lunch meeting then I usually grab lunch from
&lt;a class="reference external" href="http://sweetgreen.com/"&gt;Sweetgreen&lt;/a&gt;,
&lt;a class="reference external" href="http://www.chipotle.com/en-US/default.aspx?type=default"&gt;Chiptole&lt;/a&gt; [1], or
&lt;a class="reference external" href="http://sundevich.com/"&gt;SUNdeVICH&lt;/a&gt; and take it to my coworking space.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="afternoon-interruption-activities"&gt;
&lt;h3&gt;Afternoon: interruption activities&lt;/h3&gt;
&lt;p&gt;From lunch through the afternoon I have what I call &amp;quot;interruption activities&amp;quot;
where I bounce from one thing to another. These activities are reading and
writing emails, phone calls, Google Hangouts, in-person meetings, code
reviews and generally responding to requests that come in from teammates and
the external tech community.&lt;/p&gt;
&lt;p&gt;During the afternoon I work out of my WeWork coworking space in the
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Shaw,_Washington,_D.C."&gt;Shaw neighborhood of the District&lt;/a&gt;.
You can see my typical WeWork hot desk set up in the picture below.&lt;/p&gt;
&lt;img alt="WeWork coworking space spot" class="space-me" src="/source/static/img/141201-devangel-day/wework.jpg" style="width: 100%;" /&gt;
&lt;p&gt;Around 2-3pm my mind will often start to wander so I take a walk, catch a
quick nap or read up on (mostly mindless) tech news via Techmeme or Hacker
News to catch a breather. Then I'll get back to the interruption activities
and get prepped for any evening events I have on the calendar.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="evening-tech-meetups"&gt;
&lt;h3&gt;Evening: tech meetups&lt;/h3&gt;
&lt;p&gt;When I'm in D.C. I attend on average 1-3 tech meetups a week. Meetups are
clustered on Wednesday and Thursday nights although there are a few good ones
on Monday and Tuesday evenings as well.&lt;/p&gt;
&lt;p&gt;Attending meetups isn't about just sitting around listening to a presenter.
You get out of events what effort you put in. It's important to engage with
your peers and learn more about what they're working on. I'm fortunate to
have many great friends in the D.C. tech community who I've come to know
through these tech events. Meetups are a fun way for me to catch up with them
on their latest work and open source projects, learn how I can help them out
and discuss programming resources.&lt;/p&gt;
&lt;p&gt;I'll often help meetup organizers find space to host their events and
sponsor food via Twilio funds. I occasionally perform short live coding
demos with Twilio that are relevant to the audience. For example, at a
DevOps-focused meetup I'll show off text messsage notifications from an
&lt;a class="reference external" href="http://www.ansible.com/home"&gt;Ansible&lt;/a&gt; playbook
using the &lt;a class="reference external" href="http://docs.ansible.com/twilio_module.html"&gt;Twilio module&lt;/a&gt;. Other
times I'll speak on a programming topic or give a coding workshop like the
one for
&lt;a class="reference external" href="http://www.meetup.com/Women-Who-Code-DC/events/219004596/"&gt;Women Who Code DC&lt;/a&gt;
pictured below.&lt;/p&gt;
&lt;img alt="Twilio workshop at Women Who Code DC" class="space-me" src="/source/static/img/141201-devangel-day/wwdc.jpg" style="width: 100%;" /&gt;
&lt;p&gt;I attend a range of tech meetups but my three favorites throughout 2014
were:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.meetup.com/DC-Web-API-User-Group/"&gt;DC Web API Group&lt;/a&gt; where
technical and non-technical folks coexist peacefully and learn from each
other (yes, seriously it's an amazing event)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.meetup.com/DC-continuous-delivery/"&gt;DC Continuous Delivery&lt;/a&gt;
for covering a range of practical DevOps topics (I'm also the co-organizer
of this group)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://dc.hackandtell.org/"&gt;DC Hack And Tell&lt;/a&gt; for its constant stream
of fascinating software and hardware hacks
(shown below is &lt;a class="reference external" href="http://thoppe.github.io/"&gt;Travis Hoppe&lt;/a&gt; presenting at
the December meetup)&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="DC Hack And Tell meetup picture from December 8, 2014" class="space-me" src="/source/static/img/141201-devangel-day/dc-hack-and-tell.jpg" style="width: 100%;" /&gt;
&lt;p&gt;Over time I've found that the worthwhile tech community events in D.C.
focus more on software development and less on entrepreneurship topics.
Therefore I prefer to attend meetup centered on programming languages,
frameworks and software development topics over &amp;quot;startup-ish&amp;quot; drinking events.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ad-hoc-activities"&gt;
&lt;h2&gt;Ad hoc Activities&lt;/h2&gt;
&lt;p&gt;That's a peek into my average non-travel day. I accommodate unscheduled
events, calls, meetings, doctor's appointments and errands as they come up
but try to stick to this formula as closely as possible. The rigid calendar
creates normalcy in what could otherwise be a very unstructured lifestyle.&lt;/p&gt;
&lt;p&gt;For more information on life as a Developer Evangelist, check out these
fine posts:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://carter.rabasa.com/2012/07/17/how-to-balance-hustling-and-family/"&gt;How to Balance Family and Hustling&lt;/a&gt; by &lt;a class="reference external" href="https://twitter.com/crtr0"&gt;Carter Rabasa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://thenextweb.com/dd/2012/06/03/a-day-in-the-life-of-a-developer-evangelist/"&gt;A Day in the Life of a Developer Evangelist&lt;/a&gt; on The Next Web&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.rdegges.com/my-experience-as-a-new-developer-evangelist/"&gt;My Experience As A New Developer Evangelist&lt;/a&gt; by &lt;a class="reference external" href="https://twitter.com/rdegges"&gt;Randall Degges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://baugues.com/beating-burnout"&gt;Developer Evangelists and Burnout&lt;/a&gt;
by &lt;a class="reference external" href="https://twitter.com/greggyb"&gt;Greg Baugues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.rickyrobinett.com/2015/01/should-i-become-a-developer-evangelist/"&gt;Should I Become a Developer Evangelist?&lt;/a&gt;
by &lt;a class="reference external" href="https://twitter.com/rickyrobinett"&gt;Ricky Robinett&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.kevin.mn/evangelism"&gt;Thoughts on Developer Evangelism&lt;/a&gt;
by &lt;a class="reference external" href="http://www.kevin.mn/"&gt;Kevin Whinnery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;[1] burrito bowl, veges, double chicken, pico de gallo, medium salsa,
lettuce, guac on the side, no rice, beans, cheese, sour cream or corn :)&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Sat, 06 Dec 2014 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2014-12-06:typical-day-as-developer-evangelist.html</guid></item><item><title>Women Who Code DC Workshop</title><link>http://www.letshackdc.com/women-who-code-dc-workshop.html</link><description>&lt;p&gt;Hello and welcome to the
&lt;a class="reference external" href="http://www.meetup.com/Women-Who-Code-DC/events/219004596/"&gt;Women Who Code DC Twilio API workshop&lt;/a&gt;
for the 2014 Hour of Code week! In this workshop we're going to learn how
to send and receive text messages (SMS), multimedia messages (MMS) and voice
calls to any phone number through the Twilio
&lt;a class="reference external" href="https://www.twilio.com/api"&gt;web API&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="hellooooo-twiliooooo"&gt;
&lt;h2&gt;Hellooooo Twiliooooo!&lt;/h2&gt;
&lt;p&gt;Head to &lt;a class="reference external" href="https://www.twilio.com/try-twilio"&gt;Twilio&lt;/a&gt; and sign up for a free
account. After going obtaining a Twilio number, upgrade your account so you
can send SMS, MMS and voice calls to any phone number. Use the &amp;quot;I have a promo
code&amp;quot; link on the upgrade screen and enter the promo code given during the
workshop to get free credit on your account.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sending-your-first-sms-mms"&gt;
&lt;h2&gt;Sending Your First SMS &amp;amp; MMS&lt;/h2&gt;
&lt;p&gt;Get your Python environment set up with a new virtualenv. Note that if you
don't have a Python environment ready to go you can use
&lt;a class="reference external" href="https://www.nitrous.io/"&gt;Nitrous.io&lt;/a&gt; to do all these tasks in the browser.
With your environment and new virtualenv, install the
&lt;a class="reference external" href="https://www.twilio.com/docs/python/install"&gt;Twilio helper library&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
pip install twilio
&lt;/pre&gt;
&lt;p&gt;Then set the &lt;tt class="docutils literal"&gt;TWILIO_ACCOUNT_SID&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;TWILIO_AUTH_TOKEN&lt;/tt&gt;
&lt;a class="reference external" href="https://www.digitalocean.com/community/tutorials/how-to-read-and-set-environmental-and-shell-variables-on-a-linux-vps"&gt;environment variables&lt;/a&gt;
before firing up the Python REPL. These variables can be found on the
&lt;a class="reference external" href="https://www.twilio.com/user/account/voice-messaging"&gt;Twilio account dashboard&lt;/a&gt;.
On Mac OS X or Linux you can set environment variables using the following
commands:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
export TWILIO_ACCOUNT_SID='my account sid'
export TWILIO_AUTH_TOKEN='my auth token'
&lt;/pre&gt;
&lt;p&gt;Now you should be able to fire up the Python REPL and enter the following
code:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
from twilio.rest import TwilioRestClient
client = TwilioRestClient()

# next put your cell phone for the to and your twilio number for from
client.messages.create(to=&amp;quot;+12025551234&amp;quot;, from_=&amp;quot;+12025553456&amp;quot;,
                       body=&amp;quot;Hello world!&amp;quot;)
&lt;/pre&gt;
&lt;p&gt;You should get a text message to your cell phone! Next up let's add an image
of Grace Hopper with an early computer to your next message.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
media = &amp;quot;http://www.nww2m.com/wp-content/uploads/2013/10/hopper-large.jpg&amp;quot;

# again replace the numbers on the next line with your numbers
client.messages.create(to=&amp;quot;+12025551234&amp;quot;, from_=&amp;quot;+12025553456&amp;quot;,
                       body=&amp;quot;Grace Hopper!&amp;quot;, media_url=media)
&lt;/pre&gt;
&lt;p&gt;If you got the MMS then awesome! If not, call me or one of the mentors over
and we'll help you get there. Once you've done the SMS &amp;amp; MMS then it's time
to make a voice call.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tunneling-with-ngrok"&gt;
&lt;h2&gt;Tunneling with Ngrok&lt;/h2&gt;
&lt;p&gt;We'll be using &lt;a class="reference external" href="https://ngrok.com/"&gt;Ngrok&lt;/a&gt; to create a localhost tunnel
so the &lt;a class="reference external" href="https://www.twilio.com/docs/api/twiml"&gt;TwiML&lt;/a&gt; files can be read
from the local filesystem.
&lt;a class="reference external" href="https://ngrok.com/user/signup"&gt;Sign up for a free ngrok account&lt;/a&gt; and
&lt;a class="reference external" href="https://ngrok.com/download"&gt;download the software&lt;/a&gt;. Fire it up by
going to the directory where you downloaded it and running this command:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
./ngrok 5000
&lt;/pre&gt;
&lt;p&gt;That will create a tunnel to your port 5000 where you'll be running the
local web server or Flask web application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="making-voice-calls"&gt;
&lt;h2&gt;Making Voice Calls&lt;/h2&gt;
&lt;p&gt;Create a file named &amp;quot;voice.xml&amp;quot; and put the following content in it:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
&amp;lt;Response&amp;gt;
    &amp;lt;Say voice=&amp;quot;alice&amp;quot; language=&amp;quot;en-GB&amp;quot;&amp;gt;Hello world! Thanks for making a voice call with Twilio.&amp;lt;/Say&amp;gt;
&amp;lt;/Response&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Save the file and run the following command in that directory:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
python -m SimpleHTTPServer 5000
&lt;/pre&gt;
&lt;p&gt;Now in the Python interpreter let's make a voice call:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
from twilio.rest import TwilioRestClient

client = TwilioRestClient()

# next put your cell phone for the to and your twilio number for from
# replace the url with your ngrok url plus voice.xml

client.calls.create(to=&amp;quot;+12025551234&amp;quot;, from_=&amp;quot;+12025553456&amp;quot;,
url=&amp;quot;https://6e351c5f.ngrok.com/voice.xml&amp;quot;)
&lt;/pre&gt;
&lt;p&gt;You should now get a call on your phone and the automated &amp;quot;alice&amp;quot; voice will
read off whatever text you typed in. After the voice call is done you can
CTRL-C out of the SimpleHTTPServer since we'll need that port for the next
tutorial.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mustachin-selfies-with-mms"&gt;
&lt;h2&gt;Mustachin' Selfies with MMS&lt;/h2&gt;
&lt;p&gt;Now that we've got the basics of the API out of the way, let's use it for a
real practical purpose. That is, adding mustaches to selfies. Test out the
app we're going to build by taking a selfie with your cell phone camera and
sending it to:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
(202) 759-2423
&lt;/pre&gt;
&lt;p&gt;Once you get your selfie back go ahead and check out the tutorial for building
your own
&lt;a class="reference external" href="https://www.twilio.com/blog/2014/09/how-to-build-a-mustached-message-service-with-twilio-mms-and-python.html"&gt;selfie mustacher with Flask&lt;/a&gt;. When you
run into trouble be sure to flag down a mentor and we'll get it sorted out.&lt;/p&gt;
&lt;p&gt;After the mustachifier is working move on to the final tutorial for creating
real-time Choose Your Own Adventure Presentations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="choose-your-own-adventure-presentations-with-sms"&gt;
&lt;h2&gt;Choose Your Own Adventure Presentations with SMS&lt;/h2&gt;
&lt;p&gt;One more advanced tutorial for those of you who finish early with the
mustacher. Give this
&lt;a class="reference external" href="https://www.twilio.com/blog/2014/11/choose-your-own-adventure-presentations-with-reveal-js-python-and-websockets.html"&gt;Choose Your Own Adventure Presentations tutorial&lt;/a&gt;
a try even if you don't have time to finish this service as you can always
go back to the post or the
&lt;a class="reference external" href="https://github.com/makaimc/choose-your-own-adventure-presentations"&gt;companion GitHub repository&lt;/a&gt;
to polish it off on your own time.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Fri, 05 Dec 2014 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2014-12-05:women-who-code-dc-workshop.html</guid></item><item><title>Brain Boosting</title><link>http://www.letshackdc.com/brain-boosting.html</link><description>&lt;p&gt;In college, I was never one to take adderal or ritalin to cram all night before
an exam. That no-sleep study route sounded miserable to me. I was the
unusual student who slowly and steadily worked every single day in the
library towards inevitable midterms and finals. Nevertheless, increasing
brain creativity and focus through exercise, meditation, drugs and
supplements fascinates me.&lt;/p&gt;
&lt;p&gt;From what I've read, brain research indicates that exercise and meditation
are safe and highly effective ways to increase performance. Evidence trends
towards positive performance via caffeine, electrical stimulation and
tyrosine. However, each one of these must be used properly and their effects
can potentially diminish over time.&lt;/p&gt;
&lt;p&gt;Below are links to some of the resources I've found most useful while
learning about ways to stimulate increased brain creativity and focus.&lt;/p&gt;
&lt;div class="section" id="exercise"&gt;
&lt;h2&gt;Exercise&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://news.stanford.edu/news/2014/april/walking-vs-sitting-042414.html"&gt;Walking improves creativity&lt;/a&gt;
is a Stanford study that showed how creativity, as measured by high-quality,
novel analogies was increased by walking in the control group.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.newyorker.com/tech/elements/walking-helps-us-think"&gt;Why walking helps us think&lt;/a&gt;
goes into the connection between walking, thinking and writing.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.nytimes.com/2012/04/22/magazine/how-exercise-could-lead-to-a-better-brain.html?pagewanted=all&amp;amp;_r=0"&gt;How Exercise Could Lead to a Better Brain&lt;/a&gt;
summarizes that over the last several decades research has pointed to the
strong relationship between exercise and better brain function.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="meditation"&gt;
&lt;h2&gt;Meditation&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.psychologytoday.com/blog/the-courage-be-present/201001/how-practice-mindfulness-meditation"&gt;How to practice mindfulness meditation&lt;/a&gt;
covers the basics on how to begin with this form of meditation. Note that
the goal with mindfulness meditation is not to clear your mind of thoughts
but to actually allow them to come to you and work with them.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://well.blogs.nytimes.com/2011/01/28/how-meditation-may-change-the-brain/"&gt;How meditation may change the brain&lt;/a&gt;
covers some of the research done on how meditation can alter brain structure
for the better, especially in our always-on world.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="caffeine"&gt;
&lt;h2&gt;Caffeine&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.newyorker.com/tech/elements/how-caffeine-can-cramp-creativity"&gt;How Caffeine Can Cramp Creativity&lt;/a&gt;
goes into the link between creativity and focus and how caffeine can
alter that balance.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="l-tyrosine"&gt;
&lt;h2&gt;L-Tyrosine&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Tyrosine has quite a bit of research behind its benefits compared to many
other common supplements. &lt;a class="reference external" href="http://www.informationisbeautiful.net/play/snake-oil-supplements/"&gt;This chart&lt;/a&gt;
lays out how it compares with other supplements and vitamins from an
evidence perspective.&lt;/li&gt;
&lt;li&gt;Before taking a supplement such as Tyrosine it's a good idea to check with
a site like &lt;a class="reference external" href="http://www.webmd.com/vitamins-supplements/ingredientmono-1037-tyrosine.aspx?activeingredientid=1037&amp;amp;activeingredientname=tyrosine"&gt;WebMD for drug interactions and side effects&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="piracetam-choline"&gt;
&lt;h2&gt;Piracetam &amp;amp; Choline&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://sites.google.com/site/thinkinginanutshell/nootropics"&gt;Nootropics, their effects, risks and where to get them&lt;/a&gt;
is one of the most comprehensive write ups I've found on the topic of
Nootropics, which includes synthetics like Piracetam.&lt;/li&gt;
&lt;li&gt;Piracetam can be purchased at
&lt;a class="reference external" href="https://www.cognitivenutrition.com/index.php?dispatch=products.view&amp;amp;product_id=60"&gt;Cognitive Nutriton&lt;/a&gt;
while I usually get choline from &lt;a class="reference external" href="http://www.amazon.com/Solgar-Choline-Vegetable-Capsules-Count/dp/B000URVCRI/ref=sr_1_1?s=hpc&amp;amp;ie=UTF8&amp;amp;qid=1417383612&amp;amp;sr=1-1&amp;amp;keywords=choline+solgar"&gt;Amazon&lt;/a&gt; or
&lt;a class="reference external" href="http://www.vitaminshoppe.com/p/solgar-choline-vegicaps-100-veggie-caps/sl-1567#.VHuO66TF95I"&gt;Vitamin Shoppe&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="electrical-brain-stimulation"&gt;
&lt;h2&gt;Electrical Brain Stimulation&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Military research under controlled circumstances led to results where
&lt;a class="reference external" href="http://www.theguardian.com/science/2014/nov/19/electrical-brain-stimulation-caffeine"&gt;electrical brain stimulation beat caffeine&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="cautionary-tales-and-supplemental-reading"&gt;
&lt;h2&gt;Cautionary Tales and Supplemental Reading&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://well.blogs.nytimes.com/2014/01/22/how-inactivity-changes-the-brain/"&gt;How Inactivity Changes the Brain&lt;/a&gt;
goes over the flip side to regular physical activity benefiting the brain:
inactivity can hamper its performance.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.theatlantic.com/features/archive/2014/03/the-toxins-that-threaten-our-brains/284466/??"&gt;The toxins that threaten our brains&lt;/a&gt;
is an in-depth well-written article on the dangers that common substances
such as lead, mercury, arsenic and ethanol present to brains, especially
in children whose brains are still developing.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://johannhari.com/2008/05/06/my-experiment-with-smart-drugs/"&gt;My experiment with smart drugs&lt;/a&gt;
provides a perspective from the author on his experiment with the narcolepsy
drug Provigil.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.cbc.ca/news/technology/age-related-brain-decline-starts-at-24-1.2611257"&gt;Age-related brain decline begins at 24&lt;/a&gt;
according to research done with Starcraft players.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lifehacker.com/5684996/what-alcohol-actually-does-to-your-brain-and-body"&gt;What alcohol actually does to your brain and body&lt;/a&gt;.
Summary: seriously not good for you.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Mon, 01 Dec 2014 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2014-12-01:brain-boosting.html</guid></item><item><title>Learning Web APIs</title><link>http://www.letshackdc.com/learning-web-apis.html</link><description>&lt;p&gt;The following list is a collection of resources for understanding and
learning Web fundamentals and application programming interfaces (APIs).
Much of modern software development is driven by crafting custom code
and combining that code with APIs. The concepts listed here are useful for
adapting your career in an age when web APIs are proliferating exponentially
while the number of devices communicating via the Web are outnumbering the
number of humans interacting through web applications. Many of these links
are also included in my
&lt;a class="reference external" href="http://www.fullstackpython.com/application-programming-interfaces.html"&gt;application programming interfaces section on Full Stack Python&lt;/a&gt;
but the links listed here are programming language agnostic.&lt;/p&gt;
&lt;p&gt;These links go along with my
&lt;a class="reference external" href="http://www.mattmakai.com/presentations/2014-qcon-web-apis-career.html"&gt;Web APIs, Exponential Growth and Your Career&lt;/a&gt; talk.&lt;/p&gt;
&lt;div class="section" id="web-and-api-fundamentals"&gt;
&lt;h2&gt;Web and API Fundamentals&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Ensure you've read the
&lt;a class="reference external" href="http://www.w3.org/Protocols/rfc2616/rfc2616.html"&gt;HTTP 1.1 Spec&lt;/a&gt; which
defines the verbs for interacting with the Web, such as GET, POST, PUT,
and DELETE. This document provides many foundational concepts for Web
developers.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://zapier.com/blog/apis-101/"&gt;APIs 101&lt;/a&gt; is a free guide by Zapier
for both technical and non-technical audiences who want to learn the
fundamentals behind web APIs.&lt;/li&gt;
&lt;li&gt;If you want to get into the origins of Representational State Transfer
(REST), Roy Fielding's
&lt;a class="reference external" href="http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm"&gt;dissertation on the topic&lt;/a&gt;
remains hugely influential.&lt;/li&gt;
&lt;li&gt;Short and to the point answer on Stack Overflow about
&amp;quot;&lt;a class="reference external" href="http://stackoverflow.com/questions/1568834/whats-the-difference-between-rest-restful"&gt;What is the difference between REST and RESTful?&lt;/a&gt;&amp;quot;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://spf13.com/post/soap-vs-rest"&gt;REST Vs SOAP, The Difference Between Soap And Rest&lt;/a&gt;
is a well thought out post on the conceptual differences between the
two architecture styles.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="finding-apis"&gt;
&lt;h2&gt;Finding APIs&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Kin Lane's &lt;a class="reference external" href="http://discovery.apievangelist.com/"&gt;API Discovery page&lt;/a&gt; is
a wonderful place to start finding what APIs exist.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.programmableweb.com/"&gt;ProgrammableWeb&lt;/a&gt; focuses on API industry
news and trends.&lt;/li&gt;
&lt;li&gt;TechCrunch is less technical than many other sources but covers large
announcements about APIs under the
&lt;a class="reference external" href="http://techcrunch.com/tag/api/"&gt;'api' tag&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Web APIs are integrated into all sorts of other products like
&lt;a class="reference external" href="https://www.geckoboard.com/integrations/"&gt;Geckoboard&lt;/a&gt; and
&lt;a class="reference external" href="https://ducksboard.com/services-integrations/"&gt;Ducksboard&lt;/a&gt; so their
integrations pages are great places to start for established services.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://leanstack.io/categories"&gt;Leanstack.io&lt;/a&gt; breaks down web APIs
by categories as does &lt;a class="reference external" href="https://zapier.com/zapbook/apps/"&gt;Zapier&lt;/a&gt; and
&lt;a class="reference external" href="https://ifttt.com/channels"&gt;IFTTT&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;My post on
&lt;a class="reference external" href="http://www.mattmakai.com/identifying-third-party-services-for-django.html"&gt;identifying third party services&lt;/a&gt;
was written with Django in mind but is language agnostic.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="creating-apis"&gt;
&lt;h2&gt;Creating APIs&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&amp;quot;&lt;a class="reference external" href="https://medium.com/&amp;#64;zwacky/design-a-beautiful-rest-api-901c73489458"&gt;Design a beautiful REST API&lt;/a&gt;&amp;quot;
reviews common design decisions regarding endpoints, versioning, errors
and pagination. There is also a source material YouTube video where this
blog post derives its recommendations from.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/interagent/http-api-design"&gt;Heroku's API Design Guide&lt;/a&gt;
provides a design perspective from one of the top current tech companies.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/18f/api-standards"&gt;18F&lt;/a&gt; produced an extensive set
of opinionated API design standards.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.slideshare.net/jmusser/ten-reasons-developershateyourapi"&gt;10 Reasons Developers Hate Your API&lt;/a&gt;
goes through the top difficulties and annoyances developers face when working with APIs and how you can avoid your API falling into the same traps.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="consuming-apis"&gt;
&lt;h2&gt;Consuming APIs&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&amp;quot;&lt;a class="reference external" href="https://stormpath.com/blog/api-driven-development/"&gt;API Driven Development&lt;/a&gt;&amp;quot;
by Randall Degges explains how using APIs in your application cuts
down on the amount of code you have to write and maintain so you can
launch your application faster.&lt;/li&gt;
&lt;li&gt;&amp;quot;&lt;a class="reference external" href="http://www.slideshare.net/SmartBear_Software/safe-sex-with-thirdparty-apis"&gt;Safe Sex with Third Party APIs&lt;/a&gt;&amp;quot;
is a funny high level overview of what you should do to protect your
application when relying on third party services.&lt;/li&gt;
&lt;li&gt;John Sheehan's
&amp;quot;&lt;a class="reference external" href="https://speakerdeck.com/johnsheehan/zen-and-the-art-of-api-maintenance"&gt;Zen and the Art of API Maintenance&lt;/a&gt;&amp;quot;
slides are very relevant for API integration.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I frequently add new links on
&lt;a class="reference external" href="http://www.fullstackpython.com/application-programming-interfaces.html"&gt;Full Stack Python's APIs pages&lt;/a&gt;
so be to check those out as well.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 15 Oct 2014 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2014-10-15:learning-web-apis.html</guid></item><item><title>How to Impress at Hackathons</title><link>http://www.letshackdc.com/must-have-hackathon-links.html</link><description>&lt;p&gt;What's the difference between a hackathon project that amazes the
audience versus one that lands with a thud? For better or worse
if you're looking to win a hackathon it takes more than just code to
impress the audience.&lt;/p&gt;
&lt;p&gt;Here's the list of winning attributes I've seen after spending
much of 2014 assisting and judging teams at both college and professional
hackathons.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Idea is not a blatant copy of an existing app or product&lt;/li&gt;
&lt;li&gt;Hack scope is estimated to be 3-4 hours of work&lt;/li&gt;
&lt;li&gt;Pitch is clear, concise and demos the solution&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I'll elaborate further on each of the above items and provide links to
resources that'll help your team effectively handle each one.&lt;/p&gt;
&lt;div class="section" id="idea-is-not-a-blatant-copy-of-an-existing-solution"&gt;
&lt;h2&gt;Idea is not a blatant copy of an existing solution&lt;/h2&gt;
&lt;p&gt;For example, a messaging app that allows you to text to your friends over
a cell phone data connection instead of through SMS would be silly
because there are so many well-known apps for that already out there:
WhatsApp, SnapChat, Facebook Messenger, etc.&lt;/p&gt;
&lt;p&gt;However, the reverse of the SMS-data connection is brilliant: if you
don't have a data connection but you do have SMS you can use
SMS as a data connection instead. This is what the
&lt;a class="reference external" href="http://mhacks.org/"&gt;MHacks&lt;/a&gt; team that built the
&lt;a class="reference external" href="http://cosmosbrowser.org/"&gt;Cosmos Browser&lt;/a&gt; showed
&lt;a class="reference external" href="https://gigaom.com/2014/09/11/cosmos-browser-uses-sms-to-provide-web-access-without-wi-fi-or-mobile-broadband/"&gt;an amazed audience&lt;/a&gt;
earlier this fall.&lt;/p&gt;
&lt;p&gt;The idea doesn't have to be mind-blowingly original though. You can often
take something that already exists, such as a
&lt;a class="reference external" href="http://18f.github.io/API-All-the-X/pages/individual_apis"&gt;public government web API&lt;/a&gt;
and make it accessible to a group of people who previously had
trouble accessing a resource. For example, Boston recently launched their
&lt;a class="reference external" href="http://www.mbta.com/rider_tools/developers/"&gt;v2 API for bus schedules&lt;/a&gt;.
Instead of building a mobile app that only worked on iOS or Android, a
team at &lt;a class="reference external" href="https://2014.battlehack.org/boston"&gt;PayPal BattleHack Boston&lt;/a&gt;
combined the new API with &lt;a class="reference external" href="https://www.twilio.com/sms"&gt;Twilio's SMS API&lt;/a&gt;
so anyone could text a phone number for the bus schedule. That opens up
bus schedule access to feature phones in addition to iPhone and Android
smartphones.&lt;/p&gt;
&lt;p&gt;If you're looking to do something novel with Twilio, we just launched
&lt;a class="reference external" href="https://www.twilio.com/mms"&gt;MMS on all US phone numbers&lt;/a&gt; a couple weeks
ago. We've built a few hacks already including a
&lt;a class="reference external" href="https://www.twilio.com/blog/2014/10/branded-mms-coupon-generation-with-python-and-twilio.html"&gt;digital coupon creator&lt;/a&gt;,
&lt;a class="reference external" href="https://www.twilio.com/blog/2014/10/how-to-build-a-meme-generator-using-twilio-mms-imgflip-and-sinatra.html"&gt;meme generator&lt;/a&gt;,
&lt;a class="reference external" href="https://www.twilio.com/blog/2014/09/build-a-picture-scavenger-hunt-using-twilio-mms.html"&gt;picture scavenger hunt&lt;/a&gt;
and oh yes, even &lt;a class="reference external" href="http://readwrite.com/2014/09/26/friday-fun-twilio-flickr-api-picture-roulette-drinking-game"&gt;a drinking game&lt;/a&gt;.
However, we have not barely begun to explore the limits of MMS so there's
a whole lot of room here for amazing hackathon projects.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="hack-is-estimated-to-be-3-4-hours-of-work"&gt;
&lt;h2&gt;Hack is estimated to be 3-4 hours of work&lt;/h2&gt;
&lt;p&gt;Estimating software development effort is notoriously difficult even on
short time frames. Pare the scope of your idea back to what you believe
your team can accomplish in 3-4 hours. If you start with an idea that takes
36 hours and you run over you could end up not finishing and even worse,
not sleeping. Teams that don't sleep usually end up not pitching well
because their brains are fried.&lt;/p&gt;
&lt;p&gt;Small scope doesn't mean an unimpressive project. There's a huge shortcut
here. If you take one thing away from this blog post:
&lt;strong&gt;leverage open source libraries and web APIs&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Pretty much every winning team uses a combination of open source libraries
and web APIs in their hacks because it's like adding hundreds of
other developers to your team. Depending on your language of choice
familiarized yourself with and use a project template.&lt;/p&gt;
&lt;p&gt;For Python, check out the project templates for the
&lt;a class="reference external" href="http://www.fullstackpython.com/django.html"&gt;Django&lt;/a&gt; and
&lt;a class="reference external" href="http://www.fullstackpython.com/flask.html"&gt;Flask&lt;/a&gt; frameworks. If you're
new to the web development game,
&lt;a class="reference external" href="http://www.fullstackpython.com/"&gt;Full Stack Python&lt;/a&gt; explains each layer
of the Python web stack and provides links to the best resources on the
web for each topic.&lt;/p&gt;
&lt;p&gt;For other langauges check out this handy
&lt;a class="reference external" href="https://github.com/geekcamp-ph/hackathon-starters"&gt;hackathon starter project page&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;p&gt;If you don't know what libraries exist for your programming language
check out the
&lt;a class="reference external" href="https://github.com/bayandin/awesome-awesomeness"&gt;awesome-lists&lt;/a&gt; which
break down libraries by functional area.&lt;/p&gt;
&lt;p&gt;For web APIs the usual suspects are &lt;a class="reference external" href="https://www.twilio.com/"&gt;Twilio&lt;/a&gt; for
voice and text message (and now MMS) functionality.
&lt;a class="reference external" href="http://sendgrid.com/"&gt;Sendgrid&lt;/a&gt; works well for email,
&lt;a class="reference external" href="https://developer.github.com/v3/"&gt;GitHub&lt;/a&gt; offers up pretty much all their
data through their API and
&lt;a class="reference external" href="https://developers.google.com/apis-explorer/#p/"&gt;Google's APIs&lt;/a&gt; work
well for hooking into their services. As mentioned earlier, the list of
&lt;a class="reference external" href="http://18f.github.io/API-All-the-X/pages/individual_apis"&gt;government web APIs&lt;/a&gt;
are all free APIs ready to be used in your hacks.&lt;/p&gt;
&lt;p&gt;Remember: less is more. I've seen groups try to demo their web API, web app
and Android and iOS mobile apps all together in under 2 minutes only
to have the presentation feel rushed and disappointing. It's better
for a group to come up with a single amazing solution with a tightly
scripted demo than several apps that you will not have time to show.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pitch-is-concise-and-demos-solution"&gt;
&lt;h2&gt;Pitch is concise and demos solution&lt;/h2&gt;
&lt;p&gt;Pitching requires practice. At PayPal BattleHack the teams have to do their
presentations to hackathon organizers during the weekend before they get
to participate in the final pitches. Do the same even if it's not required
for your hackathon. Find another group or an engaged sponsor to give you
constructive feedback on how to improve your pitch and demo.&lt;/p&gt;
&lt;p&gt;I wrote a page on
&lt;a class="reference external" href="http://www.howdoistartup.com/pitching.html"&gt;pitching resources for startups&lt;/a&gt;
that's just as applicable to hackathon pitches as small companies.&lt;/p&gt;
&lt;p&gt;View the demo and pitch as 60% of the work that goes into a hackathon if
you want it to work well. And if you're just at the hackathon to have
fun and learn instead of trying to win (which is how I would approach a
hackathon), it's still a great experience to get up on stage
and demo software to the crowd.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="one-more-thing"&gt;
&lt;h2&gt;One more thing...&lt;/h2&gt;
&lt;p&gt;When I'm at a hackathon representing Twilio I'm there to help your team,
regardless of whether you're using our API or not. I'll usually be in my
red track jacket walking around or posted up in a visible location. If you
can't find me tweet me &lt;a class="reference external" href="https://twitter.com/mattmakai"&gt;&amp;#64;mattmakai&lt;/a&gt; to get
the fastest response. You can also email me at &lt;a class="reference external" href="mailto:makai&amp;#64;twilio.com"&gt;makai&amp;#64;twilio.com&lt;/a&gt;. Happy coding!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Fri, 03 Oct 2014 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2014-10-03:must-have-hackathon-links.html</guid></item><item><title>Full Stack Perspective Links</title><link>http://www.letshackdc.com/full-stack-perspective-links.html</link><description>&lt;p&gt;This post contains links and references that go along with a short talk
I gave at MoDev about
&lt;a class="reference external" href="/presentations/2014-full-stack-python-perspective.html"&gt;the &amp;quot;full stack&amp;quot; development trend&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Several blog posts were influential in the early formation of the term
&amp;quot;full stack&amp;quot;. Start by reading these to understand where the term
originated.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.laurencegellert.com/2012/08/what-is-a-full-stack-developer/"&gt;What is a full stack developer?&lt;/a&gt;
is the canonical &amp;quot;here are the layers a developer should understand to
call herself full stack&amp;quot; post.&lt;/li&gt;
&lt;li&gt;Way back in 2010, Brad Feld mentioned
&lt;a class="reference external" href="http://www.feld.com/archives/2010/12/just-make-it-faster.html"&gt;full stack developers&lt;/a&gt;
as critical to tech startups quickly delivering software.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following are some other great blog posts for additional perspective.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://andyshora.com/full-stack-developers.html"&gt;The Myth of the Full Stack Developer&lt;/a&gt;
is an important counterpoint to a lot of the full stack FUD that gets
spewed by those who do not understand the topic.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://edward-designer.com/web/full-stack-web-developer/"&gt;What is a full-stack web developer after all?&lt;/a&gt;
provides some further insight into the numerous roles that are out there
and the convergence of design and front end development.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I created the following resources, one for O'Reilly and one independently
for the Python community. Full Stack Python has now been read by over
100,000 developers so far in 2014.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;My O'Reilly Media post on &lt;a class="reference external" href="http://radar.oreilly.com/2014/05/driving-demand-for-full-stack-developers.html"&gt;Driving Demand for Full Stack Developers&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.fullstackpython.com/"&gt;Full Stack Python&lt;/a&gt;. My 2014 project
(I pick a major project each year to work on. This follows 2013's
&lt;a class="reference external" href="http://www.codingacrossamerica.com/"&gt;Coding Across America&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Web APIs are incredibly important in the full stack trend. If you'd like to
read more about APIs and web fundamentals
&lt;a class="reference external" href="/links-learning-web-fundamentals.html"&gt;I have a blog post specifically for those resources&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Mon, 15 Sep 2014 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2014-09-15:full-stack-perspective-links.html</guid></item><item><title>Django Deployment Adventure Links</title><link>http://www.letshackdc.com/links-django-deployment-adventure.html</link><description>&lt;p&gt;The following list is a collection of resources for Django deployments and
scenarios like handling web security vulnerabilities, measuring user traction&amp;quot;
with web analytics, improving web application performance with caching and
managing incoming feature requests from users.&lt;/p&gt;
&lt;p&gt;Many of these resources along with more detailed explanations can be found on
&lt;a class="reference external" href="http://www.fullstackpython.com/"&gt;Full Stack Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These links go along with our
&lt;a class="reference external" href="/presentations/2014-djangocon-deployment.html"&gt;Choose Your Own Django Deployment Adventure&lt;/a&gt; talk.&lt;/p&gt;
&lt;div class="section" id="django-deployments"&gt;
&lt;h2&gt;Django Deployments&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://omniti.com/seeds/thoughts-on-web-application-deployment"&gt;Thoughts on web application deployment&lt;/a&gt;
walks through stages of deployment with source control, planning,
continuous deployment and monitoring the results.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.kalzumeus.com/2010/12/12/staging-servers-source-control-deploy-workflows-and-other-stuff-nobody-teaches-you/"&gt;Staging Servers, Source Control &amp;amp; Deploy Workflows, And Other Stuff Nobody Teaches You&lt;/a&gt;
is a comprehensive overview of deployments with source control and staging
servers.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://agiliq.com/blog/2014/08/deploying-a-django-app-on-amazon-ec2-instance/"&gt;Deploying a Django app on Amazon EC2 instance&lt;/a&gt;
is a detailed walkthrough for deploying an example Django app to Amazon
Web Services.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.nickpolet.com/blog/deploying-django-on-aws/1/"&gt;Deploying Django on AWS&lt;/a&gt;
is another walkthrough for deploying Django to AWS.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="web-application-security"&gt;
&lt;h2&gt;Web Application Security&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The official &lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/topics/security/"&gt;Django security docs page&lt;/a&gt;
provides a good overview of security features baked into Django.&lt;/li&gt;
&lt;li&gt;Reading &lt;a class="reference external" href="http://blog.mikeleone.com/2011/10/security-django-and-owasp-top-10.html"&gt;Django and the OWASP Top 10&lt;/a&gt;
and watching
&lt;a class="reference external" href="https://www.youtube.com/watch?v=sra9x44lXgU"&gt;Jacobian's talk on Django vs the OWASP Top 10&lt;/a&gt;
provide further insight into how Django assists with the top web
application vulnerabilities.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://codebutler.github.io/firesheep/"&gt;Firesheep&lt;/a&gt; is a plugin that
sniffs user session cookies if there are unencrypted pages after a user
has logged in. That allows user session spoofing.
&lt;a class="reference external" href="http://heartbleed.com/"&gt;Heartbleed&lt;/a&gt; is an OpenSSL bug prior to the
latest versions where memory exploits could leak server data without any
trace of what was taken.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.securedjango.com/"&gt;Secure Django&lt;/a&gt; reviews are expensive but
potentially help in enterprise environments where money is not a concern.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="measuring-user-traction"&gt;
&lt;h2&gt;Measuring User Traction&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://ducksboard.com/services-integrations/"&gt;Ducksboard Web Analytics Integrations&lt;/a&gt;
is a good initial list for web analytics tools you'll want to learn more
about.&lt;/li&gt;
&lt;li&gt;The &lt;a class="reference external" href="http://www.fullstackpython.com/web-analytics.html"&gt;Full Stack Python web analytics page&lt;/a&gt;
lists open source web analytics projects and hosted web analytics services.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Sun, 31 Aug 2014 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2014-08-31:links-django-deployment-adventure.html</guid></item><item><title>Links for Solving Django's Top Enterprise Headaches</title><link>http://www.letshackdc.com/links-solve-djangos-top-enterprise-headaches.html</link><description>&lt;p&gt;The following list is a collection of resources for solving many of the
headaches that come with using a dynamically typed language like Python
in the enterprise with Django as a commonly misunderstood web framework.
These resources I found very helpful when I found them during my time
consulting on numerous enterprise Django apps across commercial, non-profit
and government clients before joining Twilio.&lt;/p&gt;
&lt;p&gt;These links also go along with my
&lt;a class="reference external" href="/presentations/2014-djangocon-top-5-enterprise.html"&gt;How to Solve Django's Top 5 Enterprise Headaches&lt;/a&gt;
talk presented at
&lt;a class="reference external" href="http://www.djangocon.us/schedule/presentation/10/"&gt;DjangoCon 2014&lt;/a&gt;. You
can also find the reveal.js
&lt;a class="reference external" href="https://github.com/makaimc/mattmakai.github.io/blob/gh-pages/source/static-html/presentations/2014-djangocon-top-5-enterprise.html"&gt;source code to the presentation on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="integrating-with-active-directory"&gt;
&lt;h2&gt;Integrating with Active Directory&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Check this Stack Overflow question on
&lt;a class="reference external" href="http://stackoverflow.com/questions/663402/what-are-the-differences-between-ldap-and-active-directory"&gt;What are the differences between LDAP and Active Directory&lt;/a&gt;
for some solid backround knowledge.&lt;/li&gt;
&lt;li&gt;Use &lt;a class="reference external" href="http://www.python-ldap.org/"&gt;python-ldap&lt;/a&gt; to integrate with
Active Directory.&lt;/li&gt;
&lt;li&gt;Here's a
&lt;a class="reference external" href="https://djangosnippets.org/snippets/2604/"&gt;snippet for working with Active Directory and the User object&lt;/a&gt;
so the User model can be updated each time a user authenticates.&lt;/li&gt;
&lt;li&gt;This
&lt;a class="reference external" href="http://www.roguelynn.com/words/django-custom-user-models/"&gt;post on custom Django User models&lt;/a&gt;
is helpful for understanding how to integrate with external authentication
mechanisms.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="passing-security-audits"&gt;
&lt;h2&gt;Passing Security Audits&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?feature=player_embedded&amp;amp;v=sra9x44lXgU&amp;quot;"&gt;Python vs OWASP Top 10&lt;/a&gt;
is a video where Jacobian rolls through each of the top ten and what
to do about addressing each security concern.&lt;/li&gt;
&lt;li&gt;The official &lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/topics/security/"&gt;Django security docs page&lt;/a&gt;
provides a good overview of security features baked into Django.&lt;/li&gt;
&lt;li&gt;Reading &lt;a class="reference external" href="http://blog.mikeleone.com/2011/10/security-django-and-owasp-top-10.html"&gt;Django and the OWASP Top 10&lt;/a&gt;
and watching
&lt;a class="reference external" href="https://www.youtube.com/watch?v=sra9x44lXgU"&gt;Jacobian's talk on Django vs the OWASP Top 10&lt;/a&gt;
provide further insight into how Django assists with the top web
application vulnerabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="tranferring-data-from-legacy-systems"&gt;
&lt;h2&gt;Tranferring Data from Legacy Systems&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/howto/legacy-databases/"&gt;Working with legacy databases&lt;/a&gt;
is the official Django documentation on the topic.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/1179469/is-it-posible-to-generate-django-models-from-the-database"&gt;Generate Django models from a database&lt;/a&gt;
via the inspectdb command.&lt;/li&gt;
&lt;li&gt;Create a
&lt;a class="reference external" href="http://django-extensions.readthedocs.org/en/latest/graph_models.html"&gt;database graph from your Django models&lt;/a&gt;
using the django-extensions to genereate GraphViz files.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="securing-python-package-installations"&gt;
&lt;h2&gt;Securing Python Package Installations&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/19080352/how-to-get-pip-to-work-behind-a-proxy-server"&gt;How to get pip working behind a proxy server&lt;/a&gt;
basically explains how to set the https_proxy variable on Linux so pip
can properly connect to PyPI.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jamie.curle.io/blog/setting-up-a-custom-pypi-server/"&gt;Setting up a custom PyPI server&lt;/a&gt;
walks through how to do exactly that.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://cramer.io/2011/04/04/setting-up-your-own-pypi-server/"&gt;Setting Up Your Own PyPI Server&lt;/a&gt;
is another good article with a walkthrough for setting up your own server.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="correcting-dynamic-typing-misconceptions"&gt;
&lt;h2&gt;Correcting Dynamic Typing Misconceptions&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.cio.com/article/2431212/developer/dynamic-languages--not-just-for-scripting-any-more.html"&gt;CIO Magazine - Dynamic Languages: Not Just For Scripting Any More&lt;/a&gt;
provides social proof for CIOs who look to peer organizations for what
they should or should not be doing.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://wiki.python.org/moin/OrganizationsUsingPython"&gt;Organizations that use Python&lt;/a&gt;
is a list of exactly what it says. Examples can be used for social proof
that Python is a widely used programming language.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Sat, 30 Aug 2014 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2014-08-30:links-solve-djangos-top-enterprise-headaches.html</guid></item><item><title>Links for Learning Web Fundamentals</title><link>http://www.letshackdc.com/links-learning-web-fundamentals.html</link><description>&lt;p&gt;The following list is a collection of resources for understanding and
learning Web fundamentals and application programming interfaces (APIs).
Modern software development is driven by crafting custom code and combining
that code with APIs. The concepts listed here are key to performing
software development well. Many of these links are also included in my
&lt;a class="reference external" href="http://www.fullstackpython.com/application-programming-interfaces.html"&gt;application programming interfaces section on Full Stack Python&lt;/a&gt;
but the ones here are programming language agnostic.&lt;/p&gt;
&lt;p&gt;These links go along with my
&lt;a class="reference external" href="http://www.mattmakai.com/presentations/2014-cap1-api-power-laws.html#/"&gt;Web APIs, Exponential Growth and You&lt;/a&gt; talk.&lt;/p&gt;
&lt;div class="section" id="web-and-api-fundamentals"&gt;
&lt;h2&gt;Web and API Fundamentals&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Ensure you've read the
&lt;a class="reference external" href="http://www.w3.org/Protocols/rfc2616/rfc2616.html"&gt;HTTP 1.1 Spec&lt;/a&gt; which
defines the verbs for interacting with the Web, such as GET, POST, PUT,
and DELETE. This document provides many foundational concepts for Web
developers.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://zapier.com/blog/apis-101/"&gt;APIs 101&lt;/a&gt; is a free guide by Zapier
for both technical and non-technical audiences who want to learn the
fundamentals behind web APIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="finding-apis"&gt;
&lt;h2&gt;Finding APIs&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.programmableweb.com/"&gt;ProgrammableWeb&lt;/a&gt; focuses on API industry
news and trends.&lt;/li&gt;
&lt;li&gt;My post on
&lt;a class="reference external" href="http://www.mattmakai.com/identifying-third-party-services-for-django.html"&gt;identifying third party services&lt;/a&gt;
was written with Django in mind but is language agnostic.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="creating-apis"&gt;
&lt;h2&gt;Creating APIs&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&amp;quot;&lt;a class="reference external" href="https://medium.com/&amp;#64;zwacky/design-a-beautiful-rest-api-901c73489458"&gt;Design a beautiful REST API&lt;/a&gt;&amp;quot;
reviews common design decisions regarding endpoints, versioning, errors
and pagination. There is also a source material YouTube video where this
blog post derives its recommendations from.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/interagent/http-api-design"&gt;Heroku's API Design Guide&lt;/a&gt;
provides a design perspective from one of the top current tech companies.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/18f/api-standards"&gt;18F&lt;/a&gt; produced an extensive set
of opinionated API design standards.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.slideshare.net/jmusser/ten-reasons-developershateyourapi"&gt;10 Reasons Developers Hate Your API&lt;/a&gt;
goes through the top difficulties and annoyances developers face when working with APIs and how you can avoid your API falling into the same traps.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="consuming-apis"&gt;
&lt;h2&gt;Consuming APIs&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&amp;quot;&lt;a class="reference external" href="https://stormpath.com/blog/api-driven-development/"&gt;API Driven Development&lt;/a&gt;&amp;quot;
by Randall Degges explains how using APIs in your application cuts
down on the amount of code you have to write and maintain so you can
launch your application faster.&lt;/li&gt;
&lt;li&gt;&amp;quot;&lt;a class="reference external" href="http://www.slideshare.net/SmartBear_Software/safe-sex-with-thirdparty-apis"&gt;Safe Sex with Third Party APIs&lt;/a&gt;&amp;quot;
is a funny high level overview of what you should do to protect your
application when relying on third party services.&lt;/li&gt;
&lt;li&gt;John Sheehan's
&amp;quot;&lt;a class="reference external" href="https://speakerdeck.com/johnsheehan/zen-and-the-art-of-api-maintenance"&gt;Zen and the Art of API Maintenance&lt;/a&gt;&amp;quot;
slides are very relevant for API integration.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Sun, 24 Aug 2014 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2014-08-24:links-learning-web-fundamentals.html</guid></item><item><title>Plushcap Python Package Blog Series</title><link>http://www.letshackdc.com/plushcap-python-package-series.html</link><description>&lt;p&gt;The
&lt;a class="reference external" href="https://www.twilio.com/blog/2014/08/website-sms-alerts-with-the-plushcap-python-package-part-1.html"&gt;first part of my multi-part series&lt;/a&gt;
with a detailed walkthrough for building the
&lt;a class="reference external" href="https://github.com/makaimc/plushcap"&gt;Plushcap Python package&lt;/a&gt;
for website monitoring and alerting is up on the
&lt;a class="reference external" href="https://twilio.com/"&gt;Twilio&lt;/a&gt; blog.&lt;/p&gt;
&lt;p&gt;Plushcap, named after the
&lt;a class="reference external" href="http://neotropical.birds.cornell.edu/portal/species/overview?p_p_spp=589676"&gt;Neotropical bird&lt;/a&gt;,
is a simple open source package for monitoring and
alerting when a website is erroring or not responding to HTTP requests.&lt;/p&gt;
&lt;p&gt;Part two in the series will show how to use Plushcap with a task queue.
Part three will build out the
&lt;a class="reference external" href="https://github.com/makaimc/plushcap-flask"&gt;plushcap-flask&lt;/a&gt; front end
dashboard to view a website's uptime over extended periods.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Fri, 22 Aug 2014 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2014-08-22:plushcap-python-package-series.html</guid></item><item><title>Hiring for U.S. Digital Services</title><link>http://www.letshackdc.com/united-states-digital-services.html</link><description>&lt;p&gt;The new
&lt;a class="reference external" href="http://www.washingtonpost.com/blogs/the-switch/wp/2014/08/11/white-house-launches-u-s-digital-service-with-healthcare-gov-fixer-at-the-helm/"&gt;U.S. Digital Services&lt;/a&gt;
group has a difficult task ahead assembling a
talented new software developers and designers team. Many of the best
developers and designers avoid the public sector because the environment
is generally not conducive to producing amazing work.&lt;/p&gt;
&lt;p&gt;The best software developers are looking for more than just a paycheck. They
are looking to create elegant solutions to hard problems. The
best software developers want to write software worth reading and executing.
They want useless talkers to get out of their way and stop telling them why
&amp;quot;it can't be done like that&amp;quot; and &amp;quot;NO, because we've never done it that way
before.&amp;quot;&lt;/p&gt;
&lt;p&gt;Every startup and government agency talks about how they
are &amp;quot;changing the world&amp;quot; and &amp;quot;doing things that matter.&amp;quot; But few of them are
places worth working because the talk is hollow.&lt;/p&gt;
&lt;p&gt;These are my six recommendations for how Digital Services,
or any organization for that matter, can prove to prospective employees that
they have an environment that deserves to employ some of the country's
best technical minds.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Keep a &amp;quot;Few Managers to Many DOers&amp;quot; Ratio&lt;/li&gt;
&lt;li&gt;Open source code, documentation and data&lt;/li&gt;
&lt;li&gt;Host (quality) tech meetups&lt;/li&gt;
&lt;li&gt;Code review with outside developers&lt;/li&gt;
&lt;li&gt;Hire short-term consultants only&lt;/li&gt;
&lt;li&gt;Ensure great gigs for departing developers&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="section" id="keep-a-few-managers-to-many-doers-ratio"&gt;
&lt;h2&gt;Keep a &amp;quot;Few Managers to Many DOers&amp;quot; Ratio&lt;/h2&gt;
&lt;p&gt;Organizations that quickly build and release software have a significantly
higher percentage of DOers than managers. DOers include software developers,
designers and system administrators (who are increasingly spending their time
coding with Ansible, Puppet, Chef, etc).&lt;/p&gt;
&lt;p&gt;A primary driver in high performing software-run  organizations is that they
constantly work to keep as few managers and non-technical workers as possible.
These non-technical workers include project managers, &amp;quot;technical&amp;quot; architects
(who spend their days drawing useless UML diagrams instead of coding)
and team leads that order people around instead of doing their own work.&lt;/p&gt;
&lt;p&gt;Managers love to spend time in meetings. Meetings are antithetical to focus
on actual work. Make sure to read Paul Graham's essay on
&lt;a class="reference external" href="http://www.paulgraham.com/makersschedule.html"&gt;Maker's Schedule, Manager's Schedule&lt;/a&gt;
to understand why keeping a low manager to many DOers ratio is so important.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="open-source-code-documentation-and-data"&gt;
&lt;h2&gt;Open source code, documentation and data&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/whitehouse/playbook"&gt;This playbook&lt;/a&gt; is a great start.
Make sure it's not just documentation but also &lt;strong&gt;code&lt;/strong&gt; as CFPB has done
with the &lt;a class="reference external" href="https://github.com/cfpb/collab"&gt;collab Python source code&lt;/a&gt; and 18F
with the &lt;a class="reference external" href="https://github.com/18F/answers"&gt;answers Ruby source code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There's something about knowing your code is open to the rest of the software
development world via open source that makes her feel she's held accountable
and writing something that matters.&lt;/p&gt;
&lt;p&gt;A public visualization of how much code at Digital Services is currently open
source, how much is private and how much is in process to be open sourced
would be awesome. Figure out a way to make that dynamically generated so it
doesn't have to be updated in a spreadsheet by hand. Automate the transparency
rather than making it a manual process.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="host-quality-tech-meetups"&gt;
&lt;h2&gt;Host (quality) tech meetups&lt;/h2&gt;
&lt;p&gt;We have all these massive government buildings and the tech community
struggles to find event space for tech meetups such as DC Python, DC
Continuous Delivery, Ruby User's Group and so on. There has to be a way to
cut the red tape and have at least one facility be available for tech events
of 80-120 people. You're hosting so give us updates on all the amazing work
you're doing at Digital Services.&lt;/p&gt;
&lt;p&gt;Also, ensure the space is kept for real tech events that focus on software
development, not the garbage recruiter-run events where passion for
programming is nowhere to be found (I'm looking at you, TechMotion).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="code-review-with-outside-developers"&gt;
&lt;h2&gt;Code review with outside developers&lt;/h2&gt;
&lt;p&gt;The code is open source which is a start. The next step is to bring in
awesome developers from the best tech companies with people in DC like
TrackMaven, SocialRadar, BoundlessGeo, MapBox and SmartThings to sit down for
in-person visits. Conduct hour-long free code review sessions for constructive
code and documentation feedback.&lt;/p&gt;
&lt;p&gt;18F does something like this with their API feedback sessions. Apply that
concept to code reviews. Give quality t-shirts, stickers and simple perks
to outside developers who participate. Have the best reviewers who come in
recommend other great developers they think would also be helpful to keep
the code reviewer pipeline stocked.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="hire-short-term-consultants-only"&gt;
&lt;h2&gt;Hire short-term consultants only&lt;/h2&gt;
&lt;p&gt;Use consultants only for niche skills such as information security in less than
8 week durations, if at all. Consultants are parasites. I used to be one.
Even though I tried to do good work it was impossible to properly serve
the dual masters of client and consulting company.&lt;/p&gt;
&lt;p&gt;Make information on the number and percentage of consultants at Digital
Services publicly assessible. Actually it may be worth creating a webpage
dashboard of all the things software developers care about so they can see
how an organization stacks up in various attributes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ensure-great-gigs-for-departing-developers"&gt;
&lt;h2&gt;Ensure great gigs for departing developers&lt;/h2&gt;
&lt;p&gt;When developers eventually depart from Digital Services they should be getting
gigs at private companies that have nothing to do with government sector
work. If developers are coming out of Digital Services
in a couple of years and being hired by Bay Area companies that's a
positive indictator that the program is at least hiring the right talent.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;That's my initial incomplete recommendations list. But each of those things
are really difficult for most government organizations to do at all. The above
items are a good litmus test for whether Digital Services is for real or
will end up perpetuating the quagmire of overcomplicated government software
systems maintained by an army of overpaid consultants.&lt;/p&gt;
&lt;p&gt;Let's hope that Digital Services either writes some code worth reading or
creates some software worth writing about.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 13 Aug 2014 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2014-08-13:united-states-digital-services.html</guid></item><item><title>Favoring Hands On Walkthroughs</title><link>http://www.letshackdc.com/favoring-hands-on-walkthroughs.html</link><description>&lt;p&gt;Tomorrow I'm giving a talk at
&lt;a class="reference external" href="https://ep2014.europython.eu/en/"&gt;EuroPython&lt;/a&gt; called
&lt;a class="reference external" href="https://ep2014.europython.eu/en/schedule/sessions/41/"&gt;Full Stack Python&lt;/a&gt;
which is named after my Full Stack Python website. I'm stoked to give the
talk. I would not have flown thousands of miles
from the US if I wasn't excited (ok fine, I also really wanted to see Berlin).&lt;/p&gt;
&lt;p&gt;I am noticing a trend though at conferences that's making me think
about how I want to approach further events. The trend is the excessive
reduction in time for speaking slots. Tomorrow's talk will only be 25 minutes.
That's barely enough time to present the Python web application stack topics
at a very high level. I've had to rip out much of the best material which has
actual code examples and further diagrams to meet the tight time limit.&lt;/p&gt;
&lt;p&gt;Many conferences are now shortening talk times to 20 minutes or even
10 minutes. That length is simply not enough time to tell a cohert story,
clearly articulate new technical concepts, step through diagrams to visually
explain topics and perform a live code demonstration. And that's okay -
conference organizers should absolutely do what's best for their audience
and event. Many also topics don't need to use all those methods for the
audience to learn the subject matter.&lt;/p&gt;
&lt;p&gt;Yet lately the topics I'm most interested in require more time to dive
into the technical details. Which is why I am beginning to prefer teaching
through hands on walkthroughs for the audience in a tutorial session rather
than a brief talk. I've found audiences learn more from a hands on walkthrough
tutorial even if sessions take correspondingly more time than two or three
traditional talks.&lt;/p&gt;
&lt;p&gt;For the remainder of 2014 I'll still do the occasional shorter duration
technical talk. However, my hypothesis is that I can help audiences learn
more about technical subjects through them participating in hands on
walkthroughs at tutorial sessions than time crunched technical talks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Mon, 21 Jul 2014 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2014-07-21:favoring-hands-on-walkthroughs.html</guid></item><item><title>Recent Writing</title><link>http://www.letshackdc.com/recent-writing-june-2014.html</link><description>&lt;p&gt;Recently I have been writing content on other places around the Web. Here's a
quick summary of what I've been up to.&lt;/p&gt;
&lt;p&gt;The majority of my work has been on
&lt;a class="reference external" href="http://www.fullstackpython.com/"&gt;Full Stack Python&lt;/a&gt;, which I update every
day with new sections, resources and explanations for all layers of the Python
web stack.&lt;/p&gt;
&lt;p&gt;There are three blog posts on &lt;a class="reference external" href="https://www.twilio.com/"&gt;Twilio&lt;/a&gt;'s blog as
well as one on
&lt;a class="reference external" href="http://radar.oreilly.com/"&gt;O'Reilly Radar&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2014/02/introducing-developer-evangelist-matt-makai.html"&gt;Introducing Developer Evangelist Matt Makai&lt;/a&gt;
is my introductory blog post. I write about D.C.'s current mistake-avoidance
culture and the perils of not stretching yourself professionally because
you're too afraid to fail at anything.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2014/05/ansible-text-messages-notifications-with-twilio-sms.html"&gt;Ansible Text Message Notifications with Twilio SMS&lt;/a&gt;
is a detailed walkthrough for the Twilio notifications module in core
&lt;a class="reference external" href="http://www.ansible.com/home"&gt;Ansible&lt;/a&gt; as of the
&lt;a class="reference external" href="http://www.ansible.com/blog/ansible-1.6-adds-30-new-modules"&gt;1.6 release&lt;/a&gt;
that came out in May.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.twilio.com/blog/2014/05/github-pull-request-sms-alerts.html"&gt;How To Set Up GitHub Activity SMS Alerts&lt;/a&gt;
is a short guide for adding SMS notifications to GitHub pull requests with
Twilio and Zapier. It's a handy trick I use on Full Stack Python to ensure
I respond to new requests in a timely fashion.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://radar.oreilly.com/2014/05/driving-demand-for-full-stack-developers.html"&gt;Driving demand for full stack developers&lt;/a&gt;
is my most recent post and first time on the O'Reilly Programming Blog.
I enjoyed thinking about the full stack trend and writing about it. I may
reconsider my positions taken in that post at some point. For now though I
do believe the proliferation of mature open source projects, APIs and
infrastructure-as-code as major trends that allow talented developers to
produce entire professional applications themselves with scope that would've
been impossible as little as 5 years ago.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are several other posts in the works. However, much of my focus lately
has been on producing content for technical talks. In particular, I'm looking
forward to my
&lt;a class="reference external" href="https://ep2014.europython.eu/en/schedule/sessions/41/"&gt;Full Stack Python talk at EuroPython&lt;/a&gt;
in Berlin on July 22nd.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Sun, 08 Jun 2014 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2014-06-08:recent-writing-june-2014.html</guid></item><item><title>CFPB Collab MySQL Install Error</title><link>http://www.letshackdc.com/cfpb-collab-mysql-requirements-txt-installation-error.html</link><description>&lt;p&gt;In case you're trying to get &lt;a class="reference external" href="https://github.com/cfpb/collab"&gt;CFPB collab&lt;/a&gt;
working in your environment, there's a few errors you might run into. This is
a quick post to highlight solutions to the issues I came across.&lt;/p&gt;
&lt;p&gt;Collab currently requires MySQL for the backend. I do not believe MySQL is a
hard requirement, but that's what we had installed on our Linux servers at
the time I was working on it while consulting for the agency. If you run into
the following error:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Downloading/unpacking MySQL-python (from -r requirements.txt (line 11))
  Downloading MySQL-python-1.2.5.zip (108kB): 108kB downloaded
  Running setup.py egg_info for package MySQL-python
    sh: 1: mysql_config: not found
    Traceback (most recent call last):
      File &amp;quot;&amp;lt;string&amp;gt;&amp;quot;, line 16, in &amp;lt;module&amp;gt;
      File &amp;quot;/home/matt/Envs/collab/build/MySQL-python/setup.py&amp;quot;, line 17, in &amp;lt;module&amp;gt;
        metadata, options = get_config()
      File &amp;quot;setup_posix.py&amp;quot;, line 43, in get_config
        libs = mysql_config(&amp;quot;libs_r&amp;quot;)
      File &amp;quot;setup_posix.py&amp;quot;, line 25, in mysql_config
        raise EnvironmentError(&amp;quot;%s not found&amp;quot; % (mysql_config.path,))
    EnvironmentError: mysql_config not found
    Complete output from command python setup.py egg_info:
    sh: 1: mysql_config: not found

Traceback (most recent call last):

  File &amp;quot;&amp;lt;string&amp;gt;&amp;quot;, line 16, in &amp;lt;module&amp;gt;

  File &amp;quot;/home/matt/Envs/collab/build/MySQL-python/setup.py&amp;quot;, line 17, in &amp;lt;module&amp;gt;

    metadata, options = get_config()

  File &amp;quot;setup_posix.py&amp;quot;, line 43, in get_config

    libs = mysql_config(&amp;quot;libs_r&amp;quot;)

  File &amp;quot;setup_posix.py&amp;quot;, line 25, in mysql_config

    raise EnvironmentError(&amp;quot;%s not found&amp;quot; % (mysql_config.path,))

EnvironmentError: mysql_config not found

----------------------------------------
&lt;/pre&gt;
&lt;p&gt;Make sure you have the MySQL server package and the client development
library installed. On Ubuntu you can accomplish this by running:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo apt-get install mysql-server libmysqlclient-dev
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Fri, 17 Jan 2014 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2014-01-17:cfpb-collab-mysql-requirements-txt-installation-error.html</guid></item><item><title>My 2013 Software Development Year in Review</title><link>http://www.letshackdc.com/2013-development-year-in-review.html</link><description>&lt;p&gt;2013 was an incredible and fortunate year for me. The quick highlights:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;traveled the US for 5 months talking to tech startups and software
developers&lt;/li&gt;
&lt;li&gt;developed numerous client and open source software projects while traveling&lt;/li&gt;
&lt;li&gt;wrote dozens of blog posts on Coding Across America and this blog&lt;/li&gt;
&lt;li&gt;gave technical talks in D.C., Memphis, San Diego, San Francisco, Omaha,
Chicago, and Boston&lt;/li&gt;
&lt;li&gt;built out Full Stack Python which I originally started in December 2012&lt;/li&gt;
&lt;li&gt;accepted an offer to join Twilio as their D.C.-based Developer Evangelist&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="coding-across-america"&gt;
&lt;h2&gt;Coding Across America&lt;/h2&gt;
&lt;p&gt;As I anticipated in my
&lt;a class="reference external" href="../coding-across-america.html"&gt;Coding Across America blog post&lt;/a&gt;, much of
2013 was dominated by my road trip. I'm now a firm believer in the power of
self-defined projects that motivate yourself to learn and grow. I am happy
with how my &lt;a class="reference external" href="http://www.codingacrossamerica.com/"&gt;Coding Across America&lt;/a&gt;
website is coming along and I look forward to adding even more great content
in 2014.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="languages"&gt;
&lt;h2&gt;Languages&lt;/h2&gt;
&lt;p&gt;Here's what I wrote last year about which languages I worked with:&lt;/p&gt;
&lt;blockquote&gt;
I spent most of the year programming in Python and JavaScript, with a
touch of Objective-C, Java, and Clojure. An approximate breakdown
would be something like 90% Python &amp;amp; JavaScript (hard to separate them
since I work with both on the same projects), 5% Objective-C, 5% Java
&amp;amp; Clojure. If anything, my time with Python and JavaScript might be
higher.&lt;/blockquote&gt;
&lt;p&gt;Ditto for this year, minus the Objective-C and Java. My focus was on Python
with emphasis on learning Ansible, (railsless) Capistrano, and d3.js. I also
handled a lot of server and application operations. New Relic along with
decent Django application logging was a lifesaver on several production
projects I worked on.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="technical-talks"&gt;
&lt;h2&gt;Technical Talks&lt;/h2&gt;
&lt;p&gt;I wouldn't have believed someone if they told me at the end of 2012 that in
2013 I'd have the opportunity to give technical talks all over the US.
Fortunately all that came to fruition. My first talk outside of Washington,
D.C. was at MemPy in March.&lt;/p&gt;
&lt;p&gt;My favorite talks this year were
&lt;a class="reference external" href="http://www.youtube.com/watch?v=iGP8DQIqxXs"&gt;Making Django Play Nice with Third Party Services&lt;/a&gt;
at &lt;a class="reference external" href="http://www.djangocon.us/schedule/presentation/47/"&gt;DjangoCon 2013&lt;/a&gt;
in Chicago,
&lt;a class="reference external" href="http://www.youtube.com/watch?v=psCVC9BdgsA"&gt;Staying Sane While Taking Over An Existing Django Codebase&lt;/a&gt;
at &lt;a class="reference external" href="http://www.meetup.com/djangoboston/events/100266532/"&gt;Django Boston&lt;/a&gt;,
and &lt;a class="reference external" href="http://www.mattmakai.com/static/presentations/jmu-everything-i-wish-i-knew.html"&gt;Everything I Wish I Knew as JMU Computer Science Undergrad&lt;/a&gt;
to
&lt;a class="reference external" href="http://acm.cs.jmu.edu/"&gt;JMU's Association for Computing Machinery (ACM) group&lt;/a&gt; (where I studied computer science for undergrad). I really enjoyed
giving all my talks, those were just the ones that stick out in my mind the
most.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="open-source"&gt;
&lt;h2&gt;Open Source&lt;/h2&gt;
&lt;p&gt;Most of my open source contributions were just additions to this blog,
Coding Across America, and Full Stack Python (all of which are open
repositories on GitHub). Each site is powered by Pelican, a Python-based
static website generator. I wrote a
&lt;a class="reference external" href="../introduction-to-pelican.html"&gt;Pelican quickstart post&lt;/a&gt; in November due
to the number of questions I received this year about how to get started
with Pelican.&lt;/p&gt;
&lt;img alt="My 2013 GitHub contributions through Dec 13, 2013" src="/source/static/img/131212-dev-year-review/github-contributions-2013.jpg" style="width: 100%;" /&gt;
&lt;p&gt;My GitHub contributions through December 13 of 2013.&lt;/p&gt;
&lt;p&gt;I'm working on open sourcing my Ansible scripts for deploying Django websites.
The repository is called
&lt;a class="reference external" href="https://github.com/makaimc/deploy-django-with-ansible"&gt;deploy-django-with-ansible&lt;/a&gt;
and it will use the MIT open source license.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="twilio"&gt;
&lt;h2&gt;Twilio&lt;/h2&gt;
&lt;p&gt;I am starting a new gig on Jan 6 as Twilio's new Developer Evangelist. I'll
be based in D.C. and will travel quite a bit to tech events around the US.
It's an exciting opportunity and I'm sure I'll have more to say once I get
started in a few weeks.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Thu, 12 Dec 2013 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2013-12-12:2013-development-year-in-review.html</guid></item><item><title>Getting Started With Pelican and GitHub Pages</title><link>http://www.letshackdc.com/introduction-to-pelican.html</link><description>&lt;p&gt;Pelican is an open source static website generator. While Pelican is written
in Python, you don't have to know much about that programming language to get
started. In this post, I'll walk through the steps to getting your first
Pelican website up and running, including a deployment to GitHub Pages for
hosting.&lt;/p&gt;
&lt;p&gt;A quick note before we dive in. I've been using Pelican for about
two and a half years. I currently have three live sites
deployed, and the code to each one is on GitHub. Those repositories are
&lt;a class="reference external" href="https://github.com/makaimc/mattmakai.github.com"&gt;this blog&lt;/a&gt;,
&lt;a class="reference external" href="https://github.com/makaimc/codingacrossamerica.github.com"&gt;my Coding Across America project&lt;/a&gt;,
and
&lt;a class="reference external" href="https://github.com/makaimc/fullstackpython.github.com"&gt;the Full Stack Python walkthrough&lt;/a&gt;.
I can't guarantee that each one uses Pelican version 3.3+ best practices, but
each one does exactly what I want it to do: get out of my way so I can
write and publish.&lt;/p&gt;
&lt;p&gt;I'm assuming you're working with Mac OS X or Linux for this tutorial. I
used Cygwin on Windows a couple of years ago to get some of this working so
that may be an option if you're operating system limited.&lt;/p&gt;
&lt;div class="section" id="kickstart-example-project"&gt;
&lt;h2&gt;Kickstart Example Project&lt;/h2&gt;
&lt;p&gt;Let's use the Full Stack Python code to get up and running within just a
few steps.&lt;/p&gt;
&lt;p&gt;First, grab the code and put it in a directory named &amp;quot;fsp&amp;quot;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git clone git&amp;#64;github.com:makaimc/fullstackpython.github.com fsp
&lt;/pre&gt;
&lt;p&gt;We can already get the website working since it's already been generated in
its current state by Pelican when I checked it in. Go to the &amp;quot;fsp&amp;quot; directory
and use the built-in Python HTTP server:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python -m SimpleHTTPServer
&lt;/pre&gt;
&lt;p&gt;Full Stack Python is now running on port 8000. Go to &lt;a class="reference external" href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt;
in your browser and you'll see the same site that's currently on
fullstackpython.com. Note if you want to run more than one site at a time
you can add a port number after &amp;quot;SimpleHTTPServer&amp;quot; to serve on a different
port.&lt;/p&gt;
&lt;p&gt;Now we need to install the dependencies to make changes to the site and
regenerate the output. This step is the one part that takes a little more
Python knowledge. We need to use &lt;a class="reference external" href="https://pypi.python.org/pypi/pip"&gt;pip&lt;/a&gt;
to install Pelican, but first we need to make sure pip is installed.
On Mac OS X's console:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo easy_install pip
&lt;/pre&gt;
&lt;p&gt;On the Ubuntu command line:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo apt-get install python-pip
&lt;/pre&gt;
&lt;p&gt;If you're not familiar with Python, you'll also want to look at
&lt;a class="reference external" href="https://pypi.python.org/pypi/virtualenv"&gt;virtualenv&lt;/a&gt; to isolate Pelican's
dependencies. This will be important if you have more than one Pelican-using
project and they are on different versions of Pelican. Python developers can
just nod and move along here.&lt;/p&gt;
&lt;p&gt;Full Stack Python's dependencies are stored in the
fsp/source/requirements.txt file. Go to that directory and install Pelican:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pip install -r requirements.txt
&lt;/pre&gt;
&lt;p&gt;That will fail if you're not using a virtualenv because you're trying to
install these requirements into your base Python installation. If you don't
want to use virtualenv at this point just put a &amp;quot;sudo&amp;quot; in front of the
command.&lt;/p&gt;
&lt;p&gt;We're ready to make a change now. Go to the fsp/source/content/pages/
directory and modify one of the files. For example, add another
entry in change-log.rst then save the file.&lt;/p&gt;
&lt;p&gt;Pelican needs to regenerate the website output before you can see the results
in your browser. I've wrapped those changes in a Makefile stored in
fsp/source/. Rather than explaining make here, let's just execute the commands
manually that we need to regenerate the website:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cp -R static-html/* ..
pelican -t theme -s settings.py -o .. content
cp ../pages/* ../
rm -rf ../pages/
&lt;/pre&gt;
&lt;p&gt;What's all that? Basically we're just:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;copying static files that Pelican doesn't touch (like CSS, JavaScript,
and images) into our output directory&lt;/li&gt;
&lt;li&gt;regenerating the website HTML output with Pelican&lt;/li&gt;
&lt;li&gt;copying the files Pelican puts in the pages directory into the base directory&lt;/li&gt;
&lt;li&gt;deleting the pages directory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I wrap those commands in a Makefile to automate the execution of those
commands. Note that there's a bunch of ways to make this build process more
efficient. But once I got everything working I focused on writing and
publishing. You should figure out what setup will work best for your goals.&lt;/p&gt;
&lt;p&gt;Now the website is regenerated and you should see the changes in your
browser when you refresh the page.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="github-pages"&gt;
&lt;h2&gt;GitHub Pages&lt;/h2&gt;
&lt;p&gt;GitHub Pages is an easy and free way to host static websites. You just
need to have a branch called &amp;quot;gh-pages&amp;quot; in your repository, then go into
the application's settings through GitHub's user interface and enable
GitHub Pages.&lt;/p&gt;
&lt;img alt="GitHub Pages website view under application settings" src="/source/static/img/131106-pelican/gh-pages.jpg" style="width: 100%;" /&gt;
&lt;p&gt;GitHub Pages settings through the user interface on their web application.&lt;/p&gt;
&lt;p&gt;Fork the Full Stack Python repository or create a new repository with a
gh-pages branch. Enable GitHub Pages under the application settings. Then
you should be able to access your static website at [repo name].github.io.&lt;/p&gt;
&lt;p&gt;One last note. You can point your host records for your DNS settings of a
domain you own to 204.232.175.78 so the site will be accessible through
your domain name. I use Namecheap as my domain name registrar so my host
records for &amp;#64; and www look like this:&lt;/p&gt;
&lt;img alt="Namecheap host records for fullstackpython.com" src="/source/static/img/131106-pelican/host-records-github-pages.jpg" style="width: 100%;" /&gt;
&lt;p&gt;Namecheap host records pointing to GitHub Pages IP address for
fullstackpython.com.&lt;/p&gt;
&lt;p&gt;That's all for now! You'll definitely want to check out the
&lt;a class="reference external" href="http://docs.getpelican.com/en/latest/getting_started.html"&gt;Pelican Getting Started Guide&lt;/a&gt;
next for a thorough walkthrough of setting up your own new project.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;If you enjoyed this post you should check out my
&lt;a class="reference external" href="http://www.codingacrossamerica.com/"&gt;Coding Across America&lt;/a&gt;
and &lt;a class="reference external" href="http://www.fullstackpython.com/"&gt;Full Stack Python&lt;/a&gt; projects, both of
which are Pelican-powered websites with all code freely accessible on
GitHub.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 06 Nov 2013 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2013-11-06:introduction-to-pelican.html</guid></item><item><title>Evaluating Third Party Services for Django Projects</title><link>http://www.letshackdc.com/evaluating-third-party-services-for-django.html</link><description>&lt;p&gt;Every non-trivial modern Django project combines externally hosted third
party services with custom code to create a complete web application. The
art of discovering, evaluating, integrating, and maintaining these third
party services is an important capability for any post-entry-level Django
developer. I'm writing these posts as a framework for how to broadly think
about working with third party services.&lt;/p&gt;
&lt;p&gt;This is the second of four blog posts, following my
&lt;a class="reference external" href="../identifying-third-party-services-for-django.html"&gt;discovering third party services post&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="company-evaluation-criteria"&gt;
&lt;h2&gt;Company Evaluation Criteria&lt;/h2&gt;
&lt;p&gt;I start by evaluating the third party service company itself. Several
questions immediately come to mind when looking at a newly discovered
service:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Which languages and frameworks are shown in their tutorials?&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;I ask this question because it's common for newer services built on Rails to
only show Rails tutorials. In that case I know I may potentially spend a
significant amount of time figuring out how to connect to their service. I
may also have to build a third party Python binding or fork an existing but
not well-maintained binding.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;What ecosystem is their platform built on?&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;What happens if you end up reliant upon the third party service and begin
to encounter edge cases? If they only have Ruby or PHP developers in their
company, you're going to have to figure it out on your own. On the other hand
if their platform is built on the Python ecosystem, they'll likely have
developers passionate and interested in helping you solve the problems you
encounter while building and maintaining your Django app.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;Does the company have one or more developer evangelists?&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;This question has two parts. First, developer evangelists are great for
answering technical questions that come up while you're trying out a service.
Second, I'm wondering &amp;quot;does this company care about developers or are they
a sales outfit&amp;quot;? Some services launch to great fanfare but flame out quickly.
For example, look at
&lt;a class="reference external" href="http://www.crunchbase.com/company/simplegeo"&gt;SimpleGeo&lt;/a&gt;. If your Django
project is built on a service that's about to shut down that will shift your
focus from new development to ripping out an existing part of your project
and replacing it with a home-grown solution or another third party service.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;What's the service's &amp;quot;data gravity&amp;quot;?&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/acdha"&gt;Chris Adams&lt;/a&gt; gave me the &amp;quot;data gravity&amp;quot; term
while I was presenting the initial rough cut of my
&lt;a class="reference external" href="http://www.mattmakai.com/static/presentations/djangocon-2013.html"&gt;DjangoCon talk&lt;/a&gt;
at
&lt;a class="reference external" href="http://www.meetup.com/django-district/events/131235942/"&gt;Django District&lt;/a&gt;.
&amp;quot;Data gravity&amp;quot; struck me as an awesome concept for thinking about an
increasingly valuable asset to any business: its data. The more data gravity
a service potentially holds over my Django project, the more careful
consideration that needs to happen about testing, abstracting, and backing
up our project's data that could be compromised or lost on that service.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;StackExchange or forum discussions&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Are people asking questions about a third party service? If so, that's a good
sign you're not alone in uncharted territory. StackExchange is the defacto
community for asking technical questions nowadays. Don't neglect blog posts
and other forums though. Sometimes companies have official forums for their
services. They are a great way to find out there's either an active, engaged
group of developers on the service's side ready to help you out. Or a broken
cesspool of empty promises and unanswered questions (for an example, see
&lt;a class="reference external" href="http://developer.linkedin.com/forum"&gt;LinkedIn's atrocious developer forums&lt;/a&gt;).&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;If you're going to DjangoCon this year, come see my talk on
&lt;a class="reference external" href="http://www.djangocon.us/schedule/presentation/47/"&gt;Making Django Play Nice With Third Party Services&lt;/a&gt;
on September 5 at 10am.&lt;/p&gt;
&lt;p&gt;If you enjoyed this post you should read
&lt;a class="reference external" href="../django-project-checklist.html"&gt;my checklist for evaluating existing Django projects&lt;/a&gt;
and check out my &lt;a class="reference external" href="http://www.codingacrossamerica.com/"&gt;Coding Across America&lt;/a&gt;
project.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 14 Aug 2013 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2013-08-14:evaluating-third-party-services-for-django.html</guid></item><item><title>Discovering Third Party Services for Django Projects</title><link>http://www.letshackdc.com/identifying-third-party-services-for-django.html</link><description>&lt;p&gt;Every non-trivial modern Django project combines externally hosted third
party services with custom code to create a complete web application.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Google Analytics for traffic and customer funnel analysis&lt;/li&gt;
&lt;li&gt;Stripe, Dwolla, or PayPal for payment processing&lt;/li&gt;
&lt;li&gt;Twilio for text message notifications&lt;/li&gt;
&lt;li&gt;GitHub API for code searches&lt;/li&gt;
&lt;li&gt;New Relic or CopperEgg for application and infrastructure monitoring&lt;/li&gt;
&lt;li&gt;Intercom.io for user engagement&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A major part of being a knowledgeable developer in 2013 is knowing what
services are out there. This post provides resources for discovering third
party services you can use in your Django web application. How to evaluate
known services is a separate topic that will come in a later post.&lt;/p&gt;
&lt;p&gt;Some of these services, such as Google Analytics, are easy to drop into
your application with a line of JavaScript. Other services, such as
Intercom.io, Stripe, or Twilio are integrated on the back end. These services
are often critical to your application's full operation.&lt;/p&gt;
&lt;p&gt;Even with simple drop-in third party services there are ways to properly
handle them in your Django project. For example, you should have a flag
that disables Google Analytics code in your local development environment
when DEBUG is set to True in settings. That way the JavaScript does not
load while you're working.&lt;/p&gt;
&lt;div class="section" id="mindset"&gt;
&lt;h2&gt;Mindset&lt;/h2&gt;
&lt;p&gt;I prefer to do my research when I have extra time and do not yet have a
specific purpose for a service in mind. This situation allows me to browse
services and their competitors without getting hung up on particular
features. Then when I'm working on a particular project I have a wide
set of choices that I am aware of which I can evaluate further.&lt;/p&gt;
&lt;p&gt;Your mileage may vary, but when I'm in the moment working on a specific
application my mindset is just to try a service out and get it to work
without thinking as objectively about potential alternatives. Identifying
services before starting a particular project helps me to avoid that
narrow focus.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="weekly-updates"&gt;
&lt;h2&gt;Weekly Updates&lt;/h2&gt;
&lt;p&gt;There are a couple of newsletters I subscribe to that push out information
about new and existing services. Weekly updates help me learn on a regular
basis bouth about the services themselves and also about the Python bindings
that exist:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://leanstack.io/"&gt;Leanstack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lincolnloop.com/django-round-up/"&gt;Lincoln Loop Django Newsletter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pythonweekly.com/"&gt;Python Weekly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pycoders.com/"&gt;Pycoder's Weekly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="ongoing"&gt;
&lt;h2&gt;Ongoing&lt;/h2&gt;
&lt;p&gt;There are a few other sites that help give me ideas for what I can be using.
I browse these sites on a regular basis to see what's new or remind me about
a service I have not used in awhile:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://addons.heroku.com/"&gt;Heroku Addons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.geckoboard.com/widget-directory/"&gt;Geckoboard Widgets Directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://ducksboard.com/services-integrations/"&gt;Ducksboard Services Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://newrelic.com/platform"&gt;New Relic Platform Partners&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The great part about identifying these services is that the knowledge
translates to other frameworks, such as Flask or Pyramid, and other languages
such as Ruby and Clojure. Although in my next blog post I'll describe why
you should be evaluating these services from a language and framework
perspective before committing to them.&lt;/p&gt;
&lt;p&gt;If you're going to DjangoCon this year, come see my talk on
&lt;a class="reference external" href="http://www.djangocon.us/schedule/presentation/47/"&gt;Making Django Play Nice With Third Party Services&lt;/a&gt;
on September 5 at 10am.&lt;/p&gt;
&lt;p&gt;If you enjoyed this post you should read
&lt;a class="reference external" href="../django-project-checklist.html"&gt;my checklist for evaluating existing Django projects&lt;/a&gt;
and check out my &lt;a class="reference external" href="http://www.codingacrossamerica.com/"&gt;Coding Across America&lt;/a&gt;
project.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 14 Aug 2013 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2013-08-14:identifying-third-party-services-for-django.html</guid></item><item><title>One Additon Per Day</title><link>http://www.letshackdc.com/one-addition-per-day.html</link><description>&lt;p&gt;I'm a huge believer in the power of results that accumulate by working on
something every single day. This idea obviously isn't new.
&lt;a class="reference external" href="http://nathanbarry.com/authority/"&gt;Nathan Barry's new book Authority&lt;/a&gt; is
one of the most recent examples that explains the power of writing each day.&lt;/p&gt;
&lt;p&gt;My favorite personal data visualization to show the power that results from
accumulation every day is my
&lt;a class="reference external" href="http://www.codingacrossamerica.com/#miles-driven-viz"&gt;miles driven per day&lt;/a&gt;
graph from my Coding Across America project. At the very beginning of my trip
a large drive could double my total mileage, for example going 720 miles
from Charlotte, NC to New Orleans, LA. But a 700 mile drive from Colorado
to Des Moines looks miniscule compared to the approximately 10,000 total
miles 2/3 of the way through my trip.&lt;/p&gt;
&lt;p&gt;There are several things off the top of my head that I finished in large
part because of a sustained daily effort (other than the miles driven chart
above):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;My Virginia Tech Computer Science Master's thesis&lt;/li&gt;
&lt;li&gt;My six month &lt;a class="reference external" href="../pages/learning-log.html"&gt;learning log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Working out and/or running - I almost never miss a day&lt;/li&gt;
&lt;li&gt;Numerous &lt;a class="reference external" href="../pages/presentations.html"&gt;presentations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next up will be taking my very rough but well received (judging from the
number of stars on Github so far)
&lt;a class="reference external" href="http://www.fullstackpython.com/"&gt;Full Stack Python&lt;/a&gt; and fleshing out
each section. Within the next week it won't be complete, but after a few
weeks of sustained effort it will become a much more comprehensive resource.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Mon, 12 Aug 2013 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2013-08-12:one-addition-per-day.html</guid></item><item><title>Checklist for Evaluating Existing Django Projects</title><link>http://www.letshackdc.com/django-project-checklist.html</link><description>&lt;p&gt;Lately I've consulted for several clients where I was asked to drop into
an existing large Django project code base to triage issues and build
enhancements. Working on an established code base is common whether you're
a new developer on a team or like me working on consulting projects.&lt;/p&gt;
&lt;p&gt;There are many attributes of an existing project: the code (and
documentation), infrastructure, deployment procedures, and third-party
services. While reviewing each one of these areas I get either a good feeling
I'll be able to accomplish my work quickly, or a terrible feeling that
the pre-work to triage issues will dwarf the scope of the work requested
by the client.&lt;/p&gt;
&lt;p&gt;Here is the checklist I now use (and add to when I uncover something new)
after having gone through this process of evaluating established projects
many times.&lt;/p&gt;
&lt;div class="section" id="code-base"&gt;
&lt;h2&gt;Code base&lt;/h2&gt;
&lt;p&gt;The code repository is where most developers will dive in and try to
understand the project. A README file that screams &amp;quot;start here!&amp;quot; is a must.&lt;/p&gt;
&lt;div class="section" id="readme"&gt;
&lt;h3&gt;README&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A brief (one paragraph or bullet points) explanation of what the project
is, its purpose, and goals to provide context for developers&lt;/li&gt;
&lt;li&gt;Important links to development wikis, testing, staging, and production
servers&lt;/li&gt;
&lt;li&gt;Contact information for anyone critical to the project.&lt;/li&gt;
&lt;li&gt;&amp;quot;Getting Started&amp;quot; section that bootstraps developers from a blank
slate to a functional development environment. Included even if you're
using Vagrant (to show a new developer how to use Vagrant)&lt;/li&gt;
&lt;li&gt;Instructions for special software required for a fully-functioanl site.
For example, how to set up Solr and build the search indexes, or how to
locally replicate the database from a test or production environment&lt;/li&gt;
&lt;li&gt;Basic deployment information and/or a link to detailed deployment
instructions (even if this is just how to use the included Fabric or
Capistrano scripts)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="project-structure"&gt;
&lt;h3&gt;Project Structure&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Is this a flat 1.3 (and previous versions) Django project structure?&lt;/li&gt;
&lt;li&gt;Is this a standard Django 1.4+ project structure with urls.py, wsgi.py,
and settings.py in a subdirectory under the project's root directory?&lt;/li&gt;
&lt;li&gt;Does this project use a custom layout with a mangled manage.py?
For example, do the individual app directories live in the project's root
directory or are they found in a subdirectory such as &amp;quot;apps&amp;quot;?&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="dependencies"&gt;
&lt;h3&gt;Dependencies&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Is the requirements.txt located in the project's root folder or under
a subdirectory such as env?&lt;/li&gt;
&lt;li&gt;Does the requirements.txt file itself point to another text file such
as production.txt located in a subdirectory?&lt;/li&gt;
&lt;li&gt;Are all the requirements pegged to specific version numbers? If not,
how fast can you run away from this project?&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="configuration"&gt;
&lt;h3&gt;Configuration&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Is the settings.py file located in the root directory or under the
project name's subdirectory as standard in Django 1.4+?&lt;/li&gt;
&lt;li&gt;Is there a local_settings.py template file?&lt;/li&gt;
&lt;li&gt;Are environment variables required? What's the proper way to set those
variables?&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="data"&gt;
&lt;h3&gt;Data&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Which database is the project tested to run with? MySQL, PostgreSQL?&lt;/li&gt;
&lt;li&gt;Are there custom SQL scripts that can only be used with a specific
database? For example, if the project is designed to run on MySQL are
there SQL primary keys with autoincrement that would be confusing to
translate to PostgreSQL?&lt;/li&gt;
&lt;li&gt;Does this project have test data? Is the test data per app, or loaded
for the entire project?&lt;/li&gt;
&lt;li&gt;How is test data loaded? Data data generation scripts, fixtures, database
dump SQL scripts, or a database replication scheme?&lt;/li&gt;
&lt;li&gt;If by fixtures or unsure, use &amp;quot;grep -r fixtures.json *.py&amp;quot; and
&amp;quot;find . -name '*.json'&amp;quot; to find one or more JSON fixture files.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="tests"&gt;
&lt;h3&gt;Tests&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Are there any tests? If so, do the tests.py files contain anything more
than the boilerplate 1+1=2 example test function?&lt;/li&gt;
&lt;li&gt;Is there a custom test runner? Is django-nose or django-jenkins used to
run the tests?&lt;/li&gt;
&lt;li&gt;Are tests grouped into a single tests.py file or are they under a tests/
subdirectory under each app?&lt;/li&gt;
&lt;li&gt;Are there coverage reports generated for the existing code?&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="infrastructure"&gt;
&lt;h2&gt;Infrastructure&lt;/h2&gt;
&lt;p&gt;Infrastructure is the actual physical or virtualized hardware, or
platform-as-a-service, that the project is deployed to. Production, staging,
testing, and development servers not on an individual developer's machine
are included in this category.&lt;/p&gt;
&lt;p&gt;Note that there are certain things I'm leaving out here. I firmly believe
there is little to no value to &amp;quot;enterprise architecture&amp;quot; type diagrams that
are not generated dynamically. The amount of man hours I've witnessed
ivory tower architects waste on drawing UML diagrams makes my blood boil.&lt;/p&gt;
&lt;div class="section" id="environments"&gt;
&lt;h3&gt;Environments&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Is there a master &amp;quot;environments document&amp;quot; that is autogenerated with
information on the infrastructure?&lt;/li&gt;
&lt;li&gt;What environment is the project designed to run in?&lt;/li&gt;
&lt;li&gt;Linux? What distribution and version? What packages need to be installed?&lt;/li&gt;
&lt;li&gt;Is this project meant to run on a platform-as-a-service? Which one? Heroku?&lt;/li&gt;
&lt;li&gt;Is there a content delivery network necessary for static and media files?
How are the files synced when there is a static files change during
deployment?&lt;/li&gt;
&lt;li&gt;Are there separate servers for the database and web? Are there separate
caching servers? (Obviously this question can scale to many other questions
depending on the infrastructure size.)&lt;/li&gt;
&lt;li&gt;What are the IP addresses of existing servers?&lt;/li&gt;
&lt;li&gt;Are the testing, staging, and production environments in sync? How do you
know if they go out of sync?&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="access-rights"&gt;
&lt;h3&gt;Access Rights&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Are the environemnts accessible with a username and password?&lt;/li&gt;
&lt;li&gt;Is a public encryption key in the authorized_keys file needed to login?
Who already has access to add a new key or is there a general key?&lt;/li&gt;
&lt;li&gt;Is root access to a box by SSH denied (as it should be)?&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="deployment"&gt;
&lt;h3&gt;Deployment&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Generally speaking, how is a deployment done?&lt;/li&gt;
&lt;li&gt;Are Fabric, Capistrano (railsless-deploy), or shell scripts used?&lt;/li&gt;
&lt;li&gt;Is Ansible, Salt Stack, Puppet, or Chef used?&lt;/li&gt;
&lt;li&gt;What are the purposes of various users? For example, if there is a
deployment user as well as another general purpose user, which one
should be used for debugging?&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="third-party-services"&gt;
&lt;h2&gt;Third-party services&lt;/h2&gt;
&lt;p&gt;Most Django projects combine custom apps with third party services,
such as Twilio, Stripe, New Relic, and Intercom.io, to create a complete
product. Which ones are used in the project, do they fail gracefully when
their APIs are down or inaccessible, and who has admin access rights to
the services?&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What third party services are used with this project?&lt;/li&gt;
&lt;li&gt;How are the third party services tested locally?&lt;/li&gt;
&lt;li&gt;What are the usernames and passwords for the services?&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 31 Jul 2013 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2013-07-31:django-project-checklist.html</guid></item><item><title>Developer Interview Questions</title><link>http://www.letshackdc.com/developer-interview-questions.html</link><description>&lt;p&gt;One of my clients was interviewing web developers and asked me about how
I go about performing technical interviews. I have interviewed 15
developers of all experience levels for
&lt;a class="reference external" href="http://www.excella.com/"&gt;Excella Consulting&lt;/a&gt; in the past year. My style
and questions are still developing. This morning when I read
&lt;a class="reference external" href="https://medium.com/on-startups/4c0197625f69"&gt;Facebook Lost A Great Engineer&lt;/a&gt;
I felt like it might help my learning process if I synthesized my thoughts
with a blog post.&lt;/p&gt;
&lt;p&gt;There are different interviewing philosophies so this is my opinionated
perspective.&lt;/p&gt;
&lt;div class="section" id="open-source"&gt;
&lt;h2&gt;Open Source&lt;/h2&gt;
&lt;p&gt;Before an interview I always check out if a person has open
source projects on &lt;a class="reference external" href="https://github.com/"&gt;Github&lt;/a&gt; or
&lt;a class="reference external" href="https://bitbucket.org/"&gt;Bitbucket&lt;/a&gt;. If they don't, that's a huge
black mark to me. I do know some really great engineers who do not use Git
and do not have open source work to their name. In general though I am
very leary of anyone who does not have some sort of public project or website.
I need time to peruse their code outside that one hour interview. That process
helps me understand how someone approaches problems.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="behavioral-questions"&gt;
&lt;h2&gt;Behavioral Questions&lt;/h2&gt;
&lt;p&gt;Once the interview begins I start by asking a mix of behavioral questions to
determine what roles a person has performed on a team. The behavioral
questions also help to discover what a candidate's strengths and
weaknesses may be. For example, &amp;quot;Tell me a time you were developing
software with a team.&amp;quot; They give a bit of background then I ask simple
followup questions. &amp;quot;What went right about the project?&amp;quot; &amp;quot;What could have
been improved?&amp;quot; &amp;quot;What was the most difficult technical challenge you faced
and how did you overcome it?&amp;quot;&lt;/p&gt;
&lt;p&gt;Simple questions of that nature to help the candidate get loosened up a
little bit - there's no &amp;quot;wrong&amp;quot; answers because it draws on their own
experiences. I watch out for people that pass a lot of blame around -
&amp;quot;so and so didn't do their job, I had to fix everything&amp;quot; - even if that
truly happened, it's a sign of team dysfunction.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="technical-questions"&gt;
&lt;h2&gt;Technical Questions&lt;/h2&gt;
&lt;p&gt;That's pretty standard stuff so far. Once we get past some initial
questions which allow me to determine if they can communicate,
whether they work well with a team, what their general technical
interests are, I ask some blanket, open-ended technical questions. Here
are some examples:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&amp;quot;Explain to me what happens when a user enters a URL into a browser to
go to a website.&amp;quot; - web developers should understand the HTTP
request/response cycle, a bit about browser rendering (WebKit, Mozilla,
IE, etc), what happens in what order, and something about how the
server does the processing. This is a great question because the
candidate can give an overview and then go into further detail to
show their level of competency. They can talk about domain name
resolution, TCP/IP/HTTP networking stack, etc.&lt;/li&gt;
&lt;li&gt;&amp;quot;Describe the parts of your ideal web application stack. Tell me what
goes into your thought process in picking out which pieces to use on
projects.&amp;quot; This is in line with the website I created at
&lt;a class="reference external" href="http://www.fullstackpython.com/"&gt;Full Stack Python&lt;/a&gt;. If a candidate
can tell me about MySQL, Redis, some web frameworks and WHY they make
sense in some situations and not others that's good. I try to filter
out &amp;quot;well this is what I've used in the past so that's what I'm going to
pick.&amp;quot; I want to work with developers that really think about why they
use various pieces in the stack puzzle. It also allows me to find out if
a candidate is using interesting new tools on side projects outside their
day job.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="what-i-do-not-do"&gt;
&lt;h2&gt;What I Do Not Do&lt;/h2&gt;
&lt;p&gt;I never ask &amp;quot;teaser&amp;quot; or puzzle questions like they do at Facebook.
I don't feel like puzzle questions are highly correlated enough with
filtering out if a person is going to be a &amp;quot;gets stuff done&amp;quot; type of
developer. Facebook and Google probably have better luck with those
questions since it fits their culture.&lt;/p&gt;
&lt;p&gt;To me most puzzles are a waste of time. I would rather be solving real
client and customer business problems by using technology. This is my
philosophy - not judgment on the cultures where puzzle interviews
are prevalent. If that works for them that's great. I just would not
fit in well in that culture. It's likely that the people I want on my
development teams would feel the same way so that's the path I take.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Tue, 26 Feb 2013 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2013-02-26:developer-interview-questions.html</guid></item><item><title>Coding Across America</title><link>http://www.letshackdc.com/coding-across-america.html</link><description>&lt;p&gt;In two weeks I get on the road to begin my primary 2013 project:
&lt;a class="reference external" href="http://www.codingacrossamerica.com/"&gt;Coding Across America&lt;/a&gt;. This is
a large undertaking. I travel for five months from March until August to
thirty cities across the United States.&lt;/p&gt;
&lt;p&gt;I am going to be developing software for my existing clients for at least
the first couple of months of my trip. Plans are still fluid but it looks
like I'll be developing for about 25 hours a week. That work plus my side
projects should keep my Python skills from going soft.&lt;/p&gt;
&lt;p&gt;My blogging here on this site will likely languish (as it has since early in
January) because I will be writing so frequently for Coding Across America.
I will continue to update this blog with occasional technical posts and
&lt;a class="reference external" href="../pages/presentations.html"&gt;my presentations&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I currently have two future tech talks scheduled. I will be speaking
to the George Washington University Computer Science department about
&amp;quot;real world&amp;quot; Python development. At the end of March I still plan to
speak at Memphis Python. I need to circle back with them about which of
the two topics I suggested are more useful to their audience. Otherwise
I hope to keep the speaking engagements to a minimum while I am on the
road. Listening, asking questions, and synthesizing information through
writing are my priorities.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Fri, 22 Feb 2013 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2013-02-22:coding-across-america.html</guid></item><item><title>Getting to Plan B</title><link>http://www.letshackdc.com/getting-to-plan-b.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://www.amazon.com/gp/product/B004OC07HQ/ref=as_li_ss_tl?ie=UTF8&amp;amp;tag=minimneeds-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B004OC07HQ"&gt;Getting to Plan B&lt;/a&gt;
by John Mullins and Randy Komisar is a book about transitioning from an
initial idea, your &amp;quot;Plan A&amp;quot;, to a subsequent idea, &amp;quot;Plan B through Z&amp;quot;,
with a better product/market fit.&lt;/p&gt;
&lt;p&gt;The authors introduce several key terms that are used throughout the book,
including &lt;em&gt;analogs&lt;/em&gt;, &lt;em&gt;antilogs&lt;/em&gt;, &lt;em&gt;leaps of faith&lt;/em&gt;. The use of
&lt;em&gt;dashboards&lt;/em&gt; is also a key concept and many examples in each chapter
are used to demonstrate their value.&lt;/p&gt;
&lt;div class="section" id="analogs-and-antilogs"&gt;
&lt;h2&gt;Analogs and Antilogs&lt;/h2&gt;
&lt;p&gt;Analogs are examples of companies, in the same industry you seek to do
business or a different industry, that have key similarities between how
they do business and your prospective business model. Antilogs are the
opposite - what you do not want to replicate from other organizations. The
mixture of analogs and antilogs helps to define your business model.&lt;/p&gt;
&lt;p&gt;Analogs and antilogs are intended to produce a basic level of evidence
that the way you plan to execute your business has already been proven by
other currently operating businesses.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="leaps-of-faith-and-dashboards"&gt;
&lt;h2&gt;Leaps of Faith and Dashboards&lt;/h2&gt;
&lt;p&gt;Aspects of a business that are not &amp;quot;proven&amp;quot; by analogs and antilogs are
leaps of faith. Leaps of faith are hypotheses that must be proven if the
business is to work properly. Dashboards are used to constantly monitor
the leaps of faith. Leaps of faith change from high-level to granular
through multiple iterations of dashboarding and modifying the business
based on the results achieved (or not achieved).&lt;/p&gt;
&lt;p&gt;One of the major concepts hammered home by the book is to test and dashboard
the most fundamental hypotheses about your business model first. If you and
your co-founders are wrong about a key hypothesis in your business model
then smaller assumptions will not matter. Test the biggest questions first,
prove them out, then evolve your dashboard to cover the more granular
assumptions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="business-model"&gt;
&lt;h2&gt;Business Model&lt;/h2&gt;
&lt;p&gt;Six chapters are devoted to understanding your business model in pieces
and then how they fit together. Figuring out if there is a way to run
your business differently than industry incumbents can lead to a sustainable
competitive advantage because it is usually difficult for existing
businesses to change parts of their established business model. The five
models that Getting to Plan B covers are:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Revenue&lt;/li&gt;
&lt;li&gt;Gross margin&lt;/li&gt;
&lt;li&gt;Operating&lt;/li&gt;
&lt;li&gt;Working capital&lt;/li&gt;
&lt;li&gt;Investment&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="takeaway"&gt;
&lt;h2&gt;Takeaway&lt;/h2&gt;
&lt;p&gt;The book provides a solid bridge between entrepreneurship and &amp;quot;traditional&amp;quot;
business concepts that would be taught in an MBA program. The examples were
interesting and drove home each of the concepts. It would have been a good
idea to include examples of business model failures. For example, where
did changing the gross margin model in an established industry turn out to
be a really bad idea and why?&lt;/p&gt;
&lt;p&gt;Overall Getting to Plan B is a good supplement to books like the
&lt;a class="reference external" href="../lean-startup-notes.html"&gt;Lean Startup&lt;/a&gt; and
&lt;a class="reference external" href="../startup-owners-manual-strategy-guide.html"&gt;The Startup Owner's Manual Strategy Guide&lt;/a&gt;. This book provides a different perspective that is not
seen in those two books or similar Lean Startup resources.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Sun, 06 Jan 2013 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2013-01-06:getting-to-plan-b.html</guid></item><item><title>My 2012 Software Development Year in Review</title><link>http://www.letshackdc.com/2012-development-year-in-review.html</link><description>&lt;p&gt;Ever since I was a little kid I knew that I wanted to develop software.
From what I hear that clarity of purpose is rare. It wasn't until college
that I really felt I &amp;quot;got serious&amp;quot; about constantly improving on what I
know. That learning has accelerated in the past few years since I finished
my second Master's. 2012 has been a very good year for expanding my
capabilities in software development.&lt;/p&gt;
&lt;p&gt;However, I sometimes forget about the improvements I make and why I'm
making them. I take some of what I've done and learned for granted.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Along the journey we commonly forget its goal.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Friedrich Nietzsche&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This post is a summary of what I've accomplished and learned during 2012.
Hopefully it helps me remember where I've been and where I may go next.&lt;/p&gt;
&lt;div class="section" id="languages"&gt;
&lt;h2&gt;Languages&lt;/h2&gt;
&lt;p&gt;I spent most of the year programming in Python and JavaScript, with a touch
of Objective-C, Java, and Clojure. An approximate breakdown would be something
like 90% Python &amp;amp; JavaScript (hard to separate them since I work with both
on the same projects), 5% Objective-C, 5% Java &amp;amp; Clojure. If anything, my
time with Python and JavaScript might be higher.&lt;/p&gt;
&lt;p&gt;I also learned LESS and got much better with CSS3.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="libraries-open-source"&gt;
&lt;h2&gt;Libraries &amp;amp; Open Source&lt;/h2&gt;
&lt;p&gt;I did some work with the &lt;a class="reference external" href="https://github.com/makaimc/python-library"&gt;Urban Airship Python API binding library&lt;/a&gt;
for a mobile app proof of concept to a client that unfortunately didn't pan
out.&lt;/p&gt;
&lt;p&gt;I issued a pretty simple but useful
&lt;a class="reference external" href="https://github.com/bartaz/impress.js/pull/15"&gt;pull request&lt;/a&gt;
on &lt;a class="reference external" href="https://github.com/bartaz/impress.js"&gt;impress.js&lt;/a&gt; after I saw it on
Hacker News but I found out it wouldn't work with my Logitech presentation
pointer. All my
&lt;a class="reference external" href="../pages/presentations.html"&gt;2012 presentations&lt;/a&gt;
were created with impress.js. I never really felt like I had enough time
to grasp the full power of the framework - but it's a really well written
open source project. I'm working with
&lt;a class="reference external" href="https://github.com/imakewebthings/deck.js"&gt;deck.js&lt;/a&gt; for at least my
first several 2013 presentations but I may go back to impress.js at some
point.&lt;/p&gt;
&lt;p&gt;I
&lt;a class="reference external" href="https://github.com/makaimc/Visualization-Portfolio"&gt;open sourced on Github&lt;/a&gt;
my &lt;a class="reference external" href="http://visualizationportfolio.com/"&gt;Visualization Portfolio&lt;/a&gt; side
project. I also open sourced
&lt;a class="reference external" href="https://github.com/makaimc/mattmakai.github.com"&gt;this blog&lt;/a&gt; and my
&lt;a class="reference external" href="https://github.com/makaimc/codingacrossamerica.github.com"&gt;Coding Across America blog&lt;/a&gt;.
I need to figure out the licensing situations on those things though.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="side-projects"&gt;
&lt;h2&gt;Side Projects&lt;/h2&gt;
&lt;p&gt;I launched (and relaunched) several side projects.&lt;/p&gt;
&lt;p&gt;First up was &lt;a class="reference external" href="https://www.proofdriven.com/"&gt;ProofDriven&lt;/a&gt;, an attempt to
create a full-stack Python web app that produces estimates of savings from
software development upgrades (for example, going from no source control to
using Git) so developers could give a financial report to their managers.
ProofDriven produces PDF reports that can be printed out. Each report can
be customized with various parameters, such as the total cost of the software
development project, the team size, and other assumptions. The models and
report outputs are based on input assumptions as well as other
technology-inherent factors based on which report is chosen. I integrated
Stripe and PayPal for payments on reports other than the free default one.
I never marketed the idea but I may reboot it at some point and see if I
can apply the Customer Development approach to find out if there is any
potential market there.&lt;/p&gt;
&lt;p&gt;I launched (and relaunched) this blog a couple of times on different
platforms. More on that in the next section.&lt;/p&gt;
&lt;p&gt;I created
&lt;a class="reference external" href="http://visualizationportfolio.com/"&gt;Visualization Portfolio and deployed it on Heroku&lt;/a&gt;. I'll begin adding more than the base three visualizations with
d3.js soon once I get caught up with the 3.0 release.&lt;/p&gt;
&lt;p&gt;I also just created but haven't finished (more on this in a few days)
&lt;a class="reference external" href="http://www.fullstackpython.com/"&gt;Full Stack Python&lt;/a&gt;. It will be a site
dedicated to explaining everything you need to know to launch a Python-based
web application from server to browser. It should also be useful to people
who know other stacks (RoR, JVM, PHP) and what to compare them to the
Python stack. It'll probably take me into 2013 before I finish that site
up and officially launch it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="blogging"&gt;
&lt;h2&gt;Blogging&lt;/h2&gt;
&lt;p&gt;I moved from my &lt;a class="reference external" href="http://www.mmakai.com/"&gt;original Tumblr blog&lt;/a&gt; to a
statically generated &lt;a class="reference external" href="http://docs.getpelican.com/en/3.1.1/"&gt;Pelican&lt;/a&gt;.
At first I hosted it on Amazon S3 but then I moved it over to Github Pages.
Github Pages is absolutely awesome and I've been really happy with it
ever since I made the switch.&lt;/p&gt;
&lt;p&gt;My Coding Across America blog is also on Github Pages. Coding Across America
should begin to get interesting in late January when I start talking to
startups in Washington, DC. Then on March 9th I'll hit the road for a
5 month tour of the US. Any startups out there in any of the 30 cities I'll
be in please contact me on Twitter &amp;#64;makaimc or by email at
&lt;a class="reference external" href="mailto:matthew.makai&amp;#64;gmail.com"&gt;matthew.makai&amp;#64;gmail.com&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="presentations-and-technical-talks"&gt;
&lt;h2&gt;Presentations and Technical Talks&lt;/h2&gt;
&lt;p&gt;I gave a bunch of talks in 2012. Among my favorites were my April 2012
DC Python talk about using
&lt;a class="reference external" href="../static/presentations/python-wrapper-urban-airship-dc-python.html"&gt;Urban Airship to send push notifications&lt;/a&gt;,
my high-level &lt;a class="reference external" href="../static/presentations/what-is-python-for-everyone.html#/step-1"&gt;Python Indoctrination class&lt;/a&gt;, and my discussion of
&lt;a class="reference external" href="../static/presentations/agile-software-development-in-federal-government.html#/step-1"&gt;Agile Software Development in the Federal Government&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'm excited about my slate of talks for 2013, especially that many of them
will be in cities I've never been to before: Memphis, San Francisco, etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="learning-log"&gt;
&lt;h2&gt;Learning Log&lt;/h2&gt;
&lt;p&gt;I tried a little experiment in mid-September to write a daily
&lt;a class="reference external" href="/pages/learning-log.html"&gt;learning log&lt;/a&gt;. Basically I force myself to
go look at the documentation of a programming language or library I'm
using and learn something new about it - however esoteric or at that
moment seemingly useless.&lt;/p&gt;
&lt;p&gt;For example, I'm been reading the d3.js API documentation to learn more
about the shortcut functions that make it easier to manipulate DOM-bound
data. Many of the functions aren't &lt;em&gt;necessary&lt;/em&gt; but are really useful for
cutting down on boilerplate code.&lt;/p&gt;
&lt;p&gt;I really like the learning log and I'm going to continue doing it in 2013.
The only major issue I've had so far is sometimes I get caught up in other
things and I have to &amp;quot;catch up&amp;quot; - so I try to learn like 2 weeks worth at
a time. That's less useful than learning one, two, or three new topics a day.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-s-next"&gt;
&lt;h2&gt;What's Next&lt;/h2&gt;
&lt;p&gt;I've already written about what skills I'm currently working on developing
to be a better
&lt;a class="reference external" href="../journey-to-true-full-stack-developer.html"&gt;full-stack software developer&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;The majority of 2013 will be defined by my
&lt;a class="reference external" href="http://www.codingacrossamerica.com/"&gt;Coding Across America&lt;/a&gt; trip.&lt;/p&gt;
&lt;p&gt;I'll write up a separate post sometime in the near future to cover 2013.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 26 Dec 2012 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2012-12-26:2012-development-year-in-review.html</guid></item><item><title>The Startup Owner's Manual Strategy Guide</title><link>http://www.letshackdc.com/startup-owners-manual-strategy-guide.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://www.amazon.com/gp/product/B009UMTMKS/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B009UMTMKS&amp;amp;linkCode=as2&amp;amp;tag=minimneeds-20"&gt;The Startup Owner's Manual Strategy Guide&lt;/a&gt;
by Steve Blank and Bob Dorf describes the Customer Development methodology
that can be used by startups to search for a business model. The
Customer Development model was developed because existing tools and
strategies for established companies are designed for measuring
execution of an &lt;em&gt;existing&lt;/em&gt; business model but are wasteful when
attempting to measure the search process for an unknown business model.&lt;/p&gt;
&lt;div class="section" id="customer-development-versus-product-development"&gt;
&lt;h2&gt;Customer Development Versus Product Development&lt;/h2&gt;
&lt;p&gt;Traditional product development in an established company follows a
predictable waterfall process because the customers are already known.
However, a startup is defined as &amp;quot;a temporary organization in search of a
scalable, repeatable, profitable business model&amp;quot; and therefore does not
yet know who its customers are.&lt;/p&gt;
&lt;p&gt;Therefore startups must search for their business model and customers
through the Customer Development process. Traditional product development
models are not suited to finding and obtaining customer feedback because
&lt;em&gt;there is no existing product on which customers can base their feedback&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Therefore at first a quick low-fidelity minimum viable product must be
created to obtain initial customer feedback. Customer feedback is used
by the founders to validate hypotheses in their business model. Later,
a high-fidelity minimum viable product is used for customer validation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="nine-mistakes-about-new-product-introductions"&gt;
&lt;h2&gt;Nine Mistakes About New Product Introductions&lt;/h2&gt;
&lt;p&gt;The authors outline nine common flawed assumptions about product introduction
when both the customer and business model are unknown.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&amp;quot;I Know What the Customer Wants&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;I Know What Features to Build&amp;quot;&lt;/li&gt;
&lt;li&gt;Focus on Launch Date&lt;/li&gt;
&lt;li&gt;Emphasis on Execution Instead of Learning and Iteration&lt;/li&gt;
&lt;li&gt;Presuming No Trial and No Errors&lt;/li&gt;
&lt;li&gt;Traditional Job Titles&lt;/li&gt;
&lt;li&gt;Sales and Marketing Execute to a Plan&lt;/li&gt;
&lt;li&gt;Premature Scaling on Presumption of Success&lt;/li&gt;
&lt;li&gt;Management by Crisis&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Examples of each and analysis of where these go wrong in a startup are
given. The gist is, you don't know your customers until you get out of the
building (the authors use this term frequently) and start showing them
something tangible.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="customer-development"&gt;
&lt;h2&gt;Customer Development&lt;/h2&gt;
&lt;p&gt;Customer development is the process used by a startup to &lt;em&gt;search&lt;/em&gt; for a
repeatable business model. An important quote from the book:&lt;/p&gt;
&lt;blockquote&gt;
Search versus execution is what differentiates a new venture from an
existing business unit.&lt;/blockquote&gt;
&lt;p&gt;Agile development combines with customer development in a software-based
business to organize and implement the business model search process.&lt;/p&gt;
&lt;p&gt;The first step in customer development is &lt;em&gt;customer discovery&lt;/em&gt;. Customer
discovery is the process for transforming founders' vision into
a series of the most important testable business model hypotheses.&lt;/p&gt;
&lt;p&gt;The second step in customer development is &lt;em&gt;customer validation&lt;/em&gt;. Customer
validation tests whether the business model is repeatable and scalable.&lt;/p&gt;
&lt;p&gt;A primary feature of the customer development process is that there are
&lt;strong&gt;no&lt;/strong&gt; functional departments until the business model is proven and moves
into execution mode. Everything done during customer development is done
by a cross-functional team working together to search for the business model.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="customer-creation-and-company-building"&gt;
&lt;h2&gt;Customer Creation and Company-Building&lt;/h2&gt;
&lt;p&gt;Once customer discovery and customer validation are proven, the company
moves into execution mode (&lt;em&gt;customer creation&lt;/em&gt;) then &lt;em&gt;company-building&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Customer discovery and customer validation are explained with great
detail by the authors. I will elaborate further in a later post that
crosses lessons learned from both
&lt;a class="reference external" href="../lean-startup-notes.html"&gt;The Lean Startup&lt;/a&gt; and The Startup Owner's
Manual Strategy Guide.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Fri, 14 Dec 2012 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2012-12-14:startup-owners-manual-strategy-guide.html</guid></item><item><title>The Lean Startup by Eric Ries</title><link>http://www.letshackdc.com/lean-startup-notes.html</link><description>&lt;p&gt;I recently finished reading &lt;a class="reference external" href="http://www.amazon.com/gp/product/0307887898/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=0307887898&amp;amp;linkCode=as2&amp;amp;tag=minimneeds-20"&gt;The Lean Startup&lt;/a&gt; by Eric Ries. This blog post contains
some brief notes on the book. I'll have more to say at a later time.&lt;/p&gt;
&lt;div class="section" id="primary-concepts"&gt;
&lt;h2&gt;Primary concepts&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Neither the traditional management approach nor the &amp;quot;just do it&amp;quot; without
a plan schools of thought are effective ways of maximizing the chances for
success in creating a new venture&lt;/li&gt;
&lt;li&gt;Small batch sizes reduce waste by minimizing effort spent creating
unwanted features. Small batches are also crucial to obtaining
constant feedback by customers&lt;/li&gt;
&lt;li&gt;Learning should be the initial measure of progress for highly
uncertain ventures such as new start up companies&lt;/li&gt;
&lt;li&gt;Minimum Viable Products (MVPs) drive the Build-Measure-Learn feedback
loop through constant iterations based partially on customer feedback
and driven by the founder's vision&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Other thoughts I picked up along the way are below.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="validated-learning"&gt;
&lt;h2&gt;Validated Learning&lt;/h2&gt;
&lt;p&gt;Validated learning is &amp;quot;the process of demonstrating empirically that a
team has discovered valuable truths about a startup's present and
future business prospects.&amp;quot; Part of the motivation behind measuring progress
with validated learning is to get away from the idea that following a
predefined plan will work. Predefined plans do not work because they
do not take embed customers' feedback as a critical driver of the development
process for a new product or service.&lt;/p&gt;
&lt;p&gt;The Eric Ries' proposed model is based on explicitly declaring hypotheses
that underlie a potential business model and then determining what
measurements prove or disprove each hypothesis. Eric discusses how this
process called &lt;em&gt;validated learning&lt;/em&gt; should work to avoid subjective arguments
that are superficially supported by &lt;em&gt;vanity metrics&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cross-functional-teams-and-mvps"&gt;
&lt;h2&gt;Cross-functional teams and MVPs&lt;/h2&gt;
&lt;p&gt;Cross-functional teams are necessary (as opposed to organization by
traditional functional departments) for MVPs because feedback cycle times'
speed is dependent upon the team working together in multiple roles.
Communication overhead and bureaucracy are minimized in cross-functional
teams that work well together. Some people are not suited for this type of
work, for example someone that just wants to work on a single aspect of
work (such as programming) 100% of the time.&lt;/p&gt;
&lt;p&gt;There's more to this but these are just some of my initial thoughts as I
dive deeper into the Lean Startup and Customer Development philosophies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="startup-definition"&gt;
&lt;h2&gt;Startup Definition&lt;/h2&gt;
&lt;p&gt;Eric defines a startup as &amp;quot;a human institution designed to create a new
product or service under conditions of extreme uncertainty.&amp;quot; I like this
definition although &amp;quot;extreme&amp;quot; sounds vague to me, but at the current time
I'm not sure exactly how I would improve upon the definition.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sxsw-2012-video"&gt;
&lt;h2&gt;SXSW 2012 Video&lt;/h2&gt;
&lt;p&gt;In &lt;a class="reference external" href="http://www.udemy.com/lean-startup-sxsw-2012-videos-and-presentations/"&gt;this video of Eric Ries at SXSW&lt;/a&gt; he discusses that Lean Startup is a process
for helping execute a founders' vision - it does not tell you what to build
but instead helps you get feedback so your vision creates a product that
provides value to customers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="lean-startup-s-relationship-to-customer-development"&gt;
&lt;h2&gt;Lean Startup's Relationship to Customer Development&lt;/h2&gt;
&lt;p&gt;The Lean Startup and Customer Development (as taught by Steve Blank)
are intertwined. Steve Blank's condition for investing in IMVU when it
was founded by Eric Ries and Will Harvey was that both founders had to
audit Steve's Customer Development course. Eric Ries explicitly mentioned
using the Customer Development methodology while running IMVU. Steve
Blank writes in &lt;a class="reference external" href="http://www.amazon.com/gp/product/0984999302/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=0984999302&amp;amp;linkCode=as2&amp;amp;tag=minimneeds-20"&gt;The Startup Owner's Manual&lt;/a&gt;
that Lean Startup is Customer Development combined with the Agile
software development methodology.&lt;/p&gt;
&lt;p&gt;Lean Startup as a combination of Customer Development plus Agile methodology
makes sense because Customer Develoment is intended as a general approach
to searching for a business model. Lean Startup also espouses certain
practices that make the most sense in the context of the software development
world including continuous deployment and delivery.&lt;/p&gt;
&lt;p&gt;Steve Blank actually writes about the relationship in
&lt;a class="reference external" href="http://steveblank.com/2010/01/25/whats-a-startup-first-principles/"&gt;What's a Startup? First Principles&lt;/a&gt;. Customer Development is how a founder
iterates and tests each element of their business model. Agile development
is how startups iterate the product as they learn from their customers and
combine that learning with the founders' vision. Lean Startup is the
intersection of Customer Development and Agile development.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Sun, 09 Dec 2012 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2012-12-09:lean-startup-notes.html</guid></item><item><title>How I Feel While Reading Open Source Projects</title><link>http://www.letshackdc.com/how-i-feel-reading-python-projects.html</link><description>&lt;p&gt;My New Year's resolution for 2013 is to read code from
&lt;a class="reference external" href="http://flask.pocoo.org/"&gt;awesome&lt;/a&gt;
&lt;a class="reference external" href="http://docs.python-requests.org/en/latest/"&gt;open&lt;/a&gt;
&lt;a class="reference external" href="http://gunicorn.org/"&gt;source&lt;/a&gt;
projects each day. I don't like waiting for New Year's Day to start a
good idea so I've already begun reading Flask's source code.&lt;/p&gt;
&lt;p&gt;It's enlightening to read great code although the &amp;quot;downside&amp;quot; (due to my
lack of free time) is that it is
motivating me to figure out something I can write to give back to the
community. On the lighter side,
&lt;a class="reference external" href="http://i.qkme.me/3s3myj.jpg"&gt;this is how I feel&lt;/a&gt; while I am reading
all the great open source Python projects out there.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Sat, 08 Dec 2012 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2012-12-08:how-i-feel-reading-python-projects.html</guid></item><item><title>Learning Python</title><link>http://www.letshackdc.com/learning-python-for-non-developers.html</link><description>&lt;p&gt;I am often asked by friends and colleagues that are not currently
developers how they should go about learning Python. It's not an easy
question - the answer is often highly dependent upon the individual's
immediate technical aptitude. I do however believe anyone can learn how to
program just as anyone can learn about history or business. The interest in
learning to program usually stems from wanting to achieve in one or more
of the following goals:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="../steps-non-developers-start-internet-business.html"&gt;Prototype an Internet-based business idea&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Build a new skill set to become a developer&lt;/li&gt;
&lt;li&gt;Work better with developers through a greater understanding of their work&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This post summarizes the many discussions I've previously so the information
can be consumed by a wider audience. I love teaching programming to
non-developers so don't hesistant to &lt;a class="reference external" href="../pages/about.html"&gt;contact me&lt;/a&gt;
with further questions.&lt;/p&gt;
&lt;div class="section" id="where-to-start"&gt;
&lt;h2&gt;Where to Start&lt;/h2&gt;
&lt;p&gt;There's an overwhelming number of resources out there - it's incredibly
difficult to know where to begin when you have not done development
work before.&lt;/p&gt;
&lt;p&gt;My recommendation is to get to a point where you can do &amp;quot;cool stuff&amp;quot; -
projects that interest you and will make you want to learn more. The
faster you go from forcing yourself to learn to having goals for implementing
new interesting ideas, the higher your chances of achieving your goals.&lt;/p&gt;
&lt;p&gt;First, get your feet wet. Spend a few hours going through
&lt;a class="reference external" href="http://www.codecademy.com/tracks/python"&gt;Code Academy's Python tutorials&lt;/a&gt;.
The great part about using a service like Code Academy is that it's free,
structured, has a low barrier to entry, and will teach you some basic
concepts that are important in Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="local-installation"&gt;
&lt;h2&gt;Local Installation&lt;/h2&gt;
&lt;p&gt;When I say &amp;quot;local&amp;quot; I mean you want to have Python installed on your
computer instead of interacting with it in the browser. This will allow
you to start creating website projects.&lt;/p&gt;
&lt;p&gt;Get Python on your system. Depending on your operating system, you may
already have Python installed. Mac OS X and Linux are good to go. If you're
using Windows, head over to
&lt;a class="reference external" href="http://www.python.org/download/"&gt;Python.org's download page&lt;/a&gt; and get
Python 2.7. Ignore Python 3+ for now - you can learn it later.&lt;/p&gt;
&lt;p&gt;Now go to the command line - on Windows go to Run -&amp;gt; &amp;quot;cmd&amp;quot; and then change
directory to C:\Python27\ then type 'python'. You'll get the interpreter
you're used to seeing on Code Academy.&lt;/p&gt;
&lt;p&gt;On Mac OS X or Linux go to the Terminal and type 'python'. You'll
get the interpreter. Again this is great for learning more and running
Python on your own system.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="creating-a-project"&gt;
&lt;h2&gt;Creating a Project&lt;/h2&gt;
&lt;p&gt;Now that you have Python installed locally you'll want to create a
project with .py files so you don't have to type everything into the
interpreter.&lt;/p&gt;
&lt;p&gt;At this point you'll want to create a subdirectory under your home
directory or like C:\devel\ on Windows. Just create some place that you'll
remember and can store your files under. Then create subdirectories, such as
/Users/johnsmith/devel/blog/ or C:\devel\blog\ for a blog project. Inside
that folder you can store your .py (Python) files.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="flask-or-django"&gt;
&lt;h2&gt;Flask or Django&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://flask.pocoo.org/"&gt;Flask&lt;/a&gt; and
&lt;a class="reference external" href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt; are
web application frameworks. A framework
is just code that other developers have written to perform common tasks
associated with a given domain. So a &amp;quot;web application&amp;quot; framework is designed
to handle all of the common tasks a web application (also known as a website)
needs to do, such as:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Authenticating users so they can log in and log out of your site&lt;/li&gt;
&lt;li&gt;Storing passwords in a secure way&lt;/li&gt;
&lt;li&gt;Accessing the database and then passing that data to the browser&lt;/li&gt;
&lt;li&gt;Creating URLs so you can access information at different parts of your
website, such as &lt;a class="reference external" href="http://www.mywebsite.com/users/"&gt;http://www.mywebsite.com/users/&lt;/a&gt; to handle /users/ url&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There's a myriad of other things a web framework handles so that you don't
have to write that code yourself. Different frameworks such as Flask and
Django have different approaches to solving these problems and have
varying degrees of difficulty in their associated learning curves.&lt;/p&gt;
&lt;p&gt;Once you learn how to use Flask or Django with Python you'll be able to
build simple websites. Then you can add complexity and implement the ideas
that have been floating around in your head. Eventually you'll reach an
&amp;quot;a-ha!&amp;quot; moment where things will click and your productivity will take off.
That's when programming goes from being a struggle to actually being fun.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-do-i-learn-more-advanced-topics"&gt;
&lt;h2&gt;How Do I Learn More Advanced Topics?&lt;/h2&gt;
&lt;p&gt;By far one of the best resources is &lt;a class="reference external" href="http://github.com/"&gt;Github&lt;/a&gt;.
Github allows you to read other people's open source code to learn from it.
Reading other people's work is very important because you'll learn what
makes sense and what can be confusing. Python places a lot of emphasis on
language readability and maintainability. You want to embrace that
philosophy in the code you write.&lt;/p&gt;
&lt;p&gt;An interesting resource I created is a
&lt;a class="reference external" href="http://www.visualizationportfolio.com/visualization/python-topics-tree/"&gt;Python topics tree&lt;/a&gt;. It gives you a dependency tree for ordering what topics you'll
want to learn and in what order for the base Python language. If you
find it useful I can create more for topics such as Flask, Django,
and other Python libraries.&lt;/p&gt;
&lt;p&gt;Next up is a list of resources for keeping you learning. These resources
range from general advice on generally learning programming to specific
tutorials on web application frameworks such as Django and Flask.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pythontutor.com/"&gt;Python Tutor&lt;/a&gt;. Learn by visual code
execution.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tech.yipit.com/2012/08/21/how-i-taught-myself-to-code-in-8-weeks/"&gt;How I Taught Myself to Code in 8 Weeks&lt;/a&gt;. Weekends, really.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python-guide.org/en/latest/"&gt;Hitchhiker's Guide to Python&lt;/a&gt;.
Awesome wide-ranging resource to give you direction on how to learn and
use Python the right way.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ontwik.com/python/introduction-to-python/"&gt;Introduction to Python video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://orangethirty.blogspot.com/2012/08/teaching-my-10-yeard-old-niece-how-to.html"&gt;Teaching a 10 Year Old to Code in Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pythonbooks.revolunet.com/"&gt;Best Free Python Books on the Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pythonweekly.com/"&gt;Python Weekly&lt;/a&gt;. Newsletter with weekly
Python and related project updates.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/nryoung/algorithms"&gt;Common computer science algorithms in Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.amazon.com/gp/product/144933072X/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=144933072X&amp;amp;linkCode=as2&amp;amp;tag=minimneeds-20"&gt;Think Python&lt;/a&gt;. Complete beginner's introduction to computer science and Python.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://elweb.co/programacion/want-to-learn-django-start-here/"&gt;Want to Learn Django? Start Here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.mattmakai.com/favorite-django-article-sources.html"&gt;My Favorite Django Article Sources&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tech.yipit.com/2012/02/28/learn-django/"&gt;15 Key Resources to Learn Django&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 14 Nov 2012 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2012-11-14:learning-python-for-non-developers.html</guid></item><item><title>Wise Words From Elon Musk</title><link>http://www.letshackdc.com/wise-words-from-elon-musk.html</link><description>&lt;p&gt;Wise words from Elon Musk. While process can sometimes allow for a
repeatable way to perform an action, it is also often a substitute for
thinking creatively. That type of situation leads to an innovation vacuum
where workers do a task in the same way &amp;quot;it's always been done&amp;quot; without
determining whether the task actually adds value to the organization. Musk's
original quote:&lt;/p&gt;
&lt;blockquote&gt;
The problem is that at a lot of big companies, process becomes a
substitute for thinking. You’re encouraged to behave like a little
gear in a complex machine. Frankly, it allows you to keep people who
aren’t that smart, who aren’t that creative.&lt;/blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.wired.com/wiredscience/2012/10/ff-elon-musk-qa/all/"&gt;Awesome interview with Elon Musk on Wired.com&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Fri, 02 Nov 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-11-02:wise-words-from-elon-musk.html</guid></item><item><title>Learning Vim - A Colleague's Question</title><link>http://www.letshackdc.com/learning-vim-colleague-question.html</link><description>&lt;p&gt;I received the following email from my colleague this morning:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hey buddy, finally taking the plunge to learn VIM because it will make
me a lot more productive when working with Puppet manifests.  Any
helpful tips you've come across?  I already set up my client with
pathogen to allow me to easily use new plugins and I pulled in things
like tabular, syntastic and puppet syntax highlighting.  Love to hear
anything else you'd recommend.&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I love Vim and I've been using it for about four years as my only editor
when coding in Python, typing up blog posts, or learning new
programming languages. I even tried switching to Sublime Text 2 with Vim
mode but I ended up switching back to straight Vim. So here are my
recommendations for getting started.&lt;/p&gt;
&lt;p&gt;It takes awhile to learn VIM but it's amazing once you do. I took the
&lt;a class="reference external" href="http://www.tuxfiles.org/linuxhelp/vimcheat.html"&gt;Vim cheatsheet&lt;/a&gt; and
tried to learn a command each day. Just look for something that you either
didn't know you could do, or try to do on a regular basis but aren't quite
sure how. For example, I find/replace things all the times with regular
expressions. Here's how you can easy do that globally in a file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;:%s/replace-this-text/replace-with-this-text/g
&lt;/pre&gt;&lt;/div&gt;
&lt;!--  --&gt;
&lt;p&gt;The major logical leap is understanding that Vim is basically a language where you have a command and it can be prefixed by a number to execute it multiple times. For example,&lt;/p&gt;
&lt;p&gt;dd &amp;lt;-- cut the line and move it into the &amp;quot;clipboard&amp;quot;&lt;/p&gt;
&lt;p&gt;5dd &amp;lt;-- cut 5 lines and move them into the &amp;quot;clipboard&amp;quot;&lt;/p&gt;
&lt;p&gt;Definitely start out by checking out some interesting web tutorials. Here are
some resources that I have found helpful over the years:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://haridas.in/vim-as-your-ide.html"&gt;Vim as your IDE&lt;/a&gt;. Awesome
article.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.moolenaar.net/habits.html"&gt;7 Habits of Effective Text Editing&lt;/a&gt;
great article on how to effectively use Vim.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/scrooloose/syntastic"&gt;Syntastic&lt;/a&gt;. Plugins for
Vim. Important for things like syntax checking and code completion.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.sanctum.geek.nz/vim-koans/"&gt;Vim Koans&lt;/a&gt;. A bit
tongue-and-cheek but you can learn a lot from them as well.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://vimuniversity.com/"&gt;Vim University&lt;/a&gt;. Some good introductory
articles and screencasts.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A few random tips. I disabled the use of the arrow keys so I could get used
to the &amp;quot;hlkj&amp;quot; movement. Do that with the following in your .vimrc file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;quot; disable arrow keys
map &amp;lt;up&amp;gt; &amp;lt;nop&amp;gt;
map &amp;lt;down&amp;gt; &amp;lt;nop&amp;gt;
map &amp;lt;left&amp;gt; &amp;lt;nop&amp;gt;
map &amp;lt;right&amp;gt; &amp;lt;nop&amp;gt;
imap &amp;lt;up&amp;gt; &amp;lt;nop&amp;gt;
imap &amp;lt;down&amp;gt; &amp;lt;nop&amp;gt;
imap &amp;lt;left&amp;gt; &amp;lt;nop&amp;gt;
imap &amp;lt;right&amp;gt; &amp;lt;nop&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;!--  --&gt;
&lt;p&gt;Also if you prefer spaces to tabs just use &lt;em&gt;set tabexpand&lt;/em&gt; in your .vimrc.
Shift width and tab spaces usually default to 8 spaces, so I change that
to 4 spaces with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;set ts=4
set shiftwidth=4
&lt;/pre&gt;&lt;/div&gt;
&lt;!--  --&gt;
&lt;p&gt;Vim takes awhile to get the hang of but once you get over that initial
curve the editor feels like a natural extension of your thought process.
The speed at which you can accomplish most tasks skyrockets after
learning enough commands and embracing the philosophy of just using
the keyboard for editing.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Mon, 15 Oct 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-10-15:learning-vim-colleague-question.html</guid></item><item><title>The Journey to True Full-Stack Developer</title><link>http://www.letshackdc.com/journey-to-true-full-stack-developer.html</link><description>&lt;p&gt;There are several areas in which I need to improve to be a truly self-reliant
full-stack software engineer. My full-stack focus is on web development, both
traditional desktop and tablet browsers as well as constrained smartphone
mobile browsers. This post describes those areas and what I'm doing through
the next year to improve those deficiencies.&lt;/p&gt;
&lt;p&gt;The technical areas I need to improve in are:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Web design&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server monitoring&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data analysis &amp;amp; visualization&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;I also want to get better at content creation, marketing, and working with
end users to understand their needs better, but I won't cover those less
technical topics in this post.&lt;/p&gt;
&lt;div class="section" id="web-design"&gt;
&lt;h2&gt;Web Design&lt;/h2&gt;
&lt;p&gt;I'm fine with CSS, LESS, and JavaScript although there's always room to get
better in those areas. What I really need to get better in is creating
interesting graphics that aid users' understanding of the products I develop.
A great example of this is
&lt;a class="reference external" href="http://teamtreehouse.com/"&gt;Team Treehouse's current home page&lt;/a&gt; where
the site asks &amp;quot;What do you want to learn today?&amp;quot; with intuitive icons for
web design, web development, and iOS development. Creating simple icons
like those and using them where appropriate goes a long way towards converting
a ho-hum web design into both a more appealing aesthetic and easier for users.&lt;/p&gt;
&lt;p&gt;Towards this end I will (finally) purchase a copy of Adobe Illustrator CS6,
work on tutorials, and pick up tips from my web design friends. Retrofitting
&lt;a class="reference external" href="https://www.proofdriven.com/"&gt;ProofDriven&lt;/a&gt; with new icons will likely be
my first conversion project so I have a goal to work towards.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="server-monitoring"&gt;
&lt;h2&gt;Server Monitoring&lt;/h2&gt;
&lt;p&gt;Lately I have started using Heroku to deploy many of my side projects, but
I still do a lot of DevOps for clients with Linux, Apache, nginx,
mod_wsgi, Green Unicorn, MySQL, and PostgreSQL.&lt;/p&gt;
&lt;p&gt;I am ashamed to admit I have very little insight into how well the servers
I'm using are holding up under load. This situation really needs to be
corrected by using a combination of Graphite &amp;amp; statsd, Raven &amp;amp; Sentry (I
do already use these in many cases), New Relic, and some quick and dirty
custom code with Python's cProfile and psutil.&lt;/p&gt;
&lt;p&gt;Monitoring is a complicated subject and every application has a different
server resource utilization profile. Once I collect the metrics, my next
area for improvement will be important.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="data-analysis-and-visualization"&gt;
&lt;h2&gt;Data analysis and visualization&lt;/h2&gt;
&lt;p&gt;There's something about working with Python that makes data analysis
appealing. Maybe it's the easy-to-use built-in data structures or the
abundance of analysis libraries such as
&lt;a class="reference external" href="http://pandas.pydata.org/"&gt;pandas&lt;/a&gt;, &lt;a class="reference external" href="http://numpy.scipy.org/"&gt;NumPy&lt;/a&gt;,
and &lt;a class="reference external" href="http://www.scipy.org/"&gt;SciPy&lt;/a&gt;. Whatever the reason, I plan to study
O'Reilly's excellent
&lt;a class="reference external" href="http://shop.oreilly.com/product/0636920023784.do"&gt;Data Analysis with Python&lt;/a&gt;
book to learn more, particularly about Pandas.&lt;/p&gt;
&lt;p&gt;On the visualization side, d3.js is fantastic. I've already been using it to
create simple visualizations such as
&lt;a class="reference external" href="http://www.prgrmrlvlup.com/"&gt;prgrmrlvlup&lt;/a&gt; and some other internal Excella
applications for business development. I'm a huge fan of using CSS to style
the visualizations and the enter(), exit(), and data joins model. Overall
d3.js will provide the foundation for visualizing the results of  interesting
data sets processed on the server side with Python. I'll write blog posts and
add many d3.js-related entries in my
&lt;a class="reference external" href="../pages/learning-log.html"&gt;learning log&lt;/a&gt; over the next several months.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Sat, 06 Oct 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-10-06:journey-to-true-full-stack-developer.html</guid></item><item><title>Agile in the Federal Government Presentation</title><link>http://www.letshackdc.com/agile-in-federal-government-presentation.html</link><description>&lt;p&gt;Yesterday I presented at the &lt;a class="reference external" href="http://www.pmiwdc.org/2012/09/project-management-symposium"&gt;2012 PMI Project Management Symposium&lt;/a&gt; in at the Crystal City
Hyatt in Arlington, Virginia. My &lt;a class="reference external" href="/presentations/agile-software-development-in-federal-government.html"&gt;slides for the talk&lt;/a&gt; are posted and the source code
is &lt;a class="reference external" href="https://github.com/makaimc/mattmakai.github.com/blob/gh-pages/source/static-html/presentations/agile-software-development-in-federal-government.html"&gt;available on Github&lt;/a&gt;.
It's a decent example of &lt;a class="reference external" href="http://bartaz.github.com/impress.js"&gt;impress.js&lt;/a&gt;
although I still need to invest more time into the framework to put together
a really impressive talk.&lt;/p&gt;
&lt;p&gt;I'm thinking the combination of impress.js + d3.js could create a really
amazing data visualization heavy presentation (with the right theme and
content of course).&lt;/p&gt;
&lt;p&gt;Thanks to everyone who came out to my talk. I'm not a project manager so
it was somewhat intimidating talking to a large group of people who all
had at least several more years of experience than me. I hope everyone
who went got some value out of it and took away the key themes - there are
certain actions (elaborated on in the presentation) that the best
project managers do constantly that make projects much more likely to succeed.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Sat, 29 Sep 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-09-29:agile-in-federal-government-presentation.html</guid></item><item><title>Introduction to Python for Non-Developers Notes</title><link>http://www.letshackdc.com/introduction-python-non-developers-notes.html</link><description>&lt;p&gt;Matt Camilli and I gave a
&lt;a class="reference external" href="/presentations/what-is-python-for-everyone.html"&gt;talk Tuesday night&lt;/a&gt;
introducing about 30 non-developers to the Python programming language's
history, philosophy, and differences from other languages, as well as an
industry analysis of companies using Python. Matt Camilli
covered
&lt;a class="reference external" href="/presentations/python101.pptx"&gt;how he learned Python and what great resources exist&lt;/a&gt; out on the web for anyone looking to learn more about the language.&lt;/p&gt;
&lt;p&gt;The topics included the
&lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0020/"&gt;Zen of Python&lt;/a&gt;, the
&lt;a class="reference external" href="http://www.python.org/psf/"&gt;Python Software Foundation&lt;/a&gt;, language
comparison with Excella Consulting other two primarily languages, Java
and .NET, and advantages of Python.&lt;/p&gt;
&lt;p&gt;Paul Graham's &lt;a class="reference external" href="http://www.paulgraham.com/pypar.html"&gt;The Python Paradox&lt;/a&gt;
essay was covered. Paul's
&lt;a class="reference external" href="http://www.paulgraham.com/articles.html"&gt;other essays&lt;/a&gt; are also
fantastic, especially
&lt;a class="reference external" href="http://www.paulgraham.com/makersschedule.html"&gt;Maker's Schedule, Manager's Schedule&lt;/a&gt;, &lt;a class="reference external" href="http://www.paulgraham.com/javacover.html"&gt;Java's Cover&lt;/a&gt;, and
&lt;a class="reference external" href="http://www.paulgraham.com/lies.html"&gt;Lies We Tell Kids&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also covered what companies are using Python, such as &lt;a class="reference external" href="http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances-dozens-of"&gt;Instagram&lt;/a&gt; and
&lt;a class="reference external" href="http://techreport.com/discussions.x/16713"&gt;Google&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks again to everyone who came out to learn more about Python and also
to my partner in crime, Matt Camilli.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 22 Aug 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-08-22:introduction-python-non-developers-notes.html</guid></item><item><title>The First Django Website Run On Python 3</title><link>http://www.letshackdc.com/first-django-website-run-python-3.html</link><description>&lt;p&gt;The top post on &lt;a class="reference external" href="http://news.ycombinator.com/"&gt;Hacker News&lt;/a&gt; this morning
is about a &lt;a class="reference external" href="http://myks.org/django-python3/"&gt;Django (1.5 development branch) site running on Python 3&lt;/a&gt;.
Why is a Django site running on Python 3 newsworthy? Because while Django
1.5 is tested and supported against Python 2.6 and Python 2.7 (dropping
support for Python 2.5 found in Django 1.4), Python 3 compatibility is a
&lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/topics/python3/"&gt;new feature&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Python 3 breaks backwards compatibility with Python 2 to remove the cruft
from years of Python 1 &amp;amp; 2 development syntax. Python 3 is a better language.
But until the vast majority of libraries and frameworks support or move
exclusively to Python 3, Python 2 will continue to be used. Django in
particular is an important project because it is the most widely used Python
framework.&lt;/p&gt;
&lt;p&gt;Python 3 is supported by Django through the
&lt;a class="reference external" href="http://packages.python.org/six/"&gt;six compatibility layer&lt;/a&gt;. It will be
interesting to see how many bugs in advanced Django features come up
throughout the development cycle and whether Python 3 is officially supported
(the current plan) or whether there is a backtrack to unofficial support
for this release to prevent too much of a delay in
&lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/releases/1.5/"&gt;releasing version 1.5&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 15 Aug 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-08-15:first-django-website-run-python-3.html</guid></item><item><title>Steps for Non-Developers to Start an Internet Business</title><link>http://www.letshackdc.com/steps-non-developers-start-internet-business.html</link><description>&lt;p&gt;I am often asked by friends and colleagues about what first steps
a non-technical person should take when they come up with ideas and want to
do something with them. I always appreciate these requests since it
provides recognition that I have some insight into software development
in the entrepreneurship and small business space. This is my first attempt to
describe in a blog post what I tell non-developers who ask me for advice.&lt;/p&gt;
&lt;div class="section" id="outline"&gt;
&lt;h2&gt;Outline&lt;/h2&gt;
&lt;p&gt;There's an overwhelming amount of information in the areas of
entrepreneurship and software development. This post is one perspective for
an outline of what you need to know. The goal is to point you in the right
direction so you don't become demotivated while reading endless information.&lt;/p&gt;
&lt;p&gt;The five-part outline described in &lt;a class="reference external" href="http://www.amazon.com/gp/product/B004JXXKR4/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B004JXXKR4&amp;amp;linkCode=as2&amp;amp;tag=minimneeds-20"&gt;The Personal MBA&lt;/a&gt; (highly recommended read)
provides an initial framework for understanding what you need to know about
business. I'll use these five parts to describe what to learn:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Value Creation&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Marketing&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sales&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Value Delivery&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Finance&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="value-creation"&gt;
&lt;h2&gt;Value Creation&lt;/h2&gt;
&lt;p&gt;When someone has an idea, they perceive value for themselves or others in the
abstract concept. But there is no way to know whether the implementation of
that idea creates actual value. This is why prototypes, such as screen mockups
using &lt;a class="reference external" href="http://www.balsamiq.com/"&gt;Balsamiq&lt;/a&gt;, and &lt;a class="reference external" href="http://www.startuplessonslearned.com/2009/08/minimum-viable-product-guide.html"&gt;minimum&lt;/a&gt; &lt;a class="reference external" href="http://steveblank.com/2010/03/04/perfection-by-subtraction-the-minimum-feature-set/"&gt;viable&lt;/a&gt;
&lt;a class="reference external" href="http://johnnyholland.org/2012/02/making-sense-of-minimum-viable-products/"&gt;products&lt;/a&gt; are important. The sooner you go from idea to even partially
implemented product, the faster you can get feedback from your target paying
customers as to whether or not your implementation provides value to them.&lt;/p&gt;
&lt;p&gt;Three more concepts are important here. First, does your implementation
solve a real problem? Is the solution a &amp;quot;nice to have&amp;quot; or a &lt;strong&gt;must have now&lt;/strong&gt;
type of product? Don Dodge &lt;a class="reference external" href="http://dondodge.typepad.com/the_next_big_thing/2008/03/does-your-start.html"&gt;covers the &amp;quot;vitamin or painkiller&amp;quot; question&lt;/a&gt;
brilliantly in that post.&lt;/p&gt;
&lt;p&gt;Second, ideas aren't worth anything until they are (well) executed on.
Customers do not pay for an idea, they pay for a product or service that
solves their problem. That's not to say the idea isn't important, it just
means the idea is important &lt;em&gt;in combination&lt;/em&gt; with execution. Here's what
some of the best minds in technology have to say about
&lt;a class="reference external" href="http://www.derekflanzraich.com/2010/08/idea-or-execution/"&gt;idea versus execution&lt;/a&gt;
and another post that takes the hard stand that
&lt;a class="reference external" href="http://www.inc.com/rob-adams/2010/06/ideas-commodity-but-execution-intelligence-matters.html"&gt;your idea doesn't matter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Third, what is it going to take to get you to the point where you can talk
to potential customers? For non-developers, this means putting together
screen mock ups with a tool like Balsamiq or
&lt;a class="reference external" href="https://gomockingbird.com/"&gt;Mockingbird&lt;/a&gt; while &lt;em&gt;also learning how to code&lt;/em&gt;.
There are many reasons for why you should
&lt;a class="reference external" href="http://sachagreif.com/please-learn-to-code/"&gt;learn to code&lt;/a&gt;, but it
primarily boils down to:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Iterating on your working prototype faster based on customer feedback&lt;/li&gt;
&lt;li&gt;Gaining an in-depth understanding your business' operations&lt;/li&gt;
&lt;li&gt;Pitching in with development, especially in the early days, even if you plan to do the customer development while your co-founder builds the site&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you don't want to learn how to code, ask yourself if you really want to
be an entrepreneur in an Internet-based business. Entrepreneurs recognize
that sometimes you've just got to roll up your sleeves and get a job done.
(Likewise, developers must to recognize customer development, marketing,
sales, finance, etc., are &lt;strong&gt;really&lt;/strong&gt; important to a business' success.)
Learning how to code needs its own detailed blog post in the future but I
subjectively recommend &lt;a class="reference external" href="http://python.org/"&gt;Python&lt;/a&gt; and
&lt;a class="reference external" href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt; as a programming language and
web application framework starting point.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="marketing"&gt;
&lt;h2&gt;Marketing&lt;/h2&gt;
&lt;p&gt;Once you've created a desirable web application based on customer feedback,
marketing becomes a priority for gaining new paying customers. Your first
customers should be the people you worked with to create your product.
Hopefully they are early-adopter evangelists who are willing to both give
you testimonials to put on your website as well as spread the word to
like-minded potential customers.&lt;/p&gt;
&lt;p&gt;There are several resources I have found that were tremendously helpful in
better understanding marketing. First, &lt;a class="reference external" href="http://www.amazon.com/gp/product/0615373968/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=0615373968&amp;amp;linkCode=as2&amp;amp;tag=minimneeds-20"&gt;Start Small, Stay Small&lt;/a&gt; provides a
developer-centric perspective on online advertisements, search engine
optimization, and marketing. If you're already a software developer, you
should start with this book. Second, &lt;a class="reference external" href="http://www.amazon.com/gp/product/0684856360/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=0684856360&amp;amp;linkCode=as2&amp;amp;tag=minimneeds-20"&gt;Permission Marketing&lt;/a&gt; is a classic marketing
book that discusses the shift from interruption marketing (stopping people
from what they are currently doing) and shifting into a permission marketing
model where potential customers identify that they have the problem you
are solving with your product or service.&lt;/p&gt;
&lt;p&gt;There are a few likely options you will most commonly use to market your
product since your budget for marketing is going to be limited.&lt;/p&gt;
&lt;p&gt;1. &lt;strong&gt;Blog posts&lt;/strong&gt;, along with proper &lt;a class="reference external" href="ttp://www.amazon.com/gp/product/B0043D2E7W/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B0043D2E7W&amp;amp;linkCode=as2&amp;amp;tag=minimneeds-20"&gt;Search Engine Optimization&lt;/a&gt; (SEO), also known as
organic search results. These should be really high quality content blog
posts that are exactly what your target demographic would be looking for
when they have the problem your product solves.&lt;/p&gt;
&lt;p&gt;2. &lt;strong&gt;Email lists&lt;/strong&gt;. Targeted lists of people who are interested in the problem
space both in and around the area your product solves.&lt;/p&gt;
&lt;p&gt;3. &lt;strong&gt;Adwords&lt;/strong&gt;. Ads that appear next to search results in Google. For people
who are searching but do not necessarily hit your blog posts.&lt;/p&gt;
&lt;p&gt;Together these three approaches help form the basis for your initial
low-budget marketing efforts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sales"&gt;
&lt;h2&gt;Sales&lt;/h2&gt;
&lt;p&gt;Sales is different from marketing. Marketing is getting potential customers
to know about your product and getting them to your site. Sales is moving a
visitor to your site from a potential customer into a paying customer.&lt;/p&gt;
&lt;p&gt;Sales involves concepts such as &lt;a class="reference external" href="http://www.contrast.ie/blog/designing-your-sign-up-page/"&gt;designing your sales page&lt;/a&gt;, performing A/B optimization testing,
studying and &lt;a class="reference external" href="http://conversionxl.com/pricing-experiments-you-might-not-know-but-can-learn-from/"&gt;trying sales experiments&lt;/a&gt; to see if they convert more
potential customers into paying customers, and &lt;a class="reference external" href="http://www.problogger.net/archives/2010/12/20/how-to-optimize-your-sales-funnel-for-success/"&gt;tweaking your sales funnel&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The sales funnel is an important concept and it should be baked into analytics
that are used on the site, such as &lt;a class="reference external" href="https://www.google.com/analytics/"&gt;Google Analytics&lt;/a&gt;, &lt;a class="reference external" href="https://mixpanel.com/"&gt;MixPanel&lt;/a&gt;, &lt;a class="reference external" href="http://www.kissmetrics.com/"&gt;KISSmetrics&lt;/a&gt;,
and home-grown analytics solutions. More on analytics in a future post as
well.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="value-delivery"&gt;
&lt;h2&gt;Value Delivery&lt;/h2&gt;
&lt;p&gt;Once you've sold a product or service to a customer you must make sure it
is satisfying their needs and they feel they are getting what they paid for.
This is the customer development process continued. Value delivery involves
collecting, analyzing, and acting on data about how your customers use
your product or service. In addition, directly talking to a broad swath of
users to determine what other problems they have that can be solved with an
expansion of your business.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="finance"&gt;
&lt;h2&gt;Finance&lt;/h2&gt;
&lt;p&gt;Finance involves running a profitable and cash-flow positive business as
well as performing accounting. Software such as &lt;a class="reference external" href="http://www.xero.com/"&gt;Xero&lt;/a&gt;,
&lt;a class="reference external" href="http://www.freshbooks.com/"&gt;FreshBooks&lt;/a&gt;, and &lt;a class="reference external" href="http://quickbooksonline.intuit.com/"&gt;QuickBooks Online&lt;/a&gt; are a boon to Internet-based businesses and
well-worth the monthly fee once the business is launched with customers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="misc"&gt;
&lt;h2&gt;Misc&lt;/h2&gt;
&lt;p&gt;There are a couple other misc notes I wanted to mention that did not directly
fall into the above categories.&lt;/p&gt;
&lt;p&gt;Getting legal advice from an actual lawyer matters once you get off the
ground. Don't worry too much about it until you have momentum behind you.
I found this laywer's
&lt;a class="reference external" href="http://thestartuplawyer.com/startup-issues/if-i-launched-a-startup"&gt;list of what he would do when starting a start up&lt;/a&gt; to be insightful at least to
get an overview of the concepts.&lt;/p&gt;
&lt;p&gt;Also, reading sources such as &lt;a class="reference external" href="http://news.ycombinator.com/"&gt;Hacker News&lt;/a&gt;,
and &lt;a class="reference external" href="http://www.kalzumeus.com/"&gt;Patrick McKenzie's blog&lt;/a&gt;
can help to identify new subjects to learn.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;There's &lt;strong&gt;a lot&lt;/strong&gt; to learn and it can be overwhelming. In some ways having
an outline is a downside because you realize how far you have to go. But it
also helps to prevent blindspots in your knowledge map of what you need
to know.&lt;/p&gt;
&lt;p&gt;I'm sure I missed many areas. Message me on Twitter &amp;#64;makaimc to let me know
what else needs to be added to this outline for non-developers as I also
work on expanding each point into its own blog post.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Tue, 14 Aug 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-08-14:steps-non-developers-start-internet-business.html</guid></item><item><title>A Fascinating Post on Curiousity's Software</title><link>http://www.letshackdc.com/fascinating-post-curiositys-software.html</link><description>&lt;p&gt;I found this &lt;a class="reference external" href="http://jlouisramblings.blogspot.com/2012/08/getting-25-megalines-of-code-to-behave.html"&gt;blog post on Curiosity's hardware and software&lt;/a&gt; to
be a fascinating read. The Curiosity rover has 2.5 million lines of C code
running on custom radiation and extreme temperature hardened computer systems.
The author presents his view as an Erlang programmer of how the systems are
designed to be as fault-proof as possible.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Mon, 13 Aug 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-08-13:fascinating-post-curiositys-software.html</guid></item><item><title>My Favorite Django Article Sources</title><link>http://www.letshackdc.com/favorite-django-article-sources.html</link><description>&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tech.yipit.com/"&gt;yipit tech blog&lt;/a&gt;:
Yipit is a tech start up in New York specializing in daily deals. Their
platform is built on Python/Django and they write a lot of detailed
posts on topics such as how they set up their configuration management
and what to watch for when upgrading from Django 1.3.1 to 1.4.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.reddit.com/r/django"&gt;Django subreddit&lt;/a&gt;:
The Django subreddit often rolls up lesser-known blogs that have interesting
technical posts.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lincolnloop.com/blog/categories/django/"&gt;Lincoln Loop django tagged posts&lt;/a&gt;:
Lincoln Loop is a consulting practice based on user experience and building
services with the Python/Django stack. They write about a range of technical
topics but their Django specific posts are tagged with 'django'.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.askthepony.com/blog/"&gt;Ask the Pony blog&lt;/a&gt;:
A weekly updated blog, but unfortunately it seems to have gone silent
since August of 2011. Still some great existing posts on the site.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pydanny.com/"&gt;Pydanny's blog&lt;/a&gt;:
Daniel Greenfield (PyDanny) is an influential developer and blogger in
the Python world. He writes on general Python subjects as well as specific
Django topics of interest.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Fri, 22 Jun 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-06-22:favorite-django-article-sources.html</guid></item><item><title>Fabric Function For Rebuilding a Django MySQL Database</title><link>http://www.letshackdc.com/fabfile-function-rebuilding-django-mysql-database.html</link><description>&lt;p&gt;This is a very specific blog post on what my Fabric fabfile.py looks
like for rebuilding my database. This is particularly useful early in
a project lifecycle before I start using South for database migrations
and instead I am building new tables and columns at a fast clip.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;def rebuild_db():
  run(&amp;#39;mysql -u %s -p%s -e &amp;quot;drop database if exists %s&amp;quot;&amp;#39; % (env.db_user,
    env.db_passwd, env.db_schema))
  run(&amp;#39;mysql -u %s -p%s -e &amp;quot;create database %s&amp;quot;&amp;#39; % (env.db_user,
    env.db_passwd, env.db_schema))
  virtualenv(&amp;#39;python %smanage.py syncdb --noinput&amp;#39; % \
    env.deploy_dir)
  virtualenv(&amp;#39;python %smanage.py loaddata %s/core/&amp;#39; +
    &amp;#39;fixtures/test.json&amp;#39; % (env.deploy_dir, env.deploy_dir))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A few notes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;You should define env.db_user, env.db_passwd, env.db_schema,
env.deploy_dir in your fabfile before calling this function.&lt;/li&gt;
&lt;li&gt;I put my main test.json fixture under a &amp;quot;core&amp;quot; app directory. Parameterize
these settings if your project structure differs.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Tue, 12 Jun 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-06-12:fabfile-function-rebuilding-django-mysql-database.html</guid></item><item><title>Recent Python Posts</title><link>http://www.letshackdc.com/recent-python-posts.html</link><description>&lt;p&gt;I recently read and enjoyed the following Python blog posts (in no
particular order).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://me.veekun.com/blog/2012/05/23/python-faq-descriptors/"&gt;Python FAQ: Descriptors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.mikkolehtinen.com/blog/2012/05/25/rewindy-tech-stack/"&gt;Backbone/Python Tech Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python.org/release/3.1.5/howto/advocacy.html"&gt;Python Advocacy How To&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://satyajit.ranjeev.in/2012/05/17/python-a-few-things-to-remember.html"&gt;A Few Things to Remember While Coding in Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lukeplant.me.uk/blog/posts/some-quick-django-optimisation-lessons/"&gt;Some quick Django optimisation lessons&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Sun, 27 May 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-05-27:recent-python-posts.html</guid></item><item><title>wget and Proxy Servers</title><link>http://www.letshackdc.com/wget-proxy-servers.html</link><description>&lt;p&gt;Short answer: before you use wget, specify
'export http_proxy=my.proxy.server:port' then wget will use the proxy.&lt;/p&gt;
&lt;p&gt;I needed to grab some files with wget while working on a Linux server I was
setting up for a Django deployment. Unfortunately, I was behind a firewall
and had to use a specific proxy for HTTP connections.&lt;/p&gt;
&lt;p&gt;pip makes it easy, just do 'pip install --proxy my.proxy.server:8080 packages'
and I figured wget would have the same commandline argument to specify a
proxy. No such luck.&lt;/p&gt;
&lt;p&gt;I found the following link that specified
&lt;a class="reference external" href="http://www.linuxquestions.org/questions/linux-software-2/wget-with-proxy-276075/"&gt;'man wget' as the answer&lt;/a&gt; unhelpful (and a dick answer anyway).&lt;/p&gt;
&lt;p&gt;So for future reference, 'export http_proxy=my.proxy.server:port', will
specify a proxy server to use with wget. I also found
&lt;a class="reference external" href="http://www.gnu.org/software/wget/manual/html_node/Proxies.html"&gt;this proxies link&lt;/a&gt;
useful as well.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Thu, 24 May 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-05-24:wget-proxy-servers.html</guid></item><item><title>Recent Design Books</title><link>http://www.letshackdc.com/recent-design-books.html</link><description>&lt;p&gt;I recently purchased and read two design books,
&lt;a class="reference external" href="http://bootstrappingdesign.com/"&gt;Bootstrapping Design&lt;/a&gt; by Jarrod Drysdale
and
&lt;a class="reference external" href="http://sachagreif.com/ebook/"&gt;Step by Step UI Design&lt;/a&gt; by Sacha Greif. Both
books came out around the same time and were on the front page of Hacker News,
so they are linked in my brain and probably many other people's minds. I felt
I got a lot of value out of each book and for different reasons. If I
had to do it over again, I would still purchase both.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bootstrapping Design&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bootstrapping Design had a lot of specific advice for web application
designers. In particular, the chapters on typography and color were fantastic.
The typography advice on using a sans serif font for headlines and a serif
font for block text really improved my designs (which need to be incorporated
into this blog). The advice on choosing one color to start with and then
using a second color sparingly really helped get me past that initial hurdle
of uncertainty around picking color schemes.&lt;/p&gt;
&lt;p&gt;I've read the CRAP (Contrast, Repetition, Alignment, and Proximity) principles
before, so I had a general understanding of how to use them in good design.
Bootstrapping Design presented specific tips on how to handle each of these
principles in practice, which is often lacking from other books.&lt;/p&gt;
&lt;p&gt;Overall there were only two areas I could see improvement in this book. First,
incorporating a complete example (similar to how Step by Step UI Design
is presented) at the end of the book that reinforces the tips presented.
Second, the advice and tips presented were so useful I found myself saying,
&amp;quot;I really want more advice like this.&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step by Step UI Design&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Step by Step UI Design presents a complete example from start to finish of
a web application screen design. A Photoshop PSD is included in the deluxe
package of the book (I purchased this deluxe version). I found the PSD
useful while going through the book although I'm on the fence as to whether
I would spend the extra money for it if I had to do it over again.&lt;/p&gt;
&lt;p&gt;What I really liked about this book was that it was very practical and
focused on creating a single web application screen. The explanations
behind why certain design decisions were made opened
up the curtain as to what goes on in a designers' mind during the creation
process. As a software developer but non-design expert, the logical,
rational look at the process greatly appealed to my analytical method of
thinking.&lt;/p&gt;
&lt;p&gt;I found the book short enough to read in a single sitting. It is worth
several read-throughs simply because it is difficult to assimilate all the
details at once. When Step by Step UI Design is combined with Sacha's recent
&lt;a class="reference external" href="http://sachagreif.com/the-toolbox-from-idea-to-launch-in-10-hours/"&gt;post on the 10 hours it took to create The Toolbox&lt;/a&gt;  it provides a complete picture
of how to both come up with an idea, design it, and execute it quickly.&lt;/p&gt;
&lt;p&gt;Overall I am very pleased I purchased both of these design books. I recommend
them to fellow software developers who want to improve their design
thinking and have a more comfortable grasp on the design process.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Tue, 22 May 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-05-22:recent-design-books.html</guid></item><item><title>Advice to College Graduates</title><link>http://www.letshackdc.com/advice-college-graduates.html</link><description>&lt;p&gt;A couple of weekends ago, I watched my little brother Luke graduate from
&lt;a class="reference external" href="http://www.jmu.edu/"&gt;JMU&lt;/a&gt;. Dr. Rose, the outgoing President of JMU gave
the commencement address. I've attended &lt;a class="reference external" href="http://www.jmu.edu/"&gt;enough&lt;/a&gt;
&lt;a class="reference external" href="http://www.vt.edu/"&gt;graduation&lt;/a&gt; &lt;a class="reference external" href="http://www.virginia.edu/"&gt;ceremonies&lt;/a&gt;
to know that most of them sound the same and this speech by Dr. Rose was
no different. There is usually a whole lot of &amp;quot;be different&amp;quot; and &amp;quot;work hard&amp;quot;
with a lot of rah-rah and the occasional funny story thrown in.&lt;/p&gt;
&lt;p&gt;Tradition runs through all aspects of our higher education system and maybe
that's why most graduation speeches sound the same. But I believe that is a
disservice to undergraduates who are about to get a major shock when they
jump into the real world. So here are the key points I'd use in a speech.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;No one &amp;quot;owes&amp;quot; you anything&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Sure, you have a college degree from a &amp;quot;prestigious&amp;quot; university. So does
everyone else you're competing with. If you're from a privileged upper
middle class existence like me, you've been told how wonderful you are all
your life. Let's get it straight right now, &lt;em&gt;you don't matter for shit.&lt;/em&gt;
Once you accept that fact, you can begin to figure out how you actually
can build yourself into something that does matter to other people. You can
figure out how to make real a difference in the world. But before you figure
out how to make a difference...&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;&lt;strong&gt;Work like you have a chip on your shoulder&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Your first job out of college will have a lot of meaningless tasks thrown
at you. Work on them fervently and with passion. Learn everything you can
as quickly as possible and deliver great results, even if the tasks seem
&amp;quot;meaningless.&amp;quot; People will take note. They will give you more responsibility.
You will continue to learn and expand your horizon.&lt;/p&gt;
&lt;p&gt;Don't listen to people who tell you to slow down. Remember that
&lt;a class="reference external" href="http://sivers.org/kimo"&gt;there is no speed limit&lt;/a&gt;. Ignore anyone
that tells you that you are going to burn out or can't do it. Do you truly
want to work full-time and go to graduate school at the same time while
still enjoying yourself and meeting new people? Do it. Do everything with
a ferocity and determination. Once you can throw yourself into anything and
succeed...&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;&lt;strong&gt;Figure out how you will truly add value&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once you realize no one owes you anything and you decide to work with a
passionate intensity regardless of the tasks, figure out where you want
to add value. What's value? I highly recommend reading
&lt;a class="reference external" href="http://www.amazon.com/gp/product/1591843529/ref=as_li_ss_tl?ie=UTF8&amp;amp;tag=minimneeds-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=1591843529"&gt;The Personal MBA by Josh Kauffman&lt;/a&gt;. Whether you want to start your own business,
work in an existing corporation, or freelance with consulting work, that
book will help you put a framework around what you want to do with your
professional life.&lt;/p&gt;
&lt;p&gt;Those are the three main professional points of advice I give to any
college grad who wants to succeed and be happy in the real world. That isn't
&lt;em&gt;everything&lt;/em&gt; you need to know, but it will ultimately lead you in the
right professional direction.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Thu, 17 May 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-05-17:advice-college-graduates.html</guid></item><item><title>Stanford's CS183 Class Notes</title><link>http://www.letshackdc.com/stanford-cs-183-class-notes.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://blakemasters.tumblr.com/peter-thiels-cs183-startup"&gt;Stanford's CS183 class with Peter Thiel&lt;/a&gt; is simply amazing. A &lt;em&gt;huge&lt;/em&gt; thank you to Blake Masters
for writing up summaries of each class. Every class notes post I have read
has been amazingly insightful. I highly recommend checking it out if you
are interested in how technology is shaping the world and learning about
entrepreneurship from some of the major Silicon Valley investors.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 09 May 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-05-09:stanford-cs-183-class-notes.html</guid></item><item><title>Screencasting on Mac OS X</title><link>http://www.letshackdc.com/screencasting-software-for-mac-os-x.html</link><description>&lt;p&gt;I recently took a look at the range of screencasting software available
on Mac OS X for a couple of reasons. First, I want to have an easy way
of demoing software and uploading videos to Vimeo. Second, short
screencasts like the ones provided by
&lt;a class="reference external" href="http://www.teamtreehouse.com/"&gt;Treehouse&lt;/a&gt; (highly recommended site
for learning programming and web design by the way), are a great way to
help others learn new technologies. For example, yesterday I helped a
coworker set up static file serving from the Django built-in server used
for development. He was really close and just needed a few lines of code
to get it working. Blog posts are good for when you're searching for a
quick fix, but a short screencast that walks you through the whole process
is great too. So those scenarios are my basic use cases for screencasting.
Also, I don't mind paying for great software since I plan to use it almost
every day.&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;I downloaded and tried the following options:&lt;/dt&gt;
&lt;dd&gt;&lt;ol class="first last arabic simple"&gt;
&lt;li&gt;Quicktime Pro (built into Mac OS X) - free&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.shinywhitebox.com/ishowu-hd/"&gt;iShowU HD&lt;/a&gt; - $60 (for Pro)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.syniumsoftware.com/screenium/"&gt;Screenium&lt;/a&gt; - $40&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.telestream.net/screen-flow/"&gt;ScreenFlow&lt;/a&gt; - $99&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Here's what I thought of each product.&lt;/p&gt;
&lt;p&gt;I couldn't figure out how to get Quicktime Pro to both record the screen
and my microphone at the same time. I'm sure it's possible and I read you
can just record separately and put both of them together in iMovie but
I found that onerous. Scratch this one for serious screencasting.&lt;/p&gt;
&lt;p&gt;I really liked iShowU HD's feature for showing what you're typing on the
screen. I found it very slick and helpful to people watching the video. My
only hang up with it was that if I mistyped and was too slow in catching
myself, iShowU HD thought I was typing a separate block of text instead
of continuing with the existing line. Basically I needed to not make as
many mistakes - probably a good thing. I also liked that I could record
only a piece of the screen instead of recording the whole screen and editing
it later. The major downside to iShowU HD was that it did not have any
editing capabilities after the video was finished. I know I could use
iMovie or something like that but I prefer just staying in the program and
doing my work from there.&lt;/p&gt;
&lt;p&gt;Speaking of editing within the program, both Screenium and ScreenFlow
provide both recording and editing parts to the programs. This was
very appealing to me. I played around with Screenium and subjectively I
liked parts of it but did not like others. I created a couple of
short screencasts with Screenium and then did the same with ScreenFlow.
I felt like ScreenFlow just jived better with what I was trying to do
and was easier to use. The difference in price did not matter to me. I
have not gone ahead and purchased ScreenFlow but I plan to within the next
few days. My recommendation is if you want screencasting software with
editing capabilities, try both Screenflow and Screenium and see which one
fits you better.&lt;/p&gt;
&lt;p&gt;One last note: some of these products are now on the Mac App Store. I read
some pretty scathing reviews that the software did not work as well when
purchased from there. This may be becasue the software is new to the App
Store and it will get better. But do your due diligence to make sure you
do not end up with a neutered product due to the API limitations placed
on apps in the Mac OS X App Store.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Fri, 04 May 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-05-04:screencasting-software-for-mac-os-x.html</guid></item><item><title>Can't "Find" Developers? Increase Your Offer</title><link>http://www.letshackdc.com/pay-for-developers.html</link><description>&lt;p&gt;This little
&lt;a class="reference external" href="http://www.irrlicht3d.org/pivot/entry.php?id=1295"&gt;rant about paying developers what the market demands instead of complaining you can't find them&lt;/a&gt;
climbed its way up to the top of the
&lt;a class="reference external" href="http://news.ycombinator.com/"&gt;Hacker News&lt;/a&gt; charts this morning and for
good reason. While the blog post was written specifically for the Austrian
market, great software developers are in high demand everywhere.&lt;/p&gt;
&lt;p&gt;There is a limited supply of people with development skills. When
software developers' skills are used properly, there is great potential
for creating value in organizations ranging from startups to large
government and commercial organizations. I've seen many organization make
the mistake of paying as little as possible for their developers. That
is a losing strategy (one I often come into to try to fix - although
usually by then the organization is dug in too deep and is too far behind
the competition for it to matter).&lt;/p&gt;
&lt;p&gt;Great developers know their worth. They will seek out environments where
either the salary is high enough that they feel they are adequately
paid or compensated with a mix of salary, equity, and benefits. If you're
not able to &amp;quot;find&amp;quot; developers, increase your offer in salary, vacation
days, or some other compensation, such as 20% time for side projects.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Thu, 03 May 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-05-03:pay-for-developers.html</guid></item><item><title>MongoDB, node.js, and Backbone.js</title><link>http://www.letshackdc.com/mongodb-nodejs-backbonejs.html</link><description>&lt;p&gt;The concept of an all-JavaScript stack on both the client and server is
hardly new, but I'm finding the idea more appealing now that the projects
have matured. I see notifications like this
&lt;a class="reference external" href="http://www.marketwatch.com/story/10gen-committed-to-making-mongodb-de-facto-data-store-for-nodejs-applications-2012-04-25"&gt;press release by 10gen&lt;/a&gt;
that they are making a commitment to better integration with node.js.
Granted it is a press release, but I do see the effort 10gen is putting in
through the new tutorials and code releases for MongoDB.&lt;/p&gt;
&lt;p&gt;Python and Django continue to be my day job technologies of choice. They are
great for quickly building web applications. Python and Django are still
fun and productive. But it feels like there's an industry shift going on
that will continue to provide fuel to the all- or mostly-JavaScript stack.&lt;/p&gt;
&lt;p&gt;So I am starting a new side project with &lt;a class="reference external" href="http://www.mongodb.org/"&gt;MongoDB&lt;/a&gt;,
&lt;a class="reference external" href="http://nodejs.org/"&gt;node.js&lt;/a&gt;, and
&lt;a class="reference external" href="http://documentcloud.github.com/backbone/"&gt;Backbone.js&lt;/a&gt;. I know what the
project will be but I am not yet sure if I will just open source it or
make it a pay-for access web application.&lt;/p&gt;
&lt;p&gt;What do I currently find appealing about learning the
MongoDB/node.js/Backbone.js stack (there must be a better name for this
similar to the LAMP stack)?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Mastering JavaScript fundamentals&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Although I've written plenty of JQuery and standard JavaScript code,
I still don't feel like I &amp;quot;get it&amp;quot; when it comes to JavaScript fundamentals.
Part of learning this stack is figuring out how to do JavaScript the right
way.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Comparing a traditional LAMP stack with the node.js stack&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Non-blocking I/O on node.js sounds like it makes sense. But what does it
really mean when you get into the details? What are the real implications
for coding fast web applications? I'm curious to learn more about how
this works.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Is it fun?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As I wrote above, programming in Python/Django is &lt;em&gt;fun&lt;/em&gt;. Way more fun than
the Java code I used to write. I still cringe when thinking about how damn
difficult it was to write a web application in Struts. So will writing a
web application in node.js with a NoSQL MongoDB backend and a client-side
MVC framework be fun? I just don't know until I write a project with these
technologies.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 02 May 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-05-02:mongodb-nodejs-backbonejs.html</guid></item><item><title>Django Officially On Github</title><link>http://www.letshackdc.com/django-on-github.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt;, the web application framework
for perfectionists with deadlines, is now
&lt;a class="reference external" href="https://groups.google.com/forum/?fromgroups#!topic/django-developers/9--P57ezyBs"&gt;officially on Github&lt;/a&gt;. Welcome Django, it's about time you migrated
over!&lt;/p&gt;
&lt;p&gt;The code and documentation can now be found in the
&lt;a class="reference external" href="https://github.com/django/django"&gt;official repository&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Sat, 28 Apr 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-04-28:django-on-github.html</guid></item><item><title>Python &amp; MongoDB News</title><link>http://www.letshackdc.com/python-mongodb-news.html</link><description>&lt;p&gt;Yesterday had a couple of interesting Python &amp;amp; MongoDB related posts on
&lt;a class="reference external" href="http://news.ycombinator.com/"&gt;Hacker News&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first post was on
&lt;a class="reference external" href="http://isbullsh.it/2012/04/Web-crawling-with-scrapy/"&gt;scrapping websites with scrapy and storing the data in MongoDB&lt;/a&gt;. The post walks through establishing
the URL patterns to crawl then shows an example of how to set up the
MongoDB mapping in a .py file.&lt;/p&gt;
&lt;p&gt;The second post showed the results of a project to
&lt;a class="reference external" href="http://thomasst.ch/mongoadmin/"&gt;recreate the Django admin interface with Twitter Bootstrap for MongoDB backends&lt;/a&gt;. I've worked on several projects where
using MongoDB with Django would have been advantageous but recreating the
admin interface was a significant hurdle. It's great to see community projects
that break down these barriers.&lt;/p&gt;
&lt;p&gt;Hopefully future Django releases can incorporate some of this work to
make it easier to work with non-relational databases when necessary.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Tue, 24 Apr 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-04-24:python-mongodb-news.html</guid></item><item><title>Consolidation in the Python Hosting Industry</title><link>http://www.letshackdc.com/consolidation-python-hosting-industry.html</link><description>&lt;p&gt;The announcement yesterday about
&lt;a class="reference external" href="https://www.ep.io/blog/epio-closing-down/"&gt;Epio closing down&lt;/a&gt;
got me thinking about the Python PaaS industry. I did not have any personal
experience with Epio, but from the
&lt;a class="reference external" href="http://news.ycombinator.com/item?id=3860196"&gt;discussion on Hacker News&lt;/a&gt;
it sounded like these guys were top notch developers and just nice guys
in general. While it's difficult to see Epio's platform close down after
all the effort invested in it, I'm sure those guys will end up in a great
place. If they didn't already have multiple great job offers I'd be shocked.&lt;/p&gt;
&lt;p&gt;I've only personally used Google App Engine, Heroku, and Gondor PaaS,
Amazon Web Services IaaS, and Slicehost and Linode for virtual private
servers. I currently use Linode (for my side business) and Amazon Web Services  (for this blog plus side projects).&lt;/p&gt;
&lt;p&gt;Linode is great, especially when combined with Ubuntu images along with
Fabric and cuisine for server set up. Amazon Web Services is also a fantastic
platform when &lt;a class="reference external" href="https://github.com/boto/boto"&gt;boto&lt;/a&gt; is used to automate
EC2, S3, etc. Right now I'm very happy with the combination of those two
services.&lt;/p&gt;
&lt;p&gt;A few years ago I worked with Google App Engine both on side projects and
some client projects. I still have a certain gut reaction when I think about
using GAE. I liked the ease of deployment and the tie in to the Google APIs.
However, I was really concerned about the lock in since the Python code
I wrote had to be written in a certain way. The Python 2.5 restriction,
which is now lifted to 2.7, didn't bother me too much. The big thing for me
on GAE was the uncertainty over the eventual production costs (I used the beta
version). Those pricing fears proved to be
&lt;a class="reference external" href="http://www.informationweek.com/news/cloud-computing/platform/231600672"&gt;an issue&lt;/a&gt; for developers that went full-on in the platform. I'm glad I got out
when I did before production GAE went live.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://gondor.io/"&gt;Gondor&lt;/a&gt; seemed interesting, but I really only
played with the beta. I was concerned that they were too small to really be
a player in the field and
I didn't want to get locked to their platform. On the plus side, there really
wasn't much code modification necessary to deploy a Django project.&lt;/p&gt;
&lt;p&gt;Heroku is a great platform - assuming you work within the boundaries. I found
the shared database performance very limited. The performance was often
an order of magnitude worse than on a very small private VPS with PostgreSQL.
However the ease of deployment was fantastic. &amp;quot;git push heroku master&amp;quot; felt
just as natural as interacting with Github all day. I could easily see
getting into the workflow where the only platform a developer uses is
Heroku. The dedicated database cost did scare me though. If there were a
lower cost, $50/month instance, that might help. I'd have to do more
research at that point to do a cost/benefit analysis over AWS or a VPS.&lt;/p&gt;
&lt;p&gt;There's no silver bullet for Python developers looking to deploy on a PaaS.
Still, it's great to have options. For prototyping apps, Gondor and Heroku
make great choices (as long as you don't immediately need a lot of database
storage and performance). For production apps though, I still lean towards a
mix of AWS and virtual private servers.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Thu, 19 Apr 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-04-19:consolidation-python-hosting-industry.html</guid></item><item><title>Repository Structure and Python</title><link>http://www.letshackdc.com/repository-structure-and-python.html</link><description>&lt;p&gt;Kenneth Reitz has another great post on how to
&lt;a class="reference external" href="http://kennethreitz.com/repository-structure-and-python.html"&gt;structure repositories for Python projects&lt;/a&gt;. Repository structure is one of those topics
that everyone seems to come up with a slightly different way of doing so
it's great to see some direction from a leader in the Python field.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 18 Apr 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-04-18:repository-structure-and-python.html</guid></item><item><title>Django Nudge (django-nudge)</title><link>http://www.letshackdc.com/django-nudge.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://github.com/cfpb/django-nudge"&gt;Django Nudge&lt;/a&gt; (nudge) is an open
source Django application written by developers at the Consumer Financial
Protection Bureau. Nudge is designed to be the Django equivalent to Ramp
for WordPress.&lt;/p&gt;
&lt;p&gt;In a nutshell, Nudge allows content creators to develop their content on
a staging server. When the content is ready to go to production, Nudge
provides an admin interface for selecting only the pieces of content that
should be pushed to production. Nudge allows fine-grained control of which
content to push because not all content needs to go live at the same time.&lt;/p&gt;
&lt;p&gt;Considering how often Django is used in media companies, I was surprised
that I could not find another project that was equivalent to Nudge.
It's completely possible that this type of app has already been written
but never open sourced.&lt;/p&gt;
&lt;p&gt;Which brings me to another point: it's great to see the government open
source useful projects. When developers are thinking &amp;quot;hey this code will
actually see the light of day&amp;quot; there is a lot of motivation to get it
done right. Too often when I've consulted for other government
agencies so many corners are cut partially because developers know
that their project will never go to production or be open sourced.&lt;/p&gt;
&lt;p&gt;It's also great to see the &lt;a class="reference external" href="http://techcrunch.com/2012/04/09/u-s-consumer-financial-protection-bureau-gets-open-source-publishes-on-github/"&gt;positive press&lt;/a&gt;
and &lt;a class="reference external" href="http://radar.oreilly.com/2012/04/open-source-government-cfpb.html"&gt;recognition&lt;/a&gt; that CFPB received for being a forward-thinking government agency.&lt;/p&gt;
&lt;p&gt;We need more of this great work coming from the government. Let's hope
other agencies take note.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Tue, 17 Apr 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-04-17:django-nudge.html</guid></item><item><title>Django in Production</title><link>http://www.letshackdc.com/django-in-production.html</link><description>&lt;p&gt;Django is easy to get started with, especially if you already have a
programming background in a &amp;quot;heavier&amp;quot; language like Java. When I first
started creating websites with Django 0.96, I was programming Java systems
during the day and relaxed in the evenings by using Python/Django. I found
the speed at which I could create sites allowed me to feel like I was
accomplishing something even though I did not have full days to focus on
side project development.&lt;/p&gt;
&lt;p&gt;One of the hurdles I found with Django was just figuring out how to deploy
the projects to a production server. &amp;quot;python manage.py runserver&amp;quot; wasn't
going to cut it. In addition, once I got the sites live, I was not sure
of how to properly monitor them. The following links helped me a lot to
learn what the &amp;quot;big boys&amp;quot; in the Django space were using in production:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://f.souza.cc/2011/11/setting-up-a-django-production-environment-compiling-and-configuring-nginx/"&gt;Setting up a Production Django Environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://instagram-engineering.tumblr.com/post/20541814340/keeping-instagram-up-with-over-a-million-new-users-in"&gt;Instagram Production Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tech.yipit.com/2011/12/15/introducing-xenia-smart-monitoring-of-custom-application-level-metrics/"&gt;Yipit Monitoring Key Metrics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.robgolding.com/blog/2011/11/12/django-in-production-part-1---the-stack/"&gt;Django in Production - Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.sparklewise.com/django-settings-for-production-and-development-best-practices/"&gt;Django Settings for Production and Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://adrian.org.ar/python/automatic-setup-of-django-nginx-and-gunicorn-on-ec2"&gt;Automatic Set Up of Django With nginx &amp;amp; gunicorn&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Those are the best articles I've come across recently that I wish I had when
I first started deploying Django projects (to be fair, those links didn't
yet exist nor did many of the technologies that are now commonplace).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Mon, 16 Apr 2012 00:00:00 -0400</pubDate><guid>tag:www.letshackdc.com,2012-04-16:django-in-production.html</guid></item><item><title>"DevOps is Ruining My Craft"</title><link>http://www.letshackdc.com/devops-ruining-my-craft.html</link><description>&lt;p&gt;This &lt;a class="reference external" href="http://tatiyants.com/devops-is-ruining-my-craft/"&gt;DevOps blog post&lt;/a&gt;
is a great satirical take on the automation and DevOps movement. The post
is written as an &amp;quot;interview&amp;quot; with a current sysadmin and it's definitely
worth the quick read.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Thu, 23 Feb 2012 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2012-02-23:devops-ruining-my-craft.html</guid></item><item><title>Python Context Managers</title><link>http://www.letshackdc.com/python-context-managers.html</link><description>&lt;p&gt;During my talk to django-district last night, I explained that Django
1.4 drops support for Python 2.4 because the core committers wanted to
use Python's context managers. Python 2.4 would not suffice because
context managers are a
&lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0343/"&gt;Python 2.5+ feature&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Someone in the audience asked what a context manager is, and I was annoyed
with myself for not having a clear, concise answer. So to paraphrase the
old saying, now &amp;quot;there's a blog post for that.&amp;quot;&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Python Context Managers&lt;/h2&gt;
&lt;p&gt;A context manager is created syntactically using the 'with' statement.
Here is an example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;with open(&amp;quot;example.txt&amp;quot;) as f:
    data = f.read()
    print len(data)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The code above opens a file, reads its contents, and prints the length
of the string read from the file. Since we are using the with statement,
the file will always be closed after it is read. This behavior is because
the 'with' statement performs actions on entry (the __enter__ method)
and on exit (the __exit__ method), regardless of how the block of code
exits. See this
&lt;a class="reference external" href="http://preshing.com/20110920/the-python-with-statement-by-example"&gt;blog post with a detailed explanation&lt;/a&gt;
of the process a context manager runs through.&lt;/p&gt;
&lt;p&gt;The context manager essentially can be thought of as an alternative to a try-finally block (before context managers these blocks were more common). So the concise way of explaining a context manager is that it is a statement that defines the runtime context for how a block of code should be executed. Context managers are particularly useful for locking/unlocking as well as setting or reseting state before a code block is executed.&lt;/p&gt;
&lt;div class="section" id="references"&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;[1] &lt;a class="reference external" href="http://preshing.com/20110920/the-python-with-statement-by-example"&gt;http://preshing.com/20110920/the-python-with-statement-by-example&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[2] &lt;a class="reference external" href="http://effbot.org/zone/python-with-statement.htm"&gt;http://effbot.org/zone/python-with-statement.htm&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 22 Feb 2012 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2012-02-22:python-context-managers.html</guid></item><item><title>Django 1.4 Beta Released</title><link>http://www.letshackdc.com/django-1-4-beta-released.html</link><description>&lt;p&gt;The Django 1.4 beta release is
&lt;a class="reference external" href="https://www.djangoproject.com/weblog/2012/feb/15/14-beta-1/"&gt;now available&lt;/a&gt;
for testing.&lt;/p&gt;
&lt;p&gt;Although the 1.4 beta can be
&lt;a class="reference external" href="https://www.djangoproject.com/download/"&gt;downloaded as a package&lt;/a&gt;,
it's probably best to get it from the SVN development branch (also mirrored
on github) so you can update and take advantage of bug fixes as they are
incorporated into the code base.&lt;/p&gt;
&lt;p&gt;For more information on the new features coming in 1.4, come see
&lt;a class="reference external" href="http://www.mattmakai.com/blog/django-district-feb-meetup-lightning-talk/"&gt;my talk on Tuesday night's Django District meetup in DC&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Thu, 16 Feb 2012 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2012-02-16:django-1-4-beta-released.html</guid></item><item><title>Django District February Meetup Lightning Talk</title><link>http://www.letshackdc.com/django-district-feb-meetup-lightning-talk.html</link><description>&lt;p&gt;I'll be giving a 10 minute lightning talk on updates and incompatibilities in
the upcoming &lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/releases/1.4/"&gt;Django 1.4 release&lt;/a&gt;. If you're interested in Python/Django and want to hear more,
&lt;a class="reference external" href="http://www.django-district.org/events/48873672/"&gt;RSVP on meetup.com&lt;/a&gt;.
There will be some other great talks as well on EC2 + github integration,
monitoring your apps with Graphite and Sentry, and Django chartit.&lt;/p&gt;
&lt;p&gt;My impress.js slides for the talk will be posted on this site over the weekend.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 15 Feb 2012 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2012-02-15:django-district-feb-meetup-lightning-talk.html</guid></item><item><title>Django 1.4 Requires Python 2.5+</title><link>http://www.letshackdc.com/django-1-4-requires-python-2-5.html</link><description>&lt;p&gt;Django 1.4 is the first Django release to
&lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/releases/1.4/#backwards-incompatible-changes-in-1-4"&gt;remove support for Python 2.4&lt;/a&gt;. This change is an expected
for two reasons. First, beginning with Django 1.2, Python 2.3 support
was dropped and the community was notified that Django 1.4 would again
increment the required Python version. Second, the Django core
developers need &lt;a class="reference external" href="http://mmakai.com/post/8732320824/django-1-4-and-beyond"&gt;support for context managers&lt;/a&gt;, which were added in Python 2.5.&lt;/p&gt;
&lt;p&gt;Note that although Django 1.4 supports Python 2.5+, it does not
yet support Python 3.x. Although progress has been made porting Django
to Python 3.x, it is not fully tested or ready for release as specified
in Django's release process.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 25 Jan 2012 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2012-01-25:django-1-4-requires-python-2-5.html</guid></item><item><title>What the Django's ORM Author Hates About It</title><link>http://www.letshackdc.com/what-author-django-orm-hates-about-it.html</link><description>&lt;p&gt;Alex Gaynor, a Django core committer and author of much of the
object-relational mapping (ORM) code,
&lt;a class="reference external" href="http://speakerdeck.com/u/alex/p/why-i-hate-the-django-orm"&gt;gave a presentation&lt;/a&gt; on what he hates about the mapping layer. Every ORM layer in
existence has issues, especially for edge cases, but Django's has
been criticized lately for
&lt;a class="reference external" href="http://www.nitinh.com/2009/02/why-django-orm-sucks-it-takes-a-hell-lot-of-memory-in-processing/"&gt;various&lt;/a&gt;
&lt;a class="reference external" href="http://jeffcroft.com/blog/2008/jul/25/top-ten-things-suck-about-django-revisited/"&gt;reasons&lt;/a&gt;.
Alex's presentation addresses concerns are in three areas of the ORM layer:&lt;/p&gt;
&lt;p&gt;1. Inconsistencies in querying syntax are confusing and were
built up without an overall strategy over time&lt;/p&gt;
&lt;p&gt;2. Complex queries are virtually impossible with the existing syntax,
especially compared to SQLAlchemy&lt;/p&gt;
&lt;p&gt;3. Aggregation queries take strings instead of objects, which is
inconsistent with other query types and limits the aggregation
queries' usefulness&lt;/p&gt;
&lt;p&gt;Alex's point during the presentation is to bring up the most glaring issues,
show why they need to be fixed in future Django releases, and move the
Django ORM from an &amp;quot;80/20&amp;quot; solution closer to a &amp;quot;90/10&amp;quot; solution that
is easier to apply across a broader set of use cases.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://speakerdeck.com/u/alex/p/why-i-hate-the-django-orm"&gt;Why I hate the Django ORM&lt;/a&gt; (Speaker Deck)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Fri, 20 Jan 2012 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2012-01-20:what-author-django-orm-hates-about-it.html</guid></item><item><title>The Seven Steps</title><link>http://www.letshackdc.com/the-seven-steps.html</link><description>&lt;p&gt;There are at least seven distinct steps towards Internet entrepreneurship.
I'll begin with the caveat that these seven steps only apply in the
Internet space and not other avenues such as starting a bakery.
From my (limited) experience, everyone goes through these steps in
order. Some steps take hours, while others can take years.&lt;/p&gt;
&lt;p&gt;The seven steps are:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Putting something online through a platform such as Tumblr, spreading
the word, receiving critical feedback, and improving your work&lt;/li&gt;
&lt;li&gt;Building and putting out any type of website of your own creation&lt;/li&gt;
&lt;li&gt;Building a site conceived from your own idea with potential
for monetization&lt;/li&gt;
&lt;li&gt;Launching your first web application with a sign up process and
methods for payments&lt;/li&gt;
&lt;li&gt;Getting your first paying customer, obtaining feedback, and
improving your product&lt;/li&gt;
&lt;li&gt;Having a steady stream of customers&lt;/li&gt;
&lt;li&gt;Becoming profitable, growing your customer base, and increasing
your product's value to your customers&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By understanding these seven steps, you can assess your own position
and determine how you can take the next step. The goal
is not to rush through each step to get to the next one, but instead
to learn at each milestone. Become comfortable with yourself, your
own skills, and determine what aspects you need to improve.&lt;/p&gt;
&lt;p&gt;For example, I created many sites with Python and Django in 2009. I
designed, developed, and deployed them, learning a lot about
Django's best practices and Linux system administration in the
process. However, I realized I had (and still have to some extent)
a deficiency in design. I knew that before I could take the next
step towards building a site that could be monetized and feel good
about it, I needed to learn better design and get to know more
people who could give me honest, critical feedback on my website designs.&lt;/p&gt;
&lt;p&gt;Once I spent several months reading, drawing, building, and
discussing designs, I felt more comfortable that I could take the
next step. About six months and a lot of late nights later, I
launched &lt;a class="reference external" href="https://www.proofdriven.com/"&gt;ProofDriven&lt;/a&gt; with a
reasonable design I was okay starting with that I knew I could
improve as I grow more comfortable in this step. Eventually I
can look ahead to the next step in the path towards Internet
entrepreneurship.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Wed, 18 Jan 2012 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2012-01-18:the-seven-steps.html</guid></item><item><title>Specify HTML File for PhoneGap and iOS</title><link>http://www.letshackdc.com/specify-html-file-phonegap-ios.html</link><description>&lt;p&gt;When working with iOS applications and using PhoneGap, you'll often want to
use a different file name than &amp;quot;index.html&amp;quot; for your first page. This can be
tricky for first time PhoneGap/iOS developers because there is no stub
function or properties file for specifying the file like there is in Android
and BlackBerry projects.&lt;/p&gt;
&lt;p&gt;In your AppDelegate.m file, add the following method and change the return
value to the HTML file you want to use.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;+ (NSString*) startPage
{
  return @&amp;quot;different.html&amp;quot;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bonus: you can also use this to specify a different path than www. For
example, if you have a combined Android and iOS project where Android
requires the assets directory, specify &amp;quot;../assets/www/yourfile.html&amp;quot; as
the return value.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Thu, 05 Jan 2012 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2012-01-05:specify-html-file-phonegap-ios.html</guid></item><item><title>Heroku on Ubuntu 10.04</title><link>http://www.letshackdc.com/heroku-ubuntu-10-04.html</link><description>&lt;p&gt;A couple of guys from Heroku gave a talk tonight at DC Python and it looked
like a good solution for running small sites. However, I was disappointed that
set up was more difficult on Ubuntu 10.04 than turn key installers on Windows
and Mac OS X. The set up
&lt;a class="reference external" href="http://toolbelt.herokuapp.com/linux/readme"&gt;instructions&lt;/a&gt; required a few
modifications to work properly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-add-repository &amp;#39;deb http://toolbelt.herokuapp.com/ubuntu ./&amp;#39;
curl https://toolbelt.herokuapp.com/apt/release.key | sudo apt-key add -
sudo apt-get update
sudo apt-get install heroku-toolbelt
sudo apt-get install ruby libopenssl-ruby ruby1.8-dev
sudo apt-get install libreadline-ruby
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Type &amp;quot;heroku&amp;quot; at the command line to check that the installation is working
properly.&lt;/p&gt;
&lt;p&gt;Sources:&lt;/p&gt;
&lt;p&gt;[1] &lt;a class="reference external" href="http://wmilesn.com/2011/10/code/avoiding-pitfalls-when-setting-up-heroku-for-node-js-on-ubuntu/"&gt;http://wmilesn.com/2011/10/code/avoiding-pitfalls-when-setting-up-heroku-for-node-js-on-ubuntu/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[2] &lt;a class="reference external" href="http://rukuro-blog.heroku.com/2011/05/11/ruby-readline-loaderror"&gt;http://rukuro-blog.heroku.com/2011/05/11/ruby-readline-loaderror&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Tue, 03 Jan 2012 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2012-01-03:heroku-ubuntu-10-04.html</guid></item><item><title>Impress.js With Presentation Pointers</title><link>http://www.letshackdc.com/impress-js-works-with-presentation-pointers.html</link><description>&lt;p&gt;I saw &lt;a class="reference external" href="https://github.com/bartaz/impress.js"&gt;impress.js&lt;/a&gt;, a really cool CSS3
transformation-based presentation Javascript library on Hacker News yesterday.
The &lt;a class="reference external" href="http://bartaz.github.com/impress.js/"&gt;demo&lt;/a&gt; is flashy - similar to Prezi
but without Flash, plus new 3D effects. The only downside compared to an
established browser slideshow library such as
&lt;a class="reference external" href="https://github.com/geraldb/s6"&gt;S6&lt;/a&gt; was
that my Logitech presentation pointer didn't work for advancing and
reversing the slides.&lt;/p&gt;
&lt;p&gt;After a little digging, I found out that presentation pointers emulate page
up/down key strokes. So I
&lt;a class="reference external" href="https://github.com/makaimc/impress.js"&gt;forked the impress.js&lt;/a&gt;
library, updated the code, and issued a
&lt;a class="reference external" href="https://github.com/bartaz/impress.js/pull/15"&gt;pull request&lt;/a&gt; to add
the presentation pointer capability. Thanks to
&lt;a class="reference external" href="https://github.com/bartaz"&gt;Bartek&lt;/a&gt;'s quick response,
the pull request was merged and closed just a few hours later. So now
presentation pointers work great with impress.js.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai</dc:creator><pubDate>Mon, 02 Jan 2012 00:00:00 -0500</pubDate><guid>tag:www.letshackdc.com,2012-01-02:impress-js-works-with-presentation-pointers.html</guid></item></channel></rss>